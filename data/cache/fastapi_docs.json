{
  "library": "fastapi",
  "base_url": "https://fastapi.tiangolo.com/",
  "pages": [
    {
      "url": "https://fastapi.tiangolo.com/",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI Table of contents Sponsors Opinions Typer, the FastAPI of CLIs Requirements Installation Example Create it Run it Check it Interactive API docs Alternative API docs Example upgrade Interactive API docs upgrade Alternative API docs upgrade Recap Performance Dependencies standard Dependencies Without standard Dependencies Additional Optional Dependencies License Features Learn Learn Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes Table of contents Sponsors Opinions Typer, the FastAPI of CLIs Requirements Installation Example Create it Run it Check it Interactive API docs Alternative API docs Example upgrade Interactive API docs upgrade Alternative API docs upgrade Recap Performance Dependencies standard Dependencies Without standard Dependencies Additional Optional Dependencies License FastAPI FastAPI framework, high performance, easy to learn, fast to code, ready for production Documentation: https://fastapi.tiangolo.com Source Code: https://github.com/fastapi/fastapi FastAPI is a modern, fast (high-performance), web framework for building APIs with Python based on standard Python type hints. The key features are: Fast: Very high performance, on par with NodeJS and Go (thanks to Starlette and Pydantic). One of the fastest Python frameworks available. Fast to code: Increase the speed to develop features by about 200 to 300. * Fewer bugs: Reduce about 40 of human (developer) induced errors. * Intuitive: Great editor support. Completion everywhere. Less time debugging. Easy: Designed to be easy to use and learn. Less time reading docs. Short: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs. Robust: Get production-ready code. With automatic interactive documentation. Standards-based: Based on (and fully compatible with) the open standards for APIs: OpenAPI (previously known as Swagger) and JSON Schema. * estimation based on tests on an internal development team, building production applications. Sponsors Other sponsors Opinions \"[...] I'm using FastAPI a ton these days. [...] I'm actually planning to use it for all of my team's ML services at Microsoft. Some of them are getting integrated into the core Windows product and some Office products.\" Kabir Khan - Microsoft (ref) \"We adopted the FastAPI library to spawn a REST server that can be queried to obtain predictions. [for Ludwig]\" Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref) \"Netflix is pleased to announce the open-source release of our crisis management orchestration framework: Dispatch! [built with FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Im over the moon excited about FastAPI. Its so fun!\" Brian Okken - Python Bytes podcast host (ref) \"Honestly, what you've built looks super solid and polished. In many ways, it's what I wanted Hug to be - it's really inspiring to see someone build that.\" Timothy Crosley - Hug creator (ref) \"If you're looking to learn one modern framework for building REST APIs, check out FastAPI [...] It's fast, easy to use and easy to learn [...]\" \"We've switched over to FastAPI for our APIs [...] I think you'll like it [...]\" Ines Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref) \"If anyone is looking to build a production Python API, I would highly recommend FastAPI. It is beautifully designed, simple to use and highly scalable, it has become a key component in our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer.\" Deon Pillsbury - Cisco (ref) Typer, the FastAPI of CLIs If you are building a CLI app to be used in the terminal instead of a web API, check out Typer. Typer is FastAPI's little sibling. And it's intended to be the FastAPI of CLIs.   Requirements FastAPI stands on the shoulders of giants: Starlette for the web parts. Pydantic for the data parts. Installation Create and activate a virtual environment and then install FastAPI:  pip install \"fastapi[standard]\" --- 100 Note: Make sure you put \"fastapi[standard]\" in quotes to ensure it works in all terminals. Example Create it Create a file main.py with: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Or use async def... If your code uses async / await, use async def: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Note: If you don't know, check the \"In a hurry?\" section about async and await in the docs. Run it Run the server with:  fastapi dev main.py  FastAPI CLI - Development mode     Serving at: http://127.0.0.1:8000     API docs: http://127.0.0.1:8000/docs     Running in development mode, for production use:     fastapi run     INFO: Will watch for changes in these directories: ['/home/user/code/awesomeapp'] INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [2248755] using WatchFiles INFO: Started server process [2248757] INFO: Waiting for application startup. INFO: Application startup complete. About the command fastapi dev main.py... The command fastapi dev reads your main.py file, detects the FastAPI app in it, and starts a server using Uvicorn. By default, fastapi dev will start with auto-reload enabled for local development. You can read more about it in the FastAPI CLI docs. Check it Open your browser at http://127.0.0.1:8000/items/5?q=somequery. You will see the JSON response as: {\"item_id\": 5, \"q\": \"somequery\"} You already created an API that: Receives HTTP requests in the paths / and /items/{item_id}. Both paths take GET operations (also known as HTTP methods). The path /items/{item_id} has a path parameter item_id that should be an int. The path /items/{item_id} has an optional str query parameter q. Interactive API docs Now go to http://127.0.0.1:8000/docs. You will see the automatic interactive API documentation (provided by Swagger UI): Alternative API docs And now, go to http://127.0.0.1:8000/redoc. You will see the alternative automatic documentation (provided by ReDoc): Example upgrade Now modify the file main.py to receive a body from a PUT request. Declare the body using standard Python types, thanks to Pydantic. from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} The fastapi dev server should reload automatically. Interactive API docs upgrade Now go to http://127.0.0.1:8000/docs. The interactive API documentation will be automatically updated, including the new body: Click on the button \"Try it out\", it allows you to fill the parameters and directly interact with the API: Then click on the \"Execute\" button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen: Alternative API docs upgrade And now, go to http://127.0.0.1:8000/redoc. The alternative documentation will also reflect the new query parameter and body: Recap In summary, you declare once the types of parameters, body, etc. as function parameters. You do that with standard modern Python types. You don't have to learn a new syntax, the methods or classes of a specific library, etc. Just standard Python. For example, for an int: item_id: int or for a more complex Item model: item: Item ...and with that single declaration you get: Editor support, including: Completion. Type checks. Validation of data: Automatic and clear errors when the data is invalid. Validation even for deeply nested JSON objects. Conversion of input data: coming from the network to Python data and types. Reading from: JSON. Path parameters. Query parameters. Cookies. Headers. Forms. Files. Conversion of output data: converting from Python data and types to network data (as JSON): Convert Python types (str, int, float, bool, list, etc). datetime objects. UUID objects. Database models. ...and many more. Automatic interactive API documentation, including 2 alternative user interfaces: Swagger UI. ReDoc. Coming back to the previous code example, FastAPI will: Validate that there is an item_id in the path for GET and PUT requests. Validate that the item_id is of type int for GET and PUT requests. If it is not, the client will see a useful, clear error. Check if there is an optional query parameter named q (as in http://127.0.0.1:8000/items/foo?q=somequery) for GET requests. As the q parameter is declared with = None, it is optional. Without the None it would be required (as is the body in the case with PUT). For PUT requests to /items/{item_id}, read the body as JSON: Check that it has a required attribute name that should be a str. Check that it has a required attribute price that has to be a float. Check that it has an optional attribute is_offer, that should be a bool, if present. All this would also work for deeply nested JSON objects. Convert from and to JSON automatically. Document everything with OpenAPI, that can be used by: Interactive documentation systems. Automatic client code generation systems, for many languages. Provide 2 interactive documentation web interfaces directly. We just scratched the surface, but you already get the idea of how it all works. Try changing the line with: return {\"item_name\": item.name, \"item_id\": item_id} ...from: ... \"item_name\": item.name ... ...to: ... \"item_price\": item.price ... ...and see how your editor will auto-complete the attributes and know their types: For a more complete example including more features, see the Tutorial - User Guide. Spoiler alert: the tutorial - user guide includes: Declaration of parameters from other different places as: headers, cookies, form fields and files. How to set validation constraints as maximum_length or regex. A very powerful and easy to use Dependency Injection system. Security and authentication, including support for OAuth2 with JWT tokens and HTTP Basic auth. More advanced (but equally easy) techniques for declaring deeply nested JSON models (thanks to Pydantic). GraphQL integration with Strawberry and other libraries. Many extra features (thanks to Starlette) as: WebSockets extremely easy tests based on HTTPX and pytest CORS Cookie Sessions ...and more. Performance Independent TechEmpower benchmarks show FastAPI applications running under Uvicorn as one of the fastest Python frameworks available, only below Starlette and Uvicorn themselves (used internally by FastAPI). (*) To understand more about it, see the section Benchmarks. Dependencies FastAPI depends on Pydantic and Starlette. standard Dependencies When you install FastAPI with pip install \"fastapi[standard]\" it comes with the standard group of optional dependencies: Used by Pydantic: email-validator - for email validation. Used by Starlette: httpx - Required if you want to use the TestClient. jinja2 - Required if you want to use the default template configuration. python-multipart - Required if you want to support form \"parsing\", with request.form(). Used by FastAPI / Starlette: uvicorn - for the server that loads and serves your application. This includes uvicorn[standard], which includes some dependencies (e.g. uvloop) needed for high performance serving. fastapi-cli - to provide the fastapi command. Without standard Dependencies If you don't want to include the standard optional dependencies, you can install with pip install fastapi instead of pip install \"fastapi[standard]\". Additional Optional Dependencies There are some additional dependencies you might want to install. Additional optional Pydantic dependencies: pydantic-settings - for settings management. pydantic-extra-types - for extra types to be used with Pydantic. Additional optional FastAPI dependencies: orjson - Required if you want to use ORJSONResponse. ujson - Required if you want to use UJSONResponse. License This project is licensed under the terms of the MIT license. Back to top",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install \"fastapi[standard]\"\n\n---> 100%",
        "$ pip install \"fastapi[standard]\"\n\n---> 100%",
        "\"fastapi[standard]\"",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "$ fastapi dev main.py\n\n \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 FastAPI CLI - Development mode \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n \u2502                                                     \u2502\n \u2502  Serving at: http://127.0.0.1:8000                  \u2502\n \u2502                                                     \u2502\n \u2502  API docs: http://127.0.0.1:8000/docs               \u2502\n \u2502                                                     \u2502\n \u2502  Running in development mode, for production use:   \u2502\n \u2502                                                     \u2502\n \u2502  fastapi run                                        \u2502\n \u2502                                                     \u2502\n \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ fastapi dev main.py\n\n \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 FastAPI CLI - Development mode \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n \u2502                                                     \u2502\n \u2502  Serving at: http://127.0.0.1:8000                  \u2502\n \u2502                                                     \u2502\n \u2502  API docs: http://127.0.0.1:8000/docs               \u2502\n \u2502                                                     \u2502\n \u2502  Running in development mode, for production use:   \u2502\n \u2502                                                     \u2502\n \u2502  fastapi run                                        \u2502\n \u2502                                                     \u2502\n \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "fastapi dev main.py",
        "fastapi dev",
        "fastapi dev",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "fastapi dev",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "pip install \"fastapi[standard]\"",
        "email-validator",
        "python-multipart",
        "request.form()",
        "uvicorn[standard]",
        "fastapi-cli",
        "pip install fastapi",
        "pip install \"fastapi[standard]\"",
        "pydantic-settings",
        "pydantic-extra-types",
        "ORJSONResponse",
        "UJSONResponse"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI Table of contents Sponsors Opinions Typer, the FastAPI of CLIs Requirements Installation Example Create it Run it Check it Interactive API docs Alternative API docs Example upgrade Interactive API docs upgrade Alternative API docs upgrade Recap Performance Dependencies standard Dependencies Without standard Dependencies Additional Optional Dependencies License Features Learn Learn Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes Table of contents Sponsors Opinions Typer, the FastAPI of CLIs Requirements Installation Example Create it Run it Check it Interactive API docs Alternative API docs Example upgrade Interactive API docs upgrade Alternative API docs upgrade Recap Performance Dependencies standard Dependencies Without standard Dependencies Additional Optional Dependencies License FastAPI FastAPI framework, high performance, easy to learn, fast to code, ready for production Documentation: https://fastapi",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com Source Code: https://github com/fastapi/fastapi FastAPI is a modern, fast (high-performance), web framework for building APIs with Python based on standard Python type hints The key features are: Fast: Very high performance, on par with NodeJS and Go (thanks to Starlette and Pydantic) One of the fastest Python frameworks available Fast to code: Increase the speed to develop features by about 200 to 300 * Fewer bugs: Reduce about 40 of human (developer) induced errors",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "* Intuitive: Great editor support Completion everywhere Less time debugging Easy: Designed to be easy to use and learn Less time reading docs Short: Minimize code duplication Multiple features from each parameter declaration Fewer bugs Robust: Get production-ready code With automatic interactive documentation Standards-based: Based on (and fully compatible with) the open standards for APIs: OpenAPI (previously known as Swagger) and JSON Schema",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "* estimation based on tests on an internal development team, building production applications Sponsors Other sponsors Opinions \"[ ] I'm using FastAPI a ton these days [ ] I'm actually planning to use it for all of my team's ML services at Microsoft Some of them are getting integrated into the core Windows product and some Office products \" Kabir Khan - Microsoft (ref) \"We adopted the FastAPI library to spawn a REST server that can be queried to obtain predictions",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "[for Ludwig]\" Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref) \"Netflix is pleased to announce the open-source release of our crisis management orchestration framework: Dispatch [built with FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Im over the moon excited about FastAPI Its so fun \" Brian Okken - Python Bytes podcast host (ref) \"Honestly, what you've built looks super solid and polished",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "In many ways, it's what I wanted Hug to be - it's really inspiring to see someone build that \" Timothy Crosley - Hug creator (ref) \"If you're looking to learn one modern framework for building REST APIs, check out FastAPI [ ] It's fast, easy to use and easy to learn [ ]\" \"We've switched over to FastAPI for our APIs [ ] I think you'll like it [",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "]\" Ines Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref) \"If anyone is looking to build a production Python API, I would highly recommend FastAPI It is beautifully designed, simple to use and highly scalable, it has become a key component in our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "\" Deon Pillsbury - Cisco (ref) Typer, the FastAPI of CLIs If you are building a CLI app to be used in the terminal instead of a web API, check out Typer Typer is FastAPI's little sibling And it's intended to be the FastAPI of CLIs Requirements FastAPI stands on the shoulders of giants: Starlette for the web parts Pydantic for the data parts",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "Installation Create and activate a virtual environment and then install FastAPI:  pip install \"fastapi[standard]\" --- 100 Note: Make sure you put \"fastapi[standard]\" in quotes to ensure it works in all terminals Example Create it Create a file main py with: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Or use async def If your code uses async / await, use async def: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Note: If you don't know, check the \"In a hurry",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "\" section about async and await in the docs Run it Run the server with:  fastapi dev main py  FastAPI CLI - Development mode     Serving at: http://127 0 0 1:8000     API docs: http://127 0 0 1:8000/docs     Running in development mode, for production use:     fastapi run     INFO: Will watch for changes in these directories: ['/home/user/code/awesomeapp'] INFO: Uvicorn running on http://127 0 0",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "1:8000 (Press CTRL+C to quit) INFO: Started reloader process [2248755] using WatchFiles INFO: Started server process [2248757] INFO: Waiting for application startup INFO: Application startup complete About the command fastapi dev main py The command fastapi dev reads your main py file, detects the FastAPI app in it, and starts a server using Uvicorn By default, fastapi dev will start with auto-reload enabled for local development You can read more about it in the FastAPI CLI docs",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "Check it Open your browser at http://127 0 0 1:8000/items/5 q=somequery You will see the JSON response as: {\"item_id\": 5, \"q\": \"somequery\"} You already created an API that: Receives HTTP requests in the paths / and /items/{item_id} Both paths take GET operations (also known as HTTP methods) The path /items/{item_id} has a path parameter item_id that should be an int The path /items/{item_id} has an optional str query parameter q Interactive API docs Now go to http://127 0 0 1:8000/docs",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "You will see the automatic interactive API documentation (provided by Swagger UI): Alternative API docs And now, go to http://127 0 0 1:8000/redoc You will see the alternative automatic documentation (provided by ReDoc): Example upgrade Now modify the file main py to receive a body from a PUT request Declare the body using standard Python types, thanks to Pydantic",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "name, \"item_id\": item_id} The fastapi dev server should reload automatically Interactive API docs upgrade Now go to http://127 0 0 1:8000/docs",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "The interactive API documentation will be automatically updated, including the new body: Click on the button \"Try it out\", it allows you to fill the parameters and directly interact with the API: Then click on the \"Execute\" button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen: Alternative API docs upgrade And now, go to http://127 0 0 1:8000/redoc",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "The alternative documentation will also reflect the new query parameter and body: Recap In summary, you declare once the types of parameters, body, etc as function parameters You do that with standard modern Python types You don't have to learn a new syntax, the methods or classes of a specific library, etc Just standard Python For example, for an int: item_id: int or for a more complex Item model: item: Item and with that single declaration you get: Editor support, including: Completion",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "Type checks Validation of data: Automatic and clear errors when the data is invalid Validation even for deeply nested JSON objects Conversion of input data: coming from the network to Python data and types Reading from: JSON Path parameters Query parameters Cookies Headers Forms Files Conversion of output data: converting from Python data and types to network data (as JSON): Convert Python types (str, int, float, bool, list, etc) datetime objects UUID objects Database models and many more",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "Automatic interactive API documentation, including 2 alternative user interfaces: Swagger UI ReDoc Coming back to the previous code example, FastAPI will: Validate that there is an item_id in the path for GET and PUT requests Validate that the item_id is of type int for GET and PUT requests If it is not, the client will see a useful, clear error Check if there is an optional query parameter named q (as in http://127 0 0 1:8000/items/foo q=somequery) for GET requests",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "As the q parameter is declared with = None, it is optional Without the None it would be required (as is the body in the case with PUT) For PUT requests to /items/{item_id}, read the body as JSON: Check that it has a required attribute name that should be a str Check that it has a required attribute price that has to be a float Check that it has an optional attribute is_offer, that should be a bool, if present All this would also work for deeply nested JSON objects",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        },
        {
          "content": "Convert from and to JSON automatically Document everything with OpenAPI, that can be used by: Interactive documentation systems Automatic client code generation systems, for many languages Provide 2 interactive documentation web interfaces directly We just scratched the surface, but you already get the idea of how it all works Try changing the line with: return {\"item_name\": item name, \"item_id\": item_id} from: \"item_name\": item name to: \"item_price\": item price",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_22"
        },
        {
          "content": "and see how your editor will auto-complete the attributes and know their types: For a more complete example including more features, see the Tutorial - User Guide Spoiler alert: the tutorial - user guide includes: Declaration of parameters from other different places as: headers, cookies, form fields and files How to set validation constraints as maximum_length or regex A very powerful and easy to use Dependency Injection system",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_23"
        },
        {
          "content": "Security and authentication, including support for OAuth2 with JWT tokens and HTTP Basic auth More advanced (but equally easy) techniques for declaring deeply nested JSON models (thanks to Pydantic) GraphQL integration with Strawberry and other libraries Many extra features (thanks to Starlette) as: WebSockets extremely easy tests based on HTTPX and pytest CORS Cookie Sessions and more",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_24"
        },
        {
          "content": "Performance Independent TechEmpower benchmarks show FastAPI applications running under Uvicorn as one of the fastest Python frameworks available, only below Starlette and Uvicorn themselves (used internally by FastAPI) (*) To understand more about it, see the section Benchmarks Dependencies FastAPI depends on Pydantic and Starlette",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_25"
        },
        {
          "content": "standard Dependencies When you install FastAPI with pip install \"fastapi[standard]\" it comes with the standard group of optional dependencies: Used by Pydantic: email-validator - for email validation Used by Starlette: httpx - Required if you want to use the TestClient jinja2 - Required if you want to use the default template configuration python-multipart - Required if you want to support form \"parsing\", with request form()",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_26"
        },
        {
          "content": "Used by FastAPI / Starlette: uvicorn - for the server that loads and serves your application This includes uvicorn[standard], which includes some dependencies (e g uvloop) needed for high performance serving fastapi-cli - to provide the fastapi command Without standard Dependencies If you don't want to include the standard optional dependencies, you can install with pip install fastapi instead of pip install \"fastapi[standard]\"",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_27"
        },
        {
          "content": "Additional Optional Dependencies There are some additional dependencies you might want to install Additional optional Pydantic dependencies: pydantic-settings - for settings management pydantic-extra-types - for extra types to be used with Pydantic Additional optional FastAPI dependencies: orjson - Required if you want to use ORJSONResponse ujson - Required if you want to use UJSONResponse License This project is licensed under the terms of the MIT license Back to top",
          "url": "https://fastapi.tiangolo.com/",
          "library": "fastapi",
          "chunk_id": "fastapi_28"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/#fastapi",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI Table of contents Sponsors Opinions Typer, the FastAPI of CLIs Requirements Installation Example Create it Run it Check it Interactive API docs Alternative API docs Example upgrade Interactive API docs upgrade Alternative API docs upgrade Recap Performance Dependencies standard Dependencies Without standard Dependencies Additional Optional Dependencies License Features Learn Learn Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes Table of contents Sponsors Opinions Typer, the FastAPI of CLIs Requirements Installation Example Create it Run it Check it Interactive API docs Alternative API docs Example upgrade Interactive API docs upgrade Alternative API docs upgrade Recap Performance Dependencies standard Dependencies Without standard Dependencies Additional Optional Dependencies License FastAPI FastAPI framework, high performance, easy to learn, fast to code, ready for production Documentation: https://fastapi.tiangolo.com Source Code: https://github.com/fastapi/fastapi FastAPI is a modern, fast (high-performance), web framework for building APIs with Python based on standard Python type hints. The key features are: Fast: Very high performance, on par with NodeJS and Go (thanks to Starlette and Pydantic). One of the fastest Python frameworks available. Fast to code: Increase the speed to develop features by about 200 to 300. * Fewer bugs: Reduce about 40 of human (developer) induced errors. * Intuitive: Great editor support. Completion everywhere. Less time debugging. Easy: Designed to be easy to use and learn. Less time reading docs. Short: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs. Robust: Get production-ready code. With automatic interactive documentation. Standards-based: Based on (and fully compatible with) the open standards for APIs: OpenAPI (previously known as Swagger) and JSON Schema. * estimation based on tests on an internal development team, building production applications. Sponsors Other sponsors Opinions \"[...] I'm using FastAPI a ton these days. [...] I'm actually planning to use it for all of my team's ML services at Microsoft. Some of them are getting integrated into the core Windows product and some Office products.\" Kabir Khan - Microsoft (ref) \"We adopted the FastAPI library to spawn a REST server that can be queried to obtain predictions. [for Ludwig]\" Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref) \"Netflix is pleased to announce the open-source release of our crisis management orchestration framework: Dispatch! [built with FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Im over the moon excited about FastAPI. Its so fun!\" Brian Okken - Python Bytes podcast host (ref) \"Honestly, what you've built looks super solid and polished. In many ways, it's what I wanted Hug to be - it's really inspiring to see someone build that.\" Timothy Crosley - Hug creator (ref) \"If you're looking to learn one modern framework for building REST APIs, check out FastAPI [...] It's fast, easy to use and easy to learn [...]\" \"We've switched over to FastAPI for our APIs [...] I think you'll like it [...]\" Ines Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref) \"If anyone is looking to build a production Python API, I would highly recommend FastAPI. It is beautifully designed, simple to use and highly scalable, it has become a key component in our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer.\" Deon Pillsbury - Cisco (ref) Typer, the FastAPI of CLIs If you are building a CLI app to be used in the terminal instead of a web API, check out Typer. Typer is FastAPI's little sibling. And it's intended to be the FastAPI of CLIs.   Requirements FastAPI stands on the shoulders of giants: Starlette for the web parts. Pydantic for the data parts. Installation Create and activate a virtual environment and then install FastAPI:  pip install \"fastapi[standard]\" --- 100 Note: Make sure you put \"fastapi[standard]\" in quotes to ensure it works in all terminals. Example Create it Create a file main.py with: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Or use async def... If your code uses async / await, use async def: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Note: If you don't know, check the \"In a hurry?\" section about async and await in the docs. Run it Run the server with:  fastapi dev main.py  FastAPI CLI - Development mode     Serving at: http://127.0.0.1:8000     API docs: http://127.0.0.1:8000/docs     Running in development mode, for production use:     fastapi run     INFO: Will watch for changes in these directories: ['/home/user/code/awesomeapp'] INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [2248755] using WatchFiles INFO: Started server process [2248757] INFO: Waiting for application startup. INFO: Application startup complete. About the command fastapi dev main.py... The command fastapi dev reads your main.py file, detects the FastAPI app in it, and starts a server using Uvicorn. By default, fastapi dev will start with auto-reload enabled for local development. You can read more about it in the FastAPI CLI docs. Check it Open your browser at http://127.0.0.1:8000/items/5?q=somequery. You will see the JSON response as: {\"item_id\": 5, \"q\": \"somequery\"} You already created an API that: Receives HTTP requests in the paths / and /items/{item_id}. Both paths take GET operations (also known as HTTP methods). The path /items/{item_id} has a path parameter item_id that should be an int. The path /items/{item_id} has an optional str query parameter q. Interactive API docs Now go to http://127.0.0.1:8000/docs. You will see the automatic interactive API documentation (provided by Swagger UI): Alternative API docs And now, go to http://127.0.0.1:8000/redoc. You will see the alternative automatic documentation (provided by ReDoc): Example upgrade Now modify the file main.py to receive a body from a PUT request. Declare the body using standard Python types, thanks to Pydantic. from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} The fastapi dev server should reload automatically. Interactive API docs upgrade Now go to http://127.0.0.1:8000/docs. The interactive API documentation will be automatically updated, including the new body: Click on the button \"Try it out\", it allows you to fill the parameters and directly interact with the API: Then click on the \"Execute\" button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen: Alternative API docs upgrade And now, go to http://127.0.0.1:8000/redoc. The alternative documentation will also reflect the new query parameter and body: Recap In summary, you declare once the types of parameters, body, etc. as function parameters. You do that with standard modern Python types. You don't have to learn a new syntax, the methods or classes of a specific library, etc. Just standard Python. For example, for an int: item_id: int or for a more complex Item model: item: Item ...and with that single declaration you get: Editor support, including: Completion. Type checks. Validation of data: Automatic and clear errors when the data is invalid. Validation even for deeply nested JSON objects. Conversion of input data: coming from the network to Python data and types. Reading from: JSON. Path parameters. Query parameters. Cookies. Headers. Forms. Files. Conversion of output data: converting from Python data and types to network data (as JSON): Convert Python types (str, int, float, bool, list, etc). datetime objects. UUID objects. Database models. ...and many more. Automatic interactive API documentation, including 2 alternative user interfaces: Swagger UI. ReDoc. Coming back to the previous code example, FastAPI will: Validate that there is an item_id in the path for GET and PUT requests. Validate that the item_id is of type int for GET and PUT requests. If it is not, the client will see a useful, clear error. Check if there is an optional query parameter named q (as in http://127.0.0.1:8000/items/foo?q=somequery) for GET requests. As the q parameter is declared with = None, it is optional. Without the None it would be required (as is the body in the case with PUT). For PUT requests to /items/{item_id}, read the body as JSON: Check that it has a required attribute name that should be a str. Check that it has a required attribute price that has to be a float. Check that it has an optional attribute is_offer, that should be a bool, if present. All this would also work for deeply nested JSON objects. Convert from and to JSON automatically. Document everything with OpenAPI, that can be used by: Interactive documentation systems. Automatic client code generation systems, for many languages. Provide 2 interactive documentation web interfaces directly. We just scratched the surface, but you already get the idea of how it all works. Try changing the line with: return {\"item_name\": item.name, \"item_id\": item_id} ...from: ... \"item_name\": item.name ... ...to: ... \"item_price\": item.price ... ...and see how your editor will auto-complete the attributes and know their types: For a more complete example including more features, see the Tutorial - User Guide. Spoiler alert: the tutorial - user guide includes: Declaration of parameters from other different places as: headers, cookies, form fields and files. How to set validation constraints as maximum_length or regex. A very powerful and easy to use Dependency Injection system. Security and authentication, including support for OAuth2 with JWT tokens and HTTP Basic auth. More advanced (but equally easy) techniques for declaring deeply nested JSON models (thanks to Pydantic). GraphQL integration with Strawberry and other libraries. Many extra features (thanks to Starlette) as: WebSockets extremely easy tests based on HTTPX and pytest CORS Cookie Sessions ...and more. Performance Independent TechEmpower benchmarks show FastAPI applications running under Uvicorn as one of the fastest Python frameworks available, only below Starlette and Uvicorn themselves (used internally by FastAPI). (*) To understand more about it, see the section Benchmarks. Dependencies FastAPI depends on Pydantic and Starlette. standard Dependencies When you install FastAPI with pip install \"fastapi[standard]\" it comes with the standard group of optional dependencies: Used by Pydantic: email-validator - for email validation. Used by Starlette: httpx - Required if you want to use the TestClient. jinja2 - Required if you want to use the default template configuration. python-multipart - Required if you want to support form \"parsing\", with request.form(). Used by FastAPI / Starlette: uvicorn - for the server that loads and serves your application. This includes uvicorn[standard], which includes some dependencies (e.g. uvloop) needed for high performance serving. fastapi-cli - to provide the fastapi command. Without standard Dependencies If you don't want to include the standard optional dependencies, you can install with pip install fastapi instead of pip install \"fastapi[standard]\". Additional Optional Dependencies There are some additional dependencies you might want to install. Additional optional Pydantic dependencies: pydantic-settings - for settings management. pydantic-extra-types - for extra types to be used with Pydantic. Additional optional FastAPI dependencies: orjson - Required if you want to use ORJSONResponse. ujson - Required if you want to use UJSONResponse. License This project is licensed under the terms of the MIT license. Back to top",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install \"fastapi[standard]\"\n\n---> 100%",
        "$ pip install \"fastapi[standard]\"\n\n---> 100%",
        "\"fastapi[standard]\"",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "$ fastapi dev main.py\n\n \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 FastAPI CLI - Development mode \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n \u2502                                                     \u2502\n \u2502  Serving at: http://127.0.0.1:8000                  \u2502\n \u2502                                                     \u2502\n \u2502  API docs: http://127.0.0.1:8000/docs               \u2502\n \u2502                                                     \u2502\n \u2502  Running in development mode, for production use:   \u2502\n \u2502                                                     \u2502\n \u2502  fastapi run                                        \u2502\n \u2502                                                     \u2502\n \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ fastapi dev main.py\n\n \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 FastAPI CLI - Development mode \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n \u2502                                                     \u2502\n \u2502  Serving at: http://127.0.0.1:8000                  \u2502\n \u2502                                                     \u2502\n \u2502  API docs: http://127.0.0.1:8000/docs               \u2502\n \u2502                                                     \u2502\n \u2502  Running in development mode, for production use:   \u2502\n \u2502                                                     \u2502\n \u2502  fastapi run                                        \u2502\n \u2502                                                     \u2502\n \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "fastapi dev main.py",
        "fastapi dev",
        "fastapi dev",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "fastapi dev",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "pip install \"fastapi[standard]\"",
        "email-validator",
        "python-multipart",
        "request.form()",
        "uvicorn[standard]",
        "fastapi-cli",
        "pip install fastapi",
        "pip install \"fastapi[standard]\"",
        "pydantic-settings",
        "pydantic-extra-types",
        "ORJSONResponse",
        "UJSONResponse"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI Table of contents Sponsors Opinions Typer, the FastAPI of CLIs Requirements Installation Example Create it Run it Check it Interactive API docs Alternative API docs Example upgrade Interactive API docs upgrade Alternative API docs upgrade Recap Performance Dependencies standard Dependencies Without standard Dependencies Additional Optional Dependencies License Features Learn Learn Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes Table of contents Sponsors Opinions Typer, the FastAPI of CLIs Requirements Installation Example Create it Run it Check it Interactive API docs Alternative API docs Example upgrade Interactive API docs upgrade Alternative API docs upgrade Recap Performance Dependencies standard Dependencies Without standard Dependencies Additional Optional Dependencies License FastAPI FastAPI framework, high performance, easy to learn, fast to code, ready for production Documentation: https://fastapi",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com Source Code: https://github com/fastapi/fastapi FastAPI is a modern, fast (high-performance), web framework for building APIs with Python based on standard Python type hints The key features are: Fast: Very high performance, on par with NodeJS and Go (thanks to Starlette and Pydantic) One of the fastest Python frameworks available Fast to code: Increase the speed to develop features by about 200 to 300 * Fewer bugs: Reduce about 40 of human (developer) induced errors",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "* Intuitive: Great editor support Completion everywhere Less time debugging Easy: Designed to be easy to use and learn Less time reading docs Short: Minimize code duplication Multiple features from each parameter declaration Fewer bugs Robust: Get production-ready code With automatic interactive documentation Standards-based: Based on (and fully compatible with) the open standards for APIs: OpenAPI (previously known as Swagger) and JSON Schema",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "* estimation based on tests on an internal development team, building production applications Sponsors Other sponsors Opinions \"[ ] I'm using FastAPI a ton these days [ ] I'm actually planning to use it for all of my team's ML services at Microsoft Some of them are getting integrated into the core Windows product and some Office products \" Kabir Khan - Microsoft (ref) \"We adopted the FastAPI library to spawn a REST server that can be queried to obtain predictions",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "[for Ludwig]\" Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref) \"Netflix is pleased to announce the open-source release of our crisis management orchestration framework: Dispatch [built with FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Im over the moon excited about FastAPI Its so fun \" Brian Okken - Python Bytes podcast host (ref) \"Honestly, what you've built looks super solid and polished",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "In many ways, it's what I wanted Hug to be - it's really inspiring to see someone build that \" Timothy Crosley - Hug creator (ref) \"If you're looking to learn one modern framework for building REST APIs, check out FastAPI [ ] It's fast, easy to use and easy to learn [ ]\" \"We've switched over to FastAPI for our APIs [ ] I think you'll like it [",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "]\" Ines Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref) \"If anyone is looking to build a production Python API, I would highly recommend FastAPI It is beautifully designed, simple to use and highly scalable, it has become a key component in our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "\" Deon Pillsbury - Cisco (ref) Typer, the FastAPI of CLIs If you are building a CLI app to be used in the terminal instead of a web API, check out Typer Typer is FastAPI's little sibling And it's intended to be the FastAPI of CLIs Requirements FastAPI stands on the shoulders of giants: Starlette for the web parts Pydantic for the data parts",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "Installation Create and activate a virtual environment and then install FastAPI:  pip install \"fastapi[standard]\" --- 100 Note: Make sure you put \"fastapi[standard]\" in quotes to ensure it works in all terminals Example Create it Create a file main py with: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Or use async def If your code uses async / await, use async def: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Note: If you don't know, check the \"In a hurry",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "\" section about async and await in the docs Run it Run the server with:  fastapi dev main py  FastAPI CLI - Development mode     Serving at: http://127 0 0 1:8000     API docs: http://127 0 0 1:8000/docs     Running in development mode, for production use:     fastapi run     INFO: Will watch for changes in these directories: ['/home/user/code/awesomeapp'] INFO: Uvicorn running on http://127 0 0",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "1:8000 (Press CTRL+C to quit) INFO: Started reloader process [2248755] using WatchFiles INFO: Started server process [2248757] INFO: Waiting for application startup INFO: Application startup complete About the command fastapi dev main py The command fastapi dev reads your main py file, detects the FastAPI app in it, and starts a server using Uvicorn By default, fastapi dev will start with auto-reload enabled for local development You can read more about it in the FastAPI CLI docs",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "Check it Open your browser at http://127 0 0 1:8000/items/5 q=somequery You will see the JSON response as: {\"item_id\": 5, \"q\": \"somequery\"} You already created an API that: Receives HTTP requests in the paths / and /items/{item_id} Both paths take GET operations (also known as HTTP methods) The path /items/{item_id} has a path parameter item_id that should be an int The path /items/{item_id} has an optional str query parameter q Interactive API docs Now go to http://127 0 0 1:8000/docs",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "You will see the automatic interactive API documentation (provided by Swagger UI): Alternative API docs And now, go to http://127 0 0 1:8000/redoc You will see the alternative automatic documentation (provided by ReDoc): Example upgrade Now modify the file main py to receive a body from a PUT request Declare the body using standard Python types, thanks to Pydantic",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "name, \"item_id\": item_id} The fastapi dev server should reload automatically Interactive API docs upgrade Now go to http://127 0 0 1:8000/docs",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "The interactive API documentation will be automatically updated, including the new body: Click on the button \"Try it out\", it allows you to fill the parameters and directly interact with the API: Then click on the \"Execute\" button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen: Alternative API docs upgrade And now, go to http://127 0 0 1:8000/redoc",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "The alternative documentation will also reflect the new query parameter and body: Recap In summary, you declare once the types of parameters, body, etc as function parameters You do that with standard modern Python types You don't have to learn a new syntax, the methods or classes of a specific library, etc Just standard Python For example, for an int: item_id: int or for a more complex Item model: item: Item and with that single declaration you get: Editor support, including: Completion",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "Type checks Validation of data: Automatic and clear errors when the data is invalid Validation even for deeply nested JSON objects Conversion of input data: coming from the network to Python data and types Reading from: JSON Path parameters Query parameters Cookies Headers Forms Files Conversion of output data: converting from Python data and types to network data (as JSON): Convert Python types (str, int, float, bool, list, etc) datetime objects UUID objects Database models and many more",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "Automatic interactive API documentation, including 2 alternative user interfaces: Swagger UI ReDoc Coming back to the previous code example, FastAPI will: Validate that there is an item_id in the path for GET and PUT requests Validate that the item_id is of type int for GET and PUT requests If it is not, the client will see a useful, clear error Check if there is an optional query parameter named q (as in http://127 0 0 1:8000/items/foo q=somequery) for GET requests",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "As the q parameter is declared with = None, it is optional Without the None it would be required (as is the body in the case with PUT) For PUT requests to /items/{item_id}, read the body as JSON: Check that it has a required attribute name that should be a str Check that it has a required attribute price that has to be a float Check that it has an optional attribute is_offer, that should be a bool, if present All this would also work for deeply nested JSON objects",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        },
        {
          "content": "Convert from and to JSON automatically Document everything with OpenAPI, that can be used by: Interactive documentation systems Automatic client code generation systems, for many languages Provide 2 interactive documentation web interfaces directly We just scratched the surface, but you already get the idea of how it all works Try changing the line with: return {\"item_name\": item name, \"item_id\": item_id} from: \"item_name\": item name to: \"item_price\": item price",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_22"
        },
        {
          "content": "and see how your editor will auto-complete the attributes and know their types: For a more complete example including more features, see the Tutorial - User Guide Spoiler alert: the tutorial - user guide includes: Declaration of parameters from other different places as: headers, cookies, form fields and files How to set validation constraints as maximum_length or regex A very powerful and easy to use Dependency Injection system",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_23"
        },
        {
          "content": "Security and authentication, including support for OAuth2 with JWT tokens and HTTP Basic auth More advanced (but equally easy) techniques for declaring deeply nested JSON models (thanks to Pydantic) GraphQL integration with Strawberry and other libraries Many extra features (thanks to Starlette) as: WebSockets extremely easy tests based on HTTPX and pytest CORS Cookie Sessions and more",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_24"
        },
        {
          "content": "Performance Independent TechEmpower benchmarks show FastAPI applications running under Uvicorn as one of the fastest Python frameworks available, only below Starlette and Uvicorn themselves (used internally by FastAPI) (*) To understand more about it, see the section Benchmarks Dependencies FastAPI depends on Pydantic and Starlette",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_25"
        },
        {
          "content": "standard Dependencies When you install FastAPI with pip install \"fastapi[standard]\" it comes with the standard group of optional dependencies: Used by Pydantic: email-validator - for email validation Used by Starlette: httpx - Required if you want to use the TestClient jinja2 - Required if you want to use the default template configuration python-multipart - Required if you want to support form \"parsing\", with request form()",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_26"
        },
        {
          "content": "Used by FastAPI / Starlette: uvicorn - for the server that loads and serves your application This includes uvicorn[standard], which includes some dependencies (e g uvloop) needed for high performance serving fastapi-cli - to provide the fastapi command Without standard Dependencies If you don't want to include the standard optional dependencies, you can install with pip install fastapi instead of pip install \"fastapi[standard]\"",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_27"
        },
        {
          "content": "Additional Optional Dependencies There are some additional dependencies you might want to install Additional optional Pydantic dependencies: pydantic-settings - for settings management pydantic-extra-types - for extra types to be used with Pydantic Additional optional FastAPI dependencies: orjson - Required if you want to use ORJSONResponse ujson - Required if you want to use UJSONResponse License This project is licensed under the terms of the MIT license Back to top",
          "url": "https://fastapi.tiangolo.com/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_28"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/newsletter/",
      "title": "FastAPI and friends newsletter - FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI Features Learn Learn Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes FastAPI Resources FastAPI and friends newsletter Back to top",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI Features Learn Learn Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/newsletter/",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes FastAPI Resources FastAPI and friends newsletter Back to top",
          "url": "https://fastapi.tiangolo.com/newsletter/",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/az/",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI M\u00fcnd\u0259ricat Sponsorlar R\u0259yl\u0259r Typer, CLI-lar\u0131n FastAPI-\u0131 T\u0259l\u0259bl\u0259r Qura\u015fd\u0131rma N\u00fcmun\u0259 Kodu yaradaq Kodu i\u015f\u0259 salaq \u0130ndi yoxlayaq \u0130nteraktiv API S\u0259n\u0259dl\u0259ri Alternativ API s\u0259n\u0259dl\u0259ri N\u00fcmun\u0259ni Yenil\u0259y\u0259k \u0130nteraktiv API s\u0259n\u0259dl\u0259rind\u0259ki d\u0259yi\u015fikliy\u0259 baxaq Alternativ API S\u0259n\u0259dl\u0259rind\u0259ki D\u0259yi\u015fikliy\u0259 Baxaq X\u00fclas\u0259 Performans M\u0259cburi Olmayan T\u0259l\u0259bl\u0259r Lisenziya Features \u00d6yr\u0259n \u00d6yr\u0259n Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes M\u00fcnd\u0259ricat Sponsorlar R\u0259yl\u0259r Typer, CLI-lar\u0131n FastAPI-\u0131 T\u0259l\u0259bl\u0259r Qura\u015fd\u0131rma N\u00fcmun\u0259 Kodu yaradaq Kodu i\u015f\u0259 salaq \u0130ndi yoxlayaq \u0130nteraktiv API S\u0259n\u0259dl\u0259ri Alternativ API s\u0259n\u0259dl\u0259ri N\u00fcmun\u0259ni Yenil\u0259y\u0259k \u0130nteraktiv API s\u0259n\u0259dl\u0259rind\u0259ki d\u0259yi\u015fikliy\u0259 baxaq Alternativ API S\u0259n\u0259dl\u0259rind\u0259ki D\u0259yi\u015fikliy\u0259 Baxaq X\u00fclas\u0259 Performans M\u0259cburi Olmayan T\u0259l\u0259bl\u0259r Lisenziya FastAPI FastAPI framework, y\u00fcks\u0259k m\u0259shuldarl\u0131, \u00f6yr\u0259nm\u0259si asan, \u00e7evik kodlama, istifad\u0259y\u0259 haz\u0131rd\u0131r S\u0259n\u0259dl\u0259r: https://fastapi.tiangolo.com Qaynaq Kodu: https://github.com/fastapi/fastapi FastAPI Python il\u0259 API yaratmaq \u00fc\u00e7\u00fcn standart Python tip m\u0259sl\u0259h\u0259tl\u0259rin\u0259 \u0259saslanan, m\u00fcasir, s\u00fcr\u0259tli (y\u00fcks\u0259k performansl\u0131) framework-d\u00fcr. \u018fsas x\u00fcsusiyy\u0259tl\u0259ri bunlard\u0131r: S\u00fcr\u0259tli: \u00c7ox y\u00fcks\u0259k performans, NodeJS v\u0259 Go s\u0259viyy\u0259sind\u0259 (Starlette v\u0259 Pydantic-\u0259 t\u0259\u015f\u0259kk\u00fcrl\u0259r). \u018fn s\u00fcr\u0259tli Python frameworkl\u0259rind\u0259n biridir. \u00c7evik kodlama: Funksiyanall\u0131qlar\u0131 inki\u015faf etdirm\u0259k s\u00fcr\u0259tini t\u0259xmin\u0259n 200-d\u0259n 300-\u0259 q\u0259d\u0259r art\u0131r\u0131n. * Daha az x\u0259ta: \u0130nsan (developer) t\u0259r\u0259find\u0259n t\u00f6r\u0259dil\u0259n s\u0259hvl\u0259rin t\u0259xmin\u0259n 40 -ni azald\u0131n. * \u0130ntuitiv: \u018fla redaktor d\u0259st\u0259yi. H\u0259r yerd\u0259 otomatik tamamlama. X\u0259talar\u0131 m\u00fc\u0259yy\u0259nl\u0259\u015fdirm\u0259y\u0259 daha az vaxt s\u0259rf ed\u0259c\u0259ksiniz. Asan: \u0130stifad\u0259si v\u0259 \u00f6yr\u0259nilm\u0259si asan olmas\u0131 \u00fc\u00e7\u00fcn n\u0259z\u0259rd\u0259 tutulmu\u015fdur. S\u0259n\u0259dl\u0259ri oxumaq \u00fc\u00e7\u00fcn daha az vaxt ay\u0131racaqs\u0131n\u0131z. Q\u0131sa: Kod t\u0259krarlanmas\u0131n\u0131 minimuma endirin. H\u0259r bir parametr t\u0259rifind\u0259 bird\u0259n \u00e7ox x\u00fcsusiyy\u0259t il\u0259 v\u0259 daha az s\u0259hvl\u0259 qar\u015f\u0131la\u015facaqs\u0131n\u0131z. G\u00fccl\u00fc: Avtomatik v\u0259 interaktiv s\u0259n\u0259dl\u0259rl\u0259 birlikd\u0259 istifad\u0259y\u0259 haz\u0131r kod \u0259ld\u0259 ed\u0259 bil\u0259rsiniz. Standartlara \u0259saslanan: API-lar \u00fc\u00e7\u00fcn a\u00e7\u0131q standartlara \u0259saslan\u0131r (v\u0259 tam uy\u011fun g\u0259lir): OpenAPI (\u0259vv\u0259lki ad\u0131 il\u0259 Swagger) v\u0259 JSON Schema. * Bu fikirl\u0259r daxili development komandas\u0131n\u0131n haz\u0131rlad\u0131qlar\u0131 m\u0259hsullar\u0131n s\u0131naqlar\u0131na \u0259saslan\u0131r. Sponsorlar ` Dig\u0259r sponsorlar R\u0259yl\u0259r \"[...] Son g\u00fcnl\u0259rd\u0259 FastAPI-\u0131 \u00e7ox istifad\u0259 edir\u0259m. [...] \u018fslind\u0259 onu komandam\u0131n b\u00fct\u00fcn Microsoftda ML sevisl\u0259rind\u0259 istifad\u0259 etm\u0259yi planlay\u0131ram. Onlar\u0131n b\u0259zil\u0259ri windows-un \u0259sas m\u0259hsuluna v\u0259 b\u0259zi Office m\u0259hsullar\u0131na inteqrasiya olunurlar.\" Kabir Khan - Microsoft (ref) \"FastAPI kitabxanas\u0131n\u0131 Proqnozlar \u0259ld\u0259 etm\u0259k \u00fc\u00e7\u00fcn sor\u011fulana bil\u0259n REST serverini yaratmaqda istifad\u0259 etdik.\" Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref) \"Netflix b\u00f6hran idar\u0259\u00e7iliyi orkestrl\u0259\u015fm\u0259 framework-n\u00fcn a\u00e7\u0131q qaynaql\u0131 burax\u0131l\u0131\u015f\u0131n\u0131 elan etm\u0259kd\u0259n m\u0259mnundur: Dispatch! [FastAPI il\u0259 quruldu]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"FastAPI \u00fc\u00e7\u00fcn h\u0259y\u0259canl\u0131yam. \u00c7ox \u0259yl\u0259nc\u0259lidir!\" Brian Okken - Python Bytes podcast host (ref) \"D\u00fcz\u00fcn\u00fc des\u0259m, sizin qurdu\u011funuz \u015fey h\u0259qiq\u0259t\u0259n m\u00f6hk\u0259m v\u0259 pe\u015f\u0259kar g\u00f6r\u00fcn\u00fcr. Bir \u00e7ox c\u0259h\u0259td\u0259n Hug-un olmas\u0131n\u0131 ist\u0259diyim kimdir - kimins\u0259 bel\u0259 bir \u015fey qurdu\u011funu g\u00f6rm\u0259k h\u0259qiq\u0259t\u0259n ruhland\u0131r\u0131c\u0131d\u0131r.\" Timothy Crosley - Hug creator (ref) \"\u018fg\u0259r REST API-l\u0259r yaratmaq \u00fc\u00e7\u00fcn m\u00fcasir framework \u00f6yr\u0259nm\u0259k ist\u0259yirsinizs\u0259, FastAPI-a bax\u0131n [...] S\u00fcr\u0259tli, istifad\u0259si v\u0259 \u00f6yr\u0259nm\u0259si asand\u0131r. [...]\" \"API xidm\u0259tl\u0259rimizi FastAPI-a k\u00f6\u00e7\u00fcrd\u00fck [...] Sizin d\u0259 b\u0259y\u0259n\u0259c\u0259yinizi d\u00fc\u015f\u00fcn\u00fcr\u00fck.\" Ines Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref) \"Python il\u0259 istifad\u0259y\u0259 haz\u0131r API qurmaq ist\u0259y\u0259n h\u0259r k\u0259s\u0259 FastAPI-\u0131 t\u00f6vsiy\u0259 edir\u0259m. M\u00f6ht\u0259\u015f\u0259m \u015f\u0259kild\u0259 dizayn edilmi\u015f, istifad\u0259si asan v\u0259 y\u00fcks\u0259k d\u0259r\u0259c\u0259d\u0259 geni\u015fl\u0259n\u0259 bil\u0259n-dir, API \u0259sasl\u0131 inki\u015faf strategiyam\u0131z\u0131n \u0259sas komponentin\u0259 \u00e7evrilib v\u0259 Virtual TAC Engineer kimi bir \u00e7ox avtomatla\u015fd\u0131rma v\u0259 servisl\u0259ri idar\u0259 edir.\" Deon Pillsbury - Cisco (ref) Typer, CLI-lar\u0131n FastAPI-\u0131 \u018fg\u0259r siz veb API \u0259v\u0259zin\u0259 terminalda istifad\u0259 edil\u0259c\u0259k CLI proqram\u0131 qurursunuzsa, Typer-a baxa bil\u0259rsiniz. Typer FastAPI-\u0131n ki\u00e7ik qarda\u015f\u0131d\u0131r. V\u0259 o, CLI-l\u0259rin FastAPI-\u0131 olmaq \u00fc\u00e7\u00fcn n\u0259z\u0259rd\u0259 tutulub.   T\u0259l\u0259bl\u0259r FastAPI n\u0259h\u0259ngl\u0259rin \u00e7iyinl\u0259rind\u0259 dayan\u0131r: Web t\u0259r\u0259fi \u00fc\u00e7\u00fcn Starlette. Data t\u0259r\u0259fi \u00fc\u00e7\u00fcn Pydantic. Qura\u015fd\u0131rma  pip install fastapi --- 100 T\u0259tbiqimizi \u0259l\u00e7atan etm\u0259k \u00fc\u00e7\u00fcn biz\u0259 Uvicorn v\u0259 ya Hypercorn kimi ASGI server laz\u0131md\u0131r.  pip install \"uvicorn[standard]\" --- 100 N\u00fcmun\u0259 Kodu yaradaq main.py adl\u0131 fayl yaradaq v\u0259 ona a\u015fa\u011f\u0131dak\u0131 kodu yerl\u0259\u015fdir\u0259k: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} V\u0259 ya async def... \u018fg\u0259r kodunuzda async v\u0259 ya await vard\u0131rsa async def istifad\u0259 ed\u0259 bil\u0259rik: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Qeyd: \u018fg\u0259r bu m\u00f6vzu haqq\u0131nda m\u0259lumat\u0131n\u0131z yoxdursa async v\u0259 await s\u0259n\u0259dind\u0259ki \"T\u0259l\u0259sirs\u0259n?\" b\u00f6lm\u0259sin\u0259 baxa bil\u0259rsiniz. Kodu i\u015f\u0259 salaq Serveri a\u015fa\u011f\u0131dak\u0131 \u0259mr il\u0259 i\u015f\u0259 salaq:  uvicorn main:app --reload INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup. INFO: Application startup complete. uvicorn main:app --reload \u0259mri haqq\u0131nda... uvicorn main:app \u0259mri a\u015fa\u011f\u0131dak\u0131lara instinad edir: main: main.py fayl\u0131 (y\u0259ni Python \"modulu\"). app: main.py fayl\u0131nda app = FastAPI() s\u0259trind\u0259 yaratd\u0131\u011f\u0131m\u0131z FastAPI obyektidir. --reload: kod d\u0259yi\u015fikliyind\u0259n sonra avtomatik olaraq serveri yenid\u0259n i\u015f\u0259 sal\u0131r. Bu parametrd\u0259n yaln\u0131z development m\u0259rh\u0259l\u0259sind\u0259 istifad\u0259 etm\u0259liyik. \u0130ndi yoxlayaq Bu linki brauzerimizd\u0259 a\u00e7aq http://127.0.0.1:8000/items/5?q=somequery. A\u015fa\u011f\u0131dak\u0131 kimi bir JSON cavab\u0131 g\u00f6r\u0259c\u0259ksiniz: {\"item_id\": 5, \"q\": \"somequery\"} Siz art\u0131q bir API yaratm\u0131s\u0131n\u0131z, hans\u0131 ki: / v\u0259 /items/{item_id} yollar\u0131nda HTTP sor\u011fular\u0131n\u0131 q\u0259bul edir. H\u0259r iki yolda GET \u0259m\u0259liyyatlar\u0131n\u0131 (h\u0259m\u00e7inin HTTP metodlar\u0131 kimi bilinir) apar\u0131r. /items/{item_id} yolu item_id adl\u0131 int qiym\u0259ti almal\u0131 olan yol parametrin\u0259 sahibdir. /items/{item_id} yolunun q adl\u0131 yol parametri var v\u0259 bu parametr ist\u0259y\u0259 ba\u011fl\u0131 olsa da, str qiym\u0259tini almal\u0131d\u0131r. \u0130nteraktiv API S\u0259n\u0259dl\u0259ri \u0130ndi http://127.0.0.1:8000/docs \u00fcnvan\u0131na daxil olun. Avtomatik interaktiv API s\u0259n\u0259dl\u0259rini g\u00f6r\u0259c\u0259ksiniz (Swagger UI t\u0259r\u0259find\u0259n t\u0259min edilir): Alternativ API s\u0259n\u0259dl\u0259ri \u0130ndi is\u0259 http://127.0.0.1:8000/redoc \u00fcnvan\u0131na daxil olun. ReDoc t\u0259r\u0259find\u0259n t\u0259qdim edil\u0259n avtomatik s\u0259n\u0259dl\u0259ri g\u00f6r\u0259c\u0259ksiniz: N\u00fcmun\u0259ni Yenil\u0259y\u0259k \u0130ndi g\u0259lin main.py fayl\u0131n\u0131 PUT sor\u011fusu il\u0259 birlikd\u0259 g\u00f6vd\u0259 q\u0259bul ed\u0259c\u0259k \u015f\u0259kild\u0259 d\u0259yi\u015fdir\u0259k. Pydantic say\u0259sind\u0259 standart Python tipl\u0259rind\u0259n istifad\u0259 ed\u0259r\u0259k g\u00f6vd\u0259ni m\u00fc\u0259yy\u0259n ed\u0259k. from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} Server avtomatik olaraq yenid\u0259n i\u015f\u0259 sal\u0131nmal\u0131 idi (\u00e7\u00fcnki biz yuxar\u0131da uvicorn \u0259mri il\u0259 --reload parametrind\u0259n istifad\u0259 etmi\u015fik). \u0130nteraktiv API s\u0259n\u0259dl\u0259rind\u0259ki d\u0259yi\u015fikliy\u0259 baxaq Yenid\u0259n http://127.0.0.1:8000/docs \u00fcnvan\u0131na daxil olun. \u0130nteraktiv API s\u0259n\u0259dl\u0259ri yeni g\u00f6vd\u0259 d\u0259 daxil olmaq il\u0259 avtomatik olaraq yenil\u0259n\u0259c\u0259k: \"Try it out\" d\u00fcym\u0259sini klikl\u0259yin, bu, parametrl\u0259ri doldurma\u011fa v\u0259 API il\u0259 birba\u015fa \u0259laq\u0259 saxlama\u011fa imkan verir: Sonra \"Execute\" d\u00fcym\u0259sini klikl\u0259yin, istifad\u0259\u00e7i interfeysi API il\u0259 \u0259laq\u0259 quracaq, parametrl\u0259ri g\u00f6nd\u0259r\u0259c\u0259k, n\u0259tic\u0259l\u0259ri \u0259ld\u0259 ed\u0259c\u0259k v\u0259 onlar\u0131 ekranda g\u00f6st\u0259r\u0259c\u0259k: Alternativ API S\u0259n\u0259dl\u0259rind\u0259ki D\u0259yi\u015fikliy\u0259 Baxaq \u0130ndi is\u0259 yenid\u0259n http://127.0.0.1:8000/redoc \u00fcnvan\u0131na daxil olun. Alternativ s\u0259n\u0259dl\u0259r h\u0259m d\u0259 yeni sor\u011fu parametri v\u0259 g\u00f6vd\u0259sini \u0259ks etdir\u0259c\u0259k: X\u00fclas\u0259 \u00dcmumil\u0259\u015fdirs\u0259k, parametrl\u0259r, g\u00f6vd\u0259 v\u0259 s. Biz m\u0259lumat n\u00f6vl\u0259rini bir d\u0259f\u0259 funksiya parametrl\u0259ri kimi t\u0259yin edirik. Bunu standart m\u00fcasir Python tipl\u0259ri il\u0259 edirsiniz. Yeni sintaksis, m\u00fc\u0259yy\u0259n bir kitabxanan\u0131n metodlar\u0131n\u0131 v\u0259 ya sinifl\u0259rini v\u0259 s. \u00f6yr\u0259nm\u0259k m\u0259cburiyy\u0259tind\u0259 deyilsiniz. Sad\u0259c\u0259 standart Python. M\u0259s\u0259l\u0259n, int \u00fc\u00e7\u00fcn: item_id: int v\u0259 ya daha m\u00fcr\u0259kk\u0259b Item modeli \u00fc\u00e7\u00fcn: item: Item ...v\u0259 yaln\u0131z parametr tipini t\u0259yin etm\u0259kl\u0259 bunlar\u0131 \u0259ld\u0259 edirsiniz: Redaktor d\u0259st\u0259yi il\u0259: Avtomatik tamamlama. Tip yoxlanmas\u0131. M\u0259lumatlar\u0131n T\u0259sdiql\u0259nm\u0259si: M\u0259lumat etibars\u0131z olduqda avtomatik olaraq ayd\u0131n x\u0259talar g\u00f6st\u0259rir. H\u0259tta \u00e7ox d\u0259rin JSON obyektl\u0259rind\u0259 bel\u0259 do\u011frulama apar\u0131r. Daxil olan m\u0259lumatlar\u0131 \u00e7evirm\u0259k \u00fc\u00e7\u00fcn a\u015fa\u011f\u0131dak\u0131 m\u0259lumat n\u00f6vl\u0259rind\u0259n istifad\u0259 edilir: JSON. Yol parametrl\u0259ri. Sor\u011fu parametrl\u0259ri. \u00c7\u0259r\u0259zl\u0259r. Ba\u015fl\u0131qlaq. Formalar. Fayllar. Daxil olan m\u0259lumatlar\u0131 \u00e7evirm\u0259k \u00fc\u00e7\u00fcn a\u015fa\u011f\u0131dak\u0131 m\u0259lumat n\u00f6vl\u0259rind\u0259n istifad\u0259 edilir (JSON olaraq): Python tipl\u0259rinin (str, int, float, bool, list, v\u0259 s) \u00e7evrilm\u0259si. datetime obyektl\u0259ri. UUID obyektl\u0259ri. Veril\u0259nl\u0259r bazas\u0131 modell\u0259ri. v\u0259 daha \u00e7oxu... 2 alternativ istifad\u0259\u00e7i interfeysi daxil olmaqla avtomatik interaktiv API s\u0259n\u0259dl\u0259rini t\u0259min edir: Swagger UI. ReDoc. G\u0259lin \u0259vv\u0259lki n\u00fcmun\u0259y\u0259 qay\u0131daq v\u0259 FastAPI-nin n\u0259l\u0259r ed\u0259c\u0259yin\u0259 n\u0259z\u0259r salaq: GET v\u0259 PUT sor\u011fular\u0131 \u00fc\u00e7\u00fcn item_id-nin yolda olub-olmad\u0131\u011f\u0131n\u0131 yoxlayacaq. item_id-nin GET v\u0259 PUT sor\u011fular\u0131 \u00fc\u00e7\u00fcn n\u00f6v\u00fcn\u00fcn int oldu\u011funu yoxlayacaq. \u018fg\u0259r int deyils\u0259, s\u0259b\u0259bini g\u00f6st\u0259r\u0259n bir x\u0259ta mesaj\u0131 g\u00f6st\u0259r\u0259c\u0259kdir. m\u0259cburi olmayan q parametrinin GET (http://127.0.0.1:8000/items/foo?q=somequery burdak\u0131 kimi) sor\u011fusu i\u00e7\u0259risind\u0259 olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq. q parametrini = None il\u0259 yaratd\u0131\u011f\u0131m\u0131z \u00fc\u00e7\u00fcn, m\u0259cburi olmayan parametr olacaq. \u018fg\u0259r None olmasayd\u0131, bu m\u0259cburi parametr olard\u0131 (PUT metodunun g\u00f6vd\u0259sind\u0259 oldu\u011fu kimi). PUT sor\u011fusu \u00fc\u00e7\u00fcn, /items/{item_id} g\u00f6vd\u0259sini JSON olaraq oxuyacaq: name ad\u0131nda m\u0259cburi bir parametr olub olmad\u0131\u011f\u0131n\u0131 v\u0259 \u0259g\u0259r varsa, tipinin str olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq. price ad\u0131nda m\u0259cburi bir parametr olub olmad\u0131\u011f\u0131n\u0131 v\u0259 \u0259g\u0259r varsa, tipinin float olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq. is_offer ad\u0131nda m\u0259cburi olmayan bir parametr olub olmad\u0131\u011f\u0131n\u0131 v\u0259 \u0259g\u0259r varsa, tipinin float olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq. B\u00fct\u00fcn bunlar \u0259n d\u0259rin JSON obyektl\u0259rind\u0259 bel\u0259 i\u015fl\u0259y\u0259c\u0259k. M\u0259lumatlar\u0131n JSON-a v\u0259 JSON-un Python obyektin\u0259 \u00e7evrilm\u0259si avtomatik h\u0259yata ke\u00e7iril\u0259c\u0259k. H\u0259r \u015feyi OpenAPI il\u0259 uy\u011fun olacaq \u015f\u0259kild\u0259 avtomatik olaraq s\u0259n\u0259dl\u0259\u015fdir\u0259c\u0259k v\u0259 onlar\u0131 a\u015fa\u011f\u0131dak\u0131 kimi istifad\u0259 ed\u0259 bil\u0259c\u0259k: \u0130nteraktiv s\u0259n\u0259dl\u0259\u015fm\u0259 sisteml\u0259ri. Bir \u00e7ox proqramla\u015fd\u0131rma dill\u0259ri \u00fc\u00e7\u00fcn avtomatla\u015fd\u0131r\u0131lm\u0131\u015f m\u00fc\u015ft\u0259ri kodu yaratma sisteml\u0259ri. 2 interaktiv s\u0259n\u0259dl\u0259\u015fm\u0259 veb interfeysini birba\u015fa t\u0259min ed\u0259c\u0259k. Yeni ba\u015flam\u0131\u015f\u0131q, amma siz art\u0131q i\u015fin m\u0259ntiqini ba\u015fa d\u00fc\u015fm\u00fcs\u00fcn\u00fcz. \u0130ndi a\u015fa\u011f\u0131dak\u0131 s\u0259tri d\u0259yi\u015fdirm\u0259y\u0259 \u00e7al\u0131\u015f\u0131n: return {\"item_name\": item.name, \"item_id\": item_id} ...bundan: ... \"item_name\": item.name ... ...buna: ... \"item_price\": item.price ... ...v\u0259 redaktorun m\u0259lumat tipl\u0259rini bildiyini v\u0259 avtomatik tamalad\u0131\u011f\u0131n\u0131 g\u00f6r\u0259c\u0259ksiniz: Daha \u00e7ox funksiyaya malik daha dol\u011fun n\u00fcmun\u0259 \u00fc\u00e7\u00fcn \u00d6yr\u0259dici - \u0130stifad\u0259\u00e7i T\u0259limat\u0131 s\u0259hif\u0259sin\u0259 baxa bil\u0259rsiniz. Spoiler x\u0259b\u0259rdarl\u0131\u011f\u0131: \u00d6yr\u0259dici - istifad\u0259\u00e7i t\u0259limat\u0131na bunlar daxildir: Parametrl\u0259rin, ba\u015fl\u0131qlar, \u00e7\u0259r\u0259zl\u0259r, forma sah\u0259l\u0259ri v\u0259 fayllar olaraq m\u00fc\u0259yy\u0259n edilm\u0259si. maximum_length v\u0259 ya regex kimi do\u011frulama m\u0259hdudiyy\u0259tl\u0259rinin nec\u0259 t\u0259yin edil\u0259c\u0259yi. \u00c7ox g\u00fccl\u00fc v\u0259 istifad\u0259si asan Dependency Injection sistemi. T\u0259hl\u00fck\u0259sizlik v\u0259 autentifikasiya, JWT tokenl\u0259ri il\u0259 OAuth2 d\u0259st\u0259yi v\u0259 HTTP Basic autentifikasiyas\u0131. \u00e7ox d\u0259rin JSON modell\u0259rini m\u00fc\u0259yy\u0259n etm\u0259k \u00fc\u00e7\u00fcn daha ir\u0259li s\u0259viyy\u0259 (lakin eyni d\u0259r\u0259c\u0259d\u0259 asan) \u00fcsullar (Pydantic say\u0259sind\u0259). Strawberry v\u0259 dig\u0259r kitabxanalar il\u0259 GraphQL inteqrasiyas\u0131. Dig\u0259r \u0259lav\u0259 x\u00fcsusiyy\u0259tl\u0259r (Starlette say\u0259sind\u0259): WebSockets HTTPX v\u0259 pytest say\u0259sind\u0259 \u00e7ox asan testl\u0259r CORS Cookie Sessions ...v\u0259 daha \u00e7oxu. Performans M\u00fcst\u0259qil TechEmpower meyarlar\u0131 g\u00f6st\u0259rir ki, Uvicorn \u00fcz\u0259rind\u0259 i\u015fl\u0259y\u0259n FastAPI proqramlar\u0131 \u0259n s\u00fcr\u0259tli Python kitabxanalar\u0131ndan biridir, yaln\u0131z Starlette v\u0259 Uvicorn-un \u00f6z\u00fcnd\u0259n yava\u015fd\u0131r, ki FastAPI bunlar\u0131n \u00fcz\u0259rin\u0259 qurulmu\u015f bir framework-d\u00fcr. (*) \u018ftrafl\u0131 m\u0259lumat \u00fc\u00e7\u00fcn bu b\u00f6lm\u0259y\u0259 n\u0259z\u0259r sal\u0131n M\u00fcqayis\u0259l\u0259r. M\u0259cburi Olmayan T\u0259l\u0259bl\u0259r Pydantic t\u0259r\u0259find\u0259n istifad\u0259 olunanlar: email-validator - e-po\u00e7tun yoxlan\u0131lmas\u0131 \u00fc\u00e7\u00fcn. pydantic-settings - parametrl\u0259rin idar\u0259 edilm\u0259si \u00fc\u00e7\u00fcn. pydantic-extra-types - Pydantic il\u0259 istifad\u0259 edil\u0259 bil\u0259n \u0259lav\u0259 tipl\u0259r \u00fc\u00e7\u00fcn. Starlette t\u0259r\u0259find\u0259n istifad\u0259 olunanlar: httpx - \u018fg\u0259r TestClient strukturundan istifad\u0259 ed\u0259c\u0259ksinizs\u0259, t\u0259l\u0259b olunur. jinja2 - Standart \u015fablon konfiqurasiyas\u0131ndan istifad\u0259 etm\u0259k ist\u0259yirsinizs\u0259, t\u0259l\u0259b olunur. python-multipart - request.form() il\u0259 forma \"\u00e7evirm\u0259\" d\u0259st\u0259yind\u0259n istifad\u0259 etm\u0259k ist\u0259yirsinizs\u0259, t\u0259l\u0259b olunur. itsdangerous - SessionMiddleware d\u0259st\u0259yi \u00fc\u00e7\u00fcn t\u0259l\u0259b olunur. pyyaml - SchemaGenerator d\u0259st\u0259yi \u00fc\u00e7\u00fcn t\u0259l\u0259b olunur (\u00c7ox g\u00fcman ki, FastAPI istifad\u0259 ed\u0259rk\u0259n buna ehtiyac\u0131n\u0131z olmayacaq). ujson - UJSONResponse istifad\u0259 etm\u0259k ist\u0259yirsinizs\u0259, t\u0259l\u0259b olunur. H\u0259m FastAPI, h\u0259m d\u0259 Starlette t\u0259r\u0259find\u0259n istifad\u0259 olunur: uvicorn - Yaratd\u0131\u011f\u0131m\u0131z proqram\u0131 servis ed\u0259c\u0259k veb server kimi f\u0259aliyy\u0259t g\u00f6st\u0259rir. orjson - ORJSONResponse istifad\u0259 ed\u0259c\u0259ksinizs\u0259 t\u0259l\u0259b olunur. B\u00fct\u00fcn bunlar\u0131 pip install fastapi[all] il\u0259 qura\u015fd\u0131ra bil\u0259rsiniz. Lisenziya Bu layih\u0259 MIT lisenziyas\u0131n\u0131n \u015f\u0259rtl\u0259rin\u0259 \u0259sas\u0259n lisenziyala\u015fd\u0131r\u0131l\u0131b. Yuxar\u0131ya qay\u0131tmaq",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "uvicorn main:app --reload",
        "uvicorn main:app",
        "app = FastAPI()",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "email-validator",
        "pydantic-settings",
        "pydantic-extra-types",
        "python-multipart",
        "request.form()",
        "itsdangerous",
        "SessionMiddleware",
        "SchemaGenerator",
        "UJSONResponse",
        "ORJSONResponse",
        "pip install fastapi[all]"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI M\u00fcnd\u0259ricat Sponsorlar R\u0259yl\u0259r Typer, CLI-lar\u0131n FastAPI-\u0131 T\u0259l\u0259bl\u0259r Qura\u015fd\u0131rma N\u00fcmun\u0259 Kodu yaradaq Kodu i\u015f\u0259 salaq \u0130ndi yoxlayaq \u0130nteraktiv API S\u0259n\u0259dl\u0259ri Alternativ API s\u0259n\u0259dl\u0259ri N\u00fcmun\u0259ni Yenil\u0259y\u0259k \u0130nteraktiv API s\u0259n\u0259dl\u0259rind\u0259ki d\u0259yi\u015fikliy\u0259 baxaq Alternativ API S\u0259n\u0259dl\u0259rind\u0259ki D\u0259yi\u015fikliy\u0259 Baxaq X\u00fclas\u0259 Performans M\u0259cburi Olmayan T\u0259l\u0259bl\u0259r Lisenziya Features \u00d6yr\u0259n \u00d6yr\u0259n Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes M\u00fcnd\u0259ricat Sponsorlar R\u0259yl\u0259r Typer, CLI-lar\u0131n FastAPI-\u0131 T\u0259l\u0259bl\u0259r Qura\u015fd\u0131rma N\u00fcmun\u0259 Kodu yaradaq Kodu i\u015f\u0259 salaq \u0130ndi yoxlayaq \u0130nteraktiv API S\u0259n\u0259dl\u0259ri Alternativ API s\u0259n\u0259dl\u0259ri N\u00fcmun\u0259ni Yenil\u0259y\u0259k \u0130nteraktiv API s\u0259n\u0259dl\u0259rind\u0259ki d\u0259yi\u015fikliy\u0259 baxaq Alternativ API S\u0259n\u0259dl\u0259rind\u0259ki D\u0259yi\u015fikliy\u0259 Baxaq X\u00fclas\u0259 Performans M\u0259cburi Olmayan T\u0259l\u0259bl\u0259r Lisenziya FastAPI FastAPI framework, y\u00fcks\u0259k m\u0259shuldarl\u0131, \u00f6yr\u0259nm\u0259si asan, \u00e7evik kodlama, istifad\u0259y\u0259 haz\u0131rd\u0131r S\u0259n\u0259dl\u0259r: https://fastapi",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com Qaynaq Kodu: https://github com/fastapi/fastapi FastAPI Python il\u0259 API yaratmaq \u00fc\u00e7\u00fcn standart Python tip m\u0259sl\u0259h\u0259tl\u0259rin\u0259 \u0259saslanan, m\u00fcasir, s\u00fcr\u0259tli (y\u00fcks\u0259k performansl\u0131) framework-d\u00fcr \u018fsas x\u00fcsusiyy\u0259tl\u0259ri bunlard\u0131r: S\u00fcr\u0259tli: \u00c7ox y\u00fcks\u0259k performans, NodeJS v\u0259 Go s\u0259viyy\u0259sind\u0259 (Starlette v\u0259 Pydantic-\u0259 t\u0259\u015f\u0259kk\u00fcrl\u0259r) \u018fn s\u00fcr\u0259tli Python frameworkl\u0259rind\u0259n biridir \u00c7evik kodlama: Funksiyanall\u0131qlar\u0131 inki\u015faf etdirm\u0259k s\u00fcr\u0259tini t\u0259xmin\u0259n 200-d\u0259n 300-\u0259 q\u0259d\u0259r art\u0131r\u0131n",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "* Daha az x\u0259ta: \u0130nsan (developer) t\u0259r\u0259find\u0259n t\u00f6r\u0259dil\u0259n s\u0259hvl\u0259rin t\u0259xmin\u0259n 40 -ni azald\u0131n * \u0130ntuitiv: \u018fla redaktor d\u0259st\u0259yi H\u0259r yerd\u0259 otomatik tamamlama X\u0259talar\u0131 m\u00fc\u0259yy\u0259nl\u0259\u015fdirm\u0259y\u0259 daha az vaxt s\u0259rf ed\u0259c\u0259ksiniz Asan: \u0130stifad\u0259si v\u0259 \u00f6yr\u0259nilm\u0259si asan olmas\u0131 \u00fc\u00e7\u00fcn n\u0259z\u0259rd\u0259 tutulmu\u015fdur S\u0259n\u0259dl\u0259ri oxumaq \u00fc\u00e7\u00fcn daha az vaxt ay\u0131racaqs\u0131n\u0131z Q\u0131sa: Kod t\u0259krarlanmas\u0131n\u0131 minimuma endirin H\u0259r bir parametr t\u0259rifind\u0259 bird\u0259n \u00e7ox x\u00fcsusiyy\u0259t il\u0259 v\u0259 daha az s\u0259hvl\u0259 qar\u015f\u0131la\u015facaqs\u0131n\u0131z",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "G\u00fccl\u00fc: Avtomatik v\u0259 interaktiv s\u0259n\u0259dl\u0259rl\u0259 birlikd\u0259 istifad\u0259y\u0259 haz\u0131r kod \u0259ld\u0259 ed\u0259 bil\u0259rsiniz Standartlara \u0259saslanan: API-lar \u00fc\u00e7\u00fcn a\u00e7\u0131q standartlara \u0259saslan\u0131r (v\u0259 tam uy\u011fun g\u0259lir): OpenAPI (\u0259vv\u0259lki ad\u0131 il\u0259 Swagger) v\u0259 JSON Schema * Bu fikirl\u0259r daxili development komandas\u0131n\u0131n haz\u0131rlad\u0131qlar\u0131 m\u0259hsullar\u0131n s\u0131naqlar\u0131na \u0259saslan\u0131r Sponsorlar ` Dig\u0259r sponsorlar R\u0259yl\u0259r \"[ ] Son g\u00fcnl\u0259rd\u0259 FastAPI-\u0131 \u00e7ox istifad\u0259 edir\u0259m [ ] \u018fslind\u0259 onu komandam\u0131n b\u00fct\u00fcn Microsoftda ML sevisl\u0259rind\u0259 istifad\u0259 etm\u0259yi planlay\u0131ram",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "Onlar\u0131n b\u0259zil\u0259ri windows-un \u0259sas m\u0259hsuluna v\u0259 b\u0259zi Office m\u0259hsullar\u0131na inteqrasiya olunurlar \" Kabir Khan - Microsoft (ref) \"FastAPI kitabxanas\u0131n\u0131 Proqnozlar \u0259ld\u0259 etm\u0259k \u00fc\u00e7\u00fcn sor\u011fulana bil\u0259n REST serverini yaratmaqda istifad\u0259 etdik \" Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref) \"Netflix b\u00f6hran idar\u0259\u00e7iliyi orkestrl\u0259\u015fm\u0259 framework-n\u00fcn a\u00e7\u0131q qaynaql\u0131 burax\u0131l\u0131\u015f\u0131n\u0131 elan etm\u0259kd\u0259n m\u0259mnundur: Dispatch",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "[FastAPI il\u0259 quruldu]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"FastAPI \u00fc\u00e7\u00fcn h\u0259y\u0259canl\u0131yam \u00c7ox \u0259yl\u0259nc\u0259lidir \" Brian Okken - Python Bytes podcast host (ref) \"D\u00fcz\u00fcn\u00fc des\u0259m, sizin qurdu\u011funuz \u015fey h\u0259qiq\u0259t\u0259n m\u00f6hk\u0259m v\u0259 pe\u015f\u0259kar g\u00f6r\u00fcn\u00fcr Bir \u00e7ox c\u0259h\u0259td\u0259n Hug-un olmas\u0131n\u0131 ist\u0259diyim kimdir - kimins\u0259 bel\u0259 bir \u015fey qurdu\u011funu g\u00f6rm\u0259k h\u0259qiq\u0259t\u0259n ruhland\u0131r\u0131c\u0131d\u0131r \" Timothy Crosley - Hug creator (ref) \"\u018fg\u0259r REST API-l\u0259r yaratmaq \u00fc\u00e7\u00fcn m\u00fcasir framework \u00f6yr\u0259nm\u0259k ist\u0259yirsinizs\u0259, FastAPI-a bax\u0131n [",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "] S\u00fcr\u0259tli, istifad\u0259si v\u0259 \u00f6yr\u0259nm\u0259si asand\u0131r [ ]\" \"API xidm\u0259tl\u0259rimizi FastAPI-a k\u00f6\u00e7\u00fcrd\u00fck [ ] Sizin d\u0259 b\u0259y\u0259n\u0259c\u0259yinizi d\u00fc\u015f\u00fcn\u00fcr\u00fck \" Ines Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref) \"Python il\u0259 istifad\u0259y\u0259 haz\u0131r API qurmaq ist\u0259y\u0259n h\u0259r k\u0259s\u0259 FastAPI-\u0131 t\u00f6vsiy\u0259 edir\u0259m",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "M\u00f6ht\u0259\u015f\u0259m \u015f\u0259kild\u0259 dizayn edilmi\u015f, istifad\u0259si asan v\u0259 y\u00fcks\u0259k d\u0259r\u0259c\u0259d\u0259 geni\u015fl\u0259n\u0259 bil\u0259n-dir, API \u0259sasl\u0131 inki\u015faf strategiyam\u0131z\u0131n \u0259sas komponentin\u0259 \u00e7evrilib v\u0259 Virtual TAC Engineer kimi bir \u00e7ox avtomatla\u015fd\u0131rma v\u0259 servisl\u0259ri idar\u0259 edir \" Deon Pillsbury - Cisco (ref) Typer, CLI-lar\u0131n FastAPI-\u0131 \u018fg\u0259r siz veb API \u0259v\u0259zin\u0259 terminalda istifad\u0259 edil\u0259c\u0259k CLI proqram\u0131 qurursunuzsa, Typer-a baxa bil\u0259rsiniz Typer FastAPI-\u0131n ki\u00e7ik qarda\u015f\u0131d\u0131r V\u0259 o, CLI-l\u0259rin FastAPI-\u0131 olmaq \u00fc\u00e7\u00fcn n\u0259z\u0259rd\u0259 tutulub",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "T\u0259l\u0259bl\u0259r FastAPI n\u0259h\u0259ngl\u0259rin \u00e7iyinl\u0259rind\u0259 dayan\u0131r: Web t\u0259r\u0259fi \u00fc\u00e7\u00fcn Starlette Data t\u0259r\u0259fi \u00fc\u00e7\u00fcn Pydantic Qura\u015fd\u0131rma  pip install fastapi --- 100 T\u0259tbiqimizi \u0259l\u00e7atan etm\u0259k \u00fc\u00e7\u00fcn biz\u0259 Uvicorn v\u0259 ya Hypercorn kimi ASGI server laz\u0131md\u0131r pip install \"uvicorn[standard]\" --- 100 N\u00fcmun\u0259 Kodu yaradaq main py adl\u0131 fayl yaradaq v\u0259 ona a\u015fa\u011f\u0131dak\u0131 kodu yerl\u0259\u015fdir\u0259k: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} V\u0259 ya async def \u018fg\u0259r kodunuzda async v\u0259 ya await vard\u0131rsa async def istifad\u0259 ed\u0259 bil\u0259rik: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Qeyd: \u018fg\u0259r bu m\u00f6vzu haqq\u0131nda m\u0259lumat\u0131n\u0131z yoxdursa async v\u0259 await s\u0259n\u0259dind\u0259ki \"T\u0259l\u0259sirs\u0259n \" b\u00f6lm\u0259sin\u0259 baxa bil\u0259rsiniz Kodu i\u015f\u0259 salaq Serveri a\u015fa\u011f\u0131dak\u0131 \u0259mr il\u0259 i\u015f\u0259 salaq:  uvicorn main:app --reload INFO: Uvicorn running on http://127 0 0",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup INFO: Application startup complete uvicorn main:app --reload \u0259mri haqq\u0131nda uvicorn main:app \u0259mri a\u015fa\u011f\u0131dak\u0131lara instinad edir: main: main py fayl\u0131 (y\u0259ni Python \"modulu\") app: main py fayl\u0131nda app = FastAPI() s\u0259trind\u0259 yaratd\u0131\u011f\u0131m\u0131z FastAPI obyektidir --reload: kod d\u0259yi\u015fikliyind\u0259n sonra avtomatik olaraq serveri yenid\u0259n i\u015f\u0259 sal\u0131r",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "Bu parametrd\u0259n yaln\u0131z development m\u0259rh\u0259l\u0259sind\u0259 istifad\u0259 etm\u0259liyik \u0130ndi yoxlayaq Bu linki brauzerimizd\u0259 a\u00e7aq http://127 0 0 1:8000/items/5 q=somequery A\u015fa\u011f\u0131dak\u0131 kimi bir JSON cavab\u0131 g\u00f6r\u0259c\u0259ksiniz: {\"item_id\": 5, \"q\": \"somequery\"} Siz art\u0131q bir API yaratm\u0131s\u0131n\u0131z, hans\u0131 ki: / v\u0259 /items/{item_id} yollar\u0131nda HTTP sor\u011fular\u0131n\u0131 q\u0259bul edir H\u0259r iki yolda GET \u0259m\u0259liyyatlar\u0131n\u0131 (h\u0259m\u00e7inin HTTP metodlar\u0131 kimi bilinir) apar\u0131r /items/{item_id} yolu item_id adl\u0131 int qiym\u0259ti almal\u0131 olan yol parametrin\u0259 sahibdir",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "/items/{item_id} yolunun q adl\u0131 yol parametri var v\u0259 bu parametr ist\u0259y\u0259 ba\u011fl\u0131 olsa da, str qiym\u0259tini almal\u0131d\u0131r \u0130nteraktiv API S\u0259n\u0259dl\u0259ri \u0130ndi http://127 0 0 1:8000/docs \u00fcnvan\u0131na daxil olun Avtomatik interaktiv API s\u0259n\u0259dl\u0259rini g\u00f6r\u0259c\u0259ksiniz (Swagger UI t\u0259r\u0259find\u0259n t\u0259min edilir): Alternativ API s\u0259n\u0259dl\u0259ri \u0130ndi is\u0259 http://127 0 0 1:8000/redoc \u00fcnvan\u0131na daxil olun ReDoc t\u0259r\u0259find\u0259n t\u0259qdim edil\u0259n avtomatik s\u0259n\u0259dl\u0259ri g\u00f6r\u0259c\u0259ksiniz: N\u00fcmun\u0259ni Yenil\u0259y\u0259k \u0130ndi g\u0259lin main",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "py fayl\u0131n\u0131 PUT sor\u011fusu il\u0259 birlikd\u0259 g\u00f6vd\u0259 q\u0259bul ed\u0259c\u0259k \u015f\u0259kild\u0259 d\u0259yi\u015fdir\u0259k Pydantic say\u0259sind\u0259 standart Python tipl\u0259rind\u0259n istifad\u0259 ed\u0259r\u0259k g\u00f6vd\u0259ni m\u00fc\u0259yy\u0259n ed\u0259k from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item name, \"item_id\": item_id} Server avtomatik olaraq yenid\u0259n i\u015f\u0259 sal\u0131nmal\u0131 idi (\u00e7\u00fcnki biz yuxar\u0131da uvicorn \u0259mri il\u0259 --reload parametrind\u0259n istifad\u0259 etmi\u015fik) \u0130nteraktiv API s\u0259n\u0259dl\u0259rind\u0259ki d\u0259yi\u015fikliy\u0259 baxaq Yenid\u0259n http://127 0 0 1:8000/docs \u00fcnvan\u0131na daxil olun",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "\u0130nteraktiv API s\u0259n\u0259dl\u0259ri yeni g\u00f6vd\u0259 d\u0259 daxil olmaq il\u0259 avtomatik olaraq yenil\u0259n\u0259c\u0259k: \"Try it out\" d\u00fcym\u0259sini klikl\u0259yin, bu, parametrl\u0259ri doldurma\u011fa v\u0259 API il\u0259 birba\u015fa \u0259laq\u0259 saxlama\u011fa imkan verir: Sonra \"Execute\" d\u00fcym\u0259sini klikl\u0259yin, istifad\u0259\u00e7i interfeysi API il\u0259 \u0259laq\u0259 quracaq, parametrl\u0259ri g\u00f6nd\u0259r\u0259c\u0259k, n\u0259tic\u0259l\u0259ri \u0259ld\u0259 ed\u0259c\u0259k v\u0259 onlar\u0131 ekranda g\u00f6st\u0259r\u0259c\u0259k: Alternativ API S\u0259n\u0259dl\u0259rind\u0259ki D\u0259yi\u015fikliy\u0259 Baxaq \u0130ndi is\u0259 yenid\u0259n http://127 0 0 1:8000/redoc \u00fcnvan\u0131na daxil olun",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "Alternativ s\u0259n\u0259dl\u0259r h\u0259m d\u0259 yeni sor\u011fu parametri v\u0259 g\u00f6vd\u0259sini \u0259ks etdir\u0259c\u0259k: X\u00fclas\u0259 \u00dcmumil\u0259\u015fdirs\u0259k, parametrl\u0259r, g\u00f6vd\u0259 v\u0259 s Biz m\u0259lumat n\u00f6vl\u0259rini bir d\u0259f\u0259 funksiya parametrl\u0259ri kimi t\u0259yin edirik Bunu standart m\u00fcasir Python tipl\u0259ri il\u0259 edirsiniz Yeni sintaksis, m\u00fc\u0259yy\u0259n bir kitabxanan\u0131n metodlar\u0131n\u0131 v\u0259 ya sinifl\u0259rini v\u0259 s \u00f6yr\u0259nm\u0259k m\u0259cburiyy\u0259tind\u0259 deyilsiniz Sad\u0259c\u0259 standart Python M\u0259s\u0259l\u0259n, int \u00fc\u00e7\u00fcn: item_id: int v\u0259 ya daha m\u00fcr\u0259kk\u0259b Item modeli \u00fc\u00e7\u00fcn: item: Item",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "v\u0259 yaln\u0131z parametr tipini t\u0259yin etm\u0259kl\u0259 bunlar\u0131 \u0259ld\u0259 edirsiniz: Redaktor d\u0259st\u0259yi il\u0259: Avtomatik tamamlama Tip yoxlanmas\u0131 M\u0259lumatlar\u0131n T\u0259sdiql\u0259nm\u0259si: M\u0259lumat etibars\u0131z olduqda avtomatik olaraq ayd\u0131n x\u0259talar g\u00f6st\u0259rir H\u0259tta \u00e7ox d\u0259rin JSON obyektl\u0259rind\u0259 bel\u0259 do\u011frulama apar\u0131r Daxil olan m\u0259lumatlar\u0131 \u00e7evirm\u0259k \u00fc\u00e7\u00fcn a\u015fa\u011f\u0131dak\u0131 m\u0259lumat n\u00f6vl\u0259rind\u0259n istifad\u0259 edilir: JSON Yol parametrl\u0259ri Sor\u011fu parametrl\u0259ri \u00c7\u0259r\u0259zl\u0259r Ba\u015fl\u0131qlaq Formalar Fayllar",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "Daxil olan m\u0259lumatlar\u0131 \u00e7evirm\u0259k \u00fc\u00e7\u00fcn a\u015fa\u011f\u0131dak\u0131 m\u0259lumat n\u00f6vl\u0259rind\u0259n istifad\u0259 edilir (JSON olaraq): Python tipl\u0259rinin (str, int, float, bool, list, v\u0259 s) \u00e7evrilm\u0259si datetime obyektl\u0259ri UUID obyektl\u0259ri Veril\u0259nl\u0259r bazas\u0131 modell\u0259ri v\u0259 daha \u00e7oxu 2 alternativ istifad\u0259\u00e7i interfeysi daxil olmaqla avtomatik interaktiv API s\u0259n\u0259dl\u0259rini t\u0259min edir: Swagger UI ReDoc G\u0259lin \u0259vv\u0259lki n\u00fcmun\u0259y\u0259 qay\u0131daq v\u0259 FastAPI-nin n\u0259l\u0259r ed\u0259c\u0259yin\u0259 n\u0259z\u0259r salaq: GET v\u0259 PUT sor\u011fular\u0131 \u00fc\u00e7\u00fcn item_id-nin yolda olub-olmad\u0131\u011f\u0131n\u0131 yoxlayacaq",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "item_id-nin GET v\u0259 PUT sor\u011fular\u0131 \u00fc\u00e7\u00fcn n\u00f6v\u00fcn\u00fcn int oldu\u011funu yoxlayacaq \u018fg\u0259r int deyils\u0259, s\u0259b\u0259bini g\u00f6st\u0259r\u0259n bir x\u0259ta mesaj\u0131 g\u00f6st\u0259r\u0259c\u0259kdir m\u0259cburi olmayan q parametrinin GET (http://127 0 0 1:8000/items/foo q=somequery burdak\u0131 kimi) sor\u011fusu i\u00e7\u0259risind\u0259 olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq q parametrini = None il\u0259 yaratd\u0131\u011f\u0131m\u0131z \u00fc\u00e7\u00fcn, m\u0259cburi olmayan parametr olacaq \u018fg\u0259r None olmasayd\u0131, bu m\u0259cburi parametr olard\u0131 (PUT metodunun g\u00f6vd\u0259sind\u0259 oldu\u011fu kimi)",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        },
        {
          "content": "PUT sor\u011fusu \u00fc\u00e7\u00fcn, /items/{item_id} g\u00f6vd\u0259sini JSON olaraq oxuyacaq: name ad\u0131nda m\u0259cburi bir parametr olub olmad\u0131\u011f\u0131n\u0131 v\u0259 \u0259g\u0259r varsa, tipinin str olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq price ad\u0131nda m\u0259cburi bir parametr olub olmad\u0131\u011f\u0131n\u0131 v\u0259 \u0259g\u0259r varsa, tipinin float olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq is_offer ad\u0131nda m\u0259cburi olmayan bir parametr olub olmad\u0131\u011f\u0131n\u0131 v\u0259 \u0259g\u0259r varsa, tipinin float olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq B\u00fct\u00fcn bunlar \u0259n d\u0259rin JSON obyektl\u0259rind\u0259 bel\u0259 i\u015fl\u0259y\u0259c\u0259k",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_22"
        },
        {
          "content": "M\u0259lumatlar\u0131n JSON-a v\u0259 JSON-un Python obyektin\u0259 \u00e7evrilm\u0259si avtomatik h\u0259yata ke\u00e7iril\u0259c\u0259k H\u0259r \u015feyi OpenAPI il\u0259 uy\u011fun olacaq \u015f\u0259kild\u0259 avtomatik olaraq s\u0259n\u0259dl\u0259\u015fdir\u0259c\u0259k v\u0259 onlar\u0131 a\u015fa\u011f\u0131dak\u0131 kimi istifad\u0259 ed\u0259 bil\u0259c\u0259k: \u0130nteraktiv s\u0259n\u0259dl\u0259\u015fm\u0259 sisteml\u0259ri Bir \u00e7ox proqramla\u015fd\u0131rma dill\u0259ri \u00fc\u00e7\u00fcn avtomatla\u015fd\u0131r\u0131lm\u0131\u015f m\u00fc\u015ft\u0259ri kodu yaratma sisteml\u0259ri 2 interaktiv s\u0259n\u0259dl\u0259\u015fm\u0259 veb interfeysini birba\u015fa t\u0259min ed\u0259c\u0259k Yeni ba\u015flam\u0131\u015f\u0131q, amma siz art\u0131q i\u015fin m\u0259ntiqini ba\u015fa d\u00fc\u015fm\u00fcs\u00fcn\u00fcz",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_23"
        },
        {
          "content": "\u0130ndi a\u015fa\u011f\u0131dak\u0131 s\u0259tri d\u0259yi\u015fdirm\u0259y\u0259 \u00e7al\u0131\u015f\u0131n: return {\"item_name\": item name, \"item_id\": item_id} bundan: \"item_name\": item name buna: \"item_price\": item price v\u0259 redaktorun m\u0259lumat tipl\u0259rini bildiyini v\u0259 avtomatik tamalad\u0131\u011f\u0131n\u0131 g\u00f6r\u0259c\u0259ksiniz: Daha \u00e7ox funksiyaya malik daha dol\u011fun n\u00fcmun\u0259 \u00fc\u00e7\u00fcn \u00d6yr\u0259dici - \u0130stifad\u0259\u00e7i T\u0259limat\u0131 s\u0259hif\u0259sin\u0259 baxa bil\u0259rsiniz",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_24"
        },
        {
          "content": "Spoiler x\u0259b\u0259rdarl\u0131\u011f\u0131: \u00d6yr\u0259dici - istifad\u0259\u00e7i t\u0259limat\u0131na bunlar daxildir: Parametrl\u0259rin, ba\u015fl\u0131qlar, \u00e7\u0259r\u0259zl\u0259r, forma sah\u0259l\u0259ri v\u0259 fayllar olaraq m\u00fc\u0259yy\u0259n edilm\u0259si maximum_length v\u0259 ya regex kimi do\u011frulama m\u0259hdudiyy\u0259tl\u0259rinin nec\u0259 t\u0259yin edil\u0259c\u0259yi \u00c7ox g\u00fccl\u00fc v\u0259 istifad\u0259si asan Dependency Injection sistemi T\u0259hl\u00fck\u0259sizlik v\u0259 autentifikasiya, JWT tokenl\u0259ri il\u0259 OAuth2 d\u0259st\u0259yi v\u0259 HTTP Basic autentifikasiyas\u0131",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_25"
        },
        {
          "content": "\u00e7ox d\u0259rin JSON modell\u0259rini m\u00fc\u0259yy\u0259n etm\u0259k \u00fc\u00e7\u00fcn daha ir\u0259li s\u0259viyy\u0259 (lakin eyni d\u0259r\u0259c\u0259d\u0259 asan) \u00fcsullar (Pydantic say\u0259sind\u0259) Strawberry v\u0259 dig\u0259r kitabxanalar il\u0259 GraphQL inteqrasiyas\u0131 Dig\u0259r \u0259lav\u0259 x\u00fcsusiyy\u0259tl\u0259r (Starlette say\u0259sind\u0259): WebSockets HTTPX v\u0259 pytest say\u0259sind\u0259 \u00e7ox asan testl\u0259r CORS Cookie Sessions v\u0259 daha \u00e7oxu",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_26"
        },
        {
          "content": "Performans M\u00fcst\u0259qil TechEmpower meyarlar\u0131 g\u00f6st\u0259rir ki, Uvicorn \u00fcz\u0259rind\u0259 i\u015fl\u0259y\u0259n FastAPI proqramlar\u0131 \u0259n s\u00fcr\u0259tli Python kitabxanalar\u0131ndan biridir, yaln\u0131z Starlette v\u0259 Uvicorn-un \u00f6z\u00fcnd\u0259n yava\u015fd\u0131r, ki FastAPI bunlar\u0131n \u00fcz\u0259rin\u0259 qurulmu\u015f bir framework-d\u00fcr (*) \u018ftrafl\u0131 m\u0259lumat \u00fc\u00e7\u00fcn bu b\u00f6lm\u0259y\u0259 n\u0259z\u0259r sal\u0131n M\u00fcqayis\u0259l\u0259r M\u0259cburi Olmayan T\u0259l\u0259bl\u0259r Pydantic t\u0259r\u0259find\u0259n istifad\u0259 olunanlar: email-validator - e-po\u00e7tun yoxlan\u0131lmas\u0131 \u00fc\u00e7\u00fcn pydantic-settings - parametrl\u0259rin idar\u0259 edilm\u0259si \u00fc\u00e7\u00fcn",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_27"
        },
        {
          "content": "pydantic-extra-types - Pydantic il\u0259 istifad\u0259 edil\u0259 bil\u0259n \u0259lav\u0259 tipl\u0259r \u00fc\u00e7\u00fcn Starlette t\u0259r\u0259find\u0259n istifad\u0259 olunanlar: httpx - \u018fg\u0259r TestClient strukturundan istifad\u0259 ed\u0259c\u0259ksinizs\u0259, t\u0259l\u0259b olunur jinja2 - Standart \u015fablon konfiqurasiyas\u0131ndan istifad\u0259 etm\u0259k ist\u0259yirsinizs\u0259, t\u0259l\u0259b olunur python-multipart - request form() il\u0259 forma \"\u00e7evirm\u0259\" d\u0259st\u0259yind\u0259n istifad\u0259 etm\u0259k ist\u0259yirsinizs\u0259, t\u0259l\u0259b olunur itsdangerous - SessionMiddleware d\u0259st\u0259yi \u00fc\u00e7\u00fcn t\u0259l\u0259b olunur",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_28"
        },
        {
          "content": "pyyaml - SchemaGenerator d\u0259st\u0259yi \u00fc\u00e7\u00fcn t\u0259l\u0259b olunur (\u00c7ox g\u00fcman ki, FastAPI istifad\u0259 ed\u0259rk\u0259n buna ehtiyac\u0131n\u0131z olmayacaq) ujson - UJSONResponse istifad\u0259 etm\u0259k ist\u0259yirsinizs\u0259, t\u0259l\u0259b olunur H\u0259m FastAPI, h\u0259m d\u0259 Starlette t\u0259r\u0259find\u0259n istifad\u0259 olunur: uvicorn - Yaratd\u0131\u011f\u0131m\u0131z proqram\u0131 servis ed\u0259c\u0259k veb server kimi f\u0259aliyy\u0259t g\u00f6st\u0259rir orjson - ORJSONResponse istifad\u0259 ed\u0259c\u0259ksinizs\u0259 t\u0259l\u0259b olunur B\u00fct\u00fcn bunlar\u0131 pip install fastapi[all] il\u0259 qura\u015fd\u0131ra bil\u0259rsiniz",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_29"
        },
        {
          "content": "Lisenziya Bu layih\u0259 MIT lisenziyas\u0131n\u0131n \u015f\u0259rtl\u0259rin\u0259 \u0259sas\u0259n lisenziyala\u015fd\u0131r\u0131l\u0131b Yuxar\u0131ya qay\u0131tmaq",
          "url": "https://fastapi.tiangolo.com/az/",
          "library": "fastapi",
          "chunk_id": "fastapi_30"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/bn/",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI \u09b8\u099a \u09a4\u09b2\u0995 \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u09ae\u09a4\u09ae\u09a4 \u09b8\u09ae\u09b9 Typer, CLI \u098f\u09b0 \u099c\u09a8\u09af FastAPI \u09aa\u09b0\u09af\u099c\u09a8\u09af\u09a4 \u0997\u09b2 \u0987\u09a8\u09b8\u099f\u09b2\u09b6\u09a8 \u09aa\u09b0\u0995\u09b0\u09df \u0989\u09a6\u09b9\u09b0\u09a3 \u09a4\u09b0 \u098f\u099f \u099a\u09b2\u09a8 \u098f\u099f \u099a\u0995 \u0995\u09b0\u09a8 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa \u0986\u09aa\u0997\u09b0\u09a1 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a8\u09a8\u09a4\u0995\u09b0\u09a3 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0986\u09aa\u0997\u09b0\u09a1 \u09b8\u0995\u09b7\u09aa\u09a4\u0995\u09b0\u09a3 \u0995\u09b0\u09ae\u0995\u09b7\u09ae\u09a4 \u0990\u099a\u099b\u0995 \u09a8\u09b0\u09ad\u09b0\u09b6\u09b2\u09a4 \u09b2\u0987\u09b8\u09a8\u09b8 Features \u09b6\u0996\u09a8 \u09b6\u0996\u09a8 \u09aa\u0987\u09a5\u09a8 \u098f\u09b0 \u099f\u0987\u09aa\u09b8 \u09aa\u09b0\u099a\u09a4 Concurrency and async / await \u098f\u09a8\u09ad\u09af\u09b0\u09a8\u09ae\u09a8\u099f \u09ad\u09b0\u09af\u09ac\u09b2\u09b8 Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes \u09b8\u099a \u09a4\u09b2\u0995 \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u09ae\u09a4\u09ae\u09a4 \u09b8\u09ae\u09b9 Typer, CLI \u098f\u09b0 \u099c\u09a8\u09af FastAPI \u09aa\u09b0\u09af\u099c\u09a8\u09af\u09a4 \u0997\u09b2 \u0987\u09a8\u09b8\u099f\u09b2\u09b6\u09a8 \u09aa\u09b0\u0995\u09b0\u09df \u0989\u09a6\u09b9\u09b0\u09a3 \u09a4\u09b0 \u098f\u099f \u099a\u09b2\u09a8 \u098f\u099f \u099a\u0995 \u0995\u09b0\u09a8 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa \u0986\u09aa\u0997\u09b0\u09a1 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a8\u09a8\u09a4\u0995\u09b0\u09a3 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0986\u09aa\u0997\u09b0\u09a1 \u09b8\u0995\u09b7\u09aa\u09a4\u0995\u09b0\u09a3 \u0995\u09b0\u09ae\u0995\u09b7\u09ae\u09a4 \u0990\u099a\u099b\u0995 \u09a8\u09b0\u09ad\u09b0\u09b6\u09b2\u09a4 \u09b2\u0987\u09b8\u09a8\u09b8 FastAPI FastAPI \u0989\u099a\u099a\u0995\u09b7\u09ae\u09a4 \u09b8\u09ae\u09aa\u09a8\u09a8, \u09b8\u09b9\u099c \u09b6\u0996\u09b0 \u098f\u09ac \u09a6\u09b0\u09a4 \u0995\u09a1 \u0995\u09b0 \u09aa\u09b0\u09a1\u0995\u09b6\u09a8\u09b0 \u099c\u09a8\u09af \u09ab\u09b0\u09ae\u0993\u09df\u09b0\u0995 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5: https://fastapi.tiangolo.com \u09b8\u09b0\u09b8 \u0995\u09a1: https://github.com/fastapi/fastapi FastAPI \u098f\u0995\u099f \u0986\u09a7\u09a8\u0995, \u09a6\u09b0\u09a4 ( \u09ac\u09b6 \u0995\u09b7\u09ae\u09a4 ) \u09b8\u09ae\u09aa\u09a8\u09a8, Python 3.6+ \u09a6\u09df API \u09a4\u09b0\u09b0 \u099c\u09a8\u09af \u09b8\u099f\u09af\u09a8\u09a1\u09b0\u09a1 \u09aa\u0987\u09a5\u09a8 \u099f\u0987\u09aa \u0987\u0999\u0997\u09a4 \u09ad\u09a4\u09a4\u0995 \u0993\u09af\u09ac \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995 \u098f\u09b0 \u09ae\u09b2 \u09ac\u09b6\u09b7\u099f\u09af \u0997\u09b2 \u09b9\u09b2 \u0997\u09a4: \u098f\u099f NodeJS \u098f\u09ac Go \u098f\u09b0 \u09ae\u09a4 \u0995\u09b0\u09af\u0995\u09b7\u09ae\u09a4 \u09b8\u09ae\u09aa\u09a8\u09a8 (Starlette \u098f\u09ac Pydantic \u098f\u09b0 \u09b8\u09b9\u09af\u09af) \u09aa\u0987\u09a5\u09a8 \u098f\u09b0 \u09a6\u09b0\u09a4\u09a4\u09ae \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995 \u0997\u09b2\u09b0 \u09ae\u09a7\u09af \u098f\u099f \u098f\u0995\u099f \u09a6\u09b0\u09a4 \u0995\u09a1 \u0995\u09b0:\u09ac\u09b6\u09b7\u099f\u09af \u09a4\u09b0\u09b0 \u0997\u09a4 \u09e8\u09e6\u09e6 \u09a5\u0995 \u09e9\u09e6\u09e6 \u09ac\u09a6\u09a7 \u0995\u09b0\u09f7 * \u09b8\u09ac\u09b2\u09aa bugs: \u09ae\u09a8\u09ac (\u09a1\u09ad\u09b2\u09aa\u09b0) \u09b8\u09b7\u099f \u09a4\u09b0\u099f\u09b0 \u09aa\u09b0\u09af \u09ea\u09e6 \u09b9\u09b0\u09b8 \u0995\u09b0 * \u09b8\u09ac\u099c\u099e\u09a4: \u09a6\u09b0\u09a6\u09a8\u09a4 \u098f\u09a1\u099f\u09b0 \u09b8\u09b9\u09af\u09af Completion \u09a8\u09ae\u0993 \u09aa\u09b0\u099a\u09a4 \u09a6\u09b0\u09a4 \u09a1\u09ac\u0997 \u0995\u09b0 \u09af\u09df \u09b8\u09b9\u099c: \u098f\u099f \u098f\u09ae\u09a8 \u09ad\u09ac \u09b8\u099c\u09a8 \u09b9\u09df\u099b \u09af\u09a8 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09aa\u09dc \u09b8\u09b9\u099c \u09b6\u0996 \u098f\u09ac \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09af\u09df \u09b8\u0995\u09b7\u09aa\u09a4: \u0995\u09a1 \u09aa\u09a8\u09b0\u09ac\u09a4\u09a4 \u0995\u09ae\u09a8\u09b0 \u09aa\u09b6\u09aa\u09b6, bug \u0995\u09ae\u09df \u098f\u09ac \u09aa\u09b0\u09a4\u099f \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0998\u09b7\u09a3 \u09a5\u0995 \u098f\u0995\u09a7\u0995 \u09ab\u099a\u09b0 \u09aa\u0993\u09df \u09af\u09df  \u099c\u09b0\u09b2: \u09b8\u09ac\u09af\u0995\u09b0\u09af \u09ad\u09ac \u09a4\u09b0 \u0995\u09b0\u09df\u09b6\u09b2 \u09a8\u09b0\u09a6\u09b6\u09a8 \u09a8\u09a5 (documentation) \u09b8\u09b9 \u0989\u09ce\u09aa\u09a6\u09a8 \u0989\u09aa\u09af\u0997 (Production-ready) \u0995\u09a1 \u09aa\u0993\u09df \u09af\u09df \u09ae\u09a8-\u09ad\u09a4\u09a4\u0995: \u098f\u09b0 \u09ad\u09a4\u09a4 OpenAPI (\u09af \u09aa\u09b0\u09ac Swagger \u09a8\u09ae \u09aa\u09b0\u099a\u09a4 \u099b\u09b2) \u098f\u09ac JSON Schema \u098f\u09b0 \u0986\u09a6\u09b0\u09b6\u09b0 \u09ae\u09a8\u09b0 \u0993\u09aa\u09b0 * \u0989\u09ce\u09aa\u09a6\u09a8\u09ae\u0996 \u098f\u09aa\u09b2\u0995\u09b6\u09a8 \u09ac\u09a8\u09a8\u09b0 \u098f\u0995 \u09a6\u09b2 \u09a1\u09ad\u09b2\u09aa\u09b0 \u098f\u09b0 \u09ae\u09a4\u09ae\u09a4 \u09ad\u09a4\u09a4\u0995 \u09ab\u09b2\u09ab\u09b2 \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u0985\u09a8\u09af\u09a8\u09af \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u09ae\u09a4\u09ae\u09a4 \u09b8\u09ae\u09b9 \"\u0986\u09ae \u0986\u099c\u0995\u09b2 FastAPI \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u099b [...] \u0986\u09ae\u09b0 \u09ad\u09ac\u099b \u09ae\u0987\u0995\u09b0\u09b8\u09ab\u099f ML \u09b8\u09b0\u09ad\u09b8 \u098f \u09b8\u0995\u09b2 \u09a6\u09b2\u09b0 \u099c\u09a8\u09af \u098f\u099f \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09ac \u09af\u09b0 \u09ae\u09a7\u09af \u0995\u099b \u09aa\u09a3\u09af Windows \u098f \u09b8\u09af\u09af\u09a8 \u09b9\u09df \u098f\u09ac \u0995\u099b Office \u098f\u09b0 \u09b8\u09a5 \u09b8\u09af\u09af\u09a8 \u09b9\u099a\u099b\" \u0995\u09ac\u09b0 \u0996\u09a8 - \u09ae\u0987\u0995\u09b0\u09b8\u09ab\u099f (ref) \"\u0986\u09ae\u09b0 FastAPI \u09b2\u0987\u09ac\u09b0\u09b0 \u0997\u09b0\u09b9\u09a3 \u0995\u09b0\u099b \u098f\u0995\u099f REST \u09b8\u09b0\u09ad\u09b0 \u09a4\u09b0 \u0995\u09b0\u09a4, \u09af \u09ad\u09ac\u09b7\u09af\u09a6\u09ac\u09a3 \u09aa\u0993\u09af\u09b0 \u099c\u09a8\u09af \u0995\u09df\u09b0 \u0995\u09b0 \u09af\u09a4 \u09aa\u09b0 [\u09b2\u09a1\u0989\u0987\u0997\u09b0 \u099c\u09a8\u09af]\" \u09aa\u09af\u09b0 \u09ae\u09b2\u09a8, \u0987\u09af\u09b0\u09b8\u09b2\u09ad \u09a6\u09a6\u09a8, \u098f\u09ac \u09b8\u0987 \u09b8\u09ae\u09a8\u09a5 \u09ae\u09b0\u09af\u09b2 - \u0989\u09ac\u09b0 (ref) \"Netflix \u0986\u09ae\u09a6\u09b0 \u0995\u09b0\u0987\u09b8\u09b8 \u09ae\u09af\u09a8\u099c\u09ae\u09a8\u099f \u0985\u09b0\u0995\u09b8\u099f\u09b0\u09b6\u09a8 \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995: \u09a1\u09b8\u09aa\u09af\u099a \u098f\u09b0 \u0993\u09aa\u09a8 \u09b8\u09b0\u09b8 \u09b0\u09b2\u099c \u0998\u09b7\u09a3 \u0995\u09b0\u09a4 \u09aa\u09b0 \u0986\u09a8\u09a8\u09a6\u09a4! [\u09af\u0995\u09a8 FastAPI \u09a6\u09af \u09a8\u09b0\u09ae\u09a4]\" \u0995\u09ad\u09a8 \u0997\u09b2\u09b8\u09a8, \u09ae\u09b0\u0995 \u09ad\u09b2\u09a8\u09ad, \u09ab\u09b0\u09b8\u099f \u09ae\u09a8\u09b8\u09a8 - \u09a8\u099f\u09ab\u09b2\u0995\u09b8 (ref) \"\u0986\u09ae FastAPI \u09a8\u09af \u099a\u09a6\u09b0 \u09b8\u09ae\u09a8 \u0989\u09ce\u09b8\u09b9\u09a4 \u098f\u099f \u0996\u09ac\u0987 \u09ae\u099c\u09b0!\" \u09ac\u09b0\u09af\u09a8 \u0993\u0995\u09a8 - \u09aa\u0987\u09a5\u09a8 \u09ac\u0987\u099f\u09b8 \u09aa\u09a1\u0995\u09b8\u099f \u09b9\u09b8\u099f (ref) \"_\u09b8\u09a4\u09af\u0987, \u0986\u09aa\u09a8 \u09af \u09a4\u09b0 \u0995\u09b0\u099b\u09a8 \u09a4 \u0996\u09ac \u09ae\u099c\u09ac\u09a4 \u098f\u09ac \u09aa\u09b0\u09aa\u09b0\u09a8\u09f7 \u0985\u09a8\u0995 \u0989\u09aa\u09af, \u0986\u09ae \u09af Hug \u098f \u0995\u09b0\u09a4 \u099a\u09df\u099b\u09b2\u09ae - \u09a4 \u0995\u0989\u0995 \u09a4\u09b0 \u0995\u09b0\u09a4 \u09a6\u0996 \u0986\u09ae \u09b8\u09a4\u09af\u0987 \u0985\u09a8\u09aa\u09b0\u09a8\u09a4\u09f7_\" \u099f\u09ae\u09a5 \u0995\u09b0\u09b8\u09b2 - Hug \u09b8\u09b0\u09b7\u099f (ref) \"\u0986\u09aa\u09a8 \u09af\u09a6 REST API \u09a4\u09b0\u09b0 \u099c\u09a8\u09af \u098f\u0995\u099f \u0986\u09a7\u09a8\u0995 \u09ab\u09b0\u09ae\u0993\u09df\u09b0\u0995 \u09b6\u0996\u09a4 \u099a\u09a8, \u09a4\u09b9\u09b2 FastAPI \u09a6\u0996\u09a8 [...] \u098f\u099f \u09a6\u09b0\u09a4, \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09b8\u09b9\u099c \u098f\u09ac \u09b6\u0996\u09a4\u0993 \u09b8\u09b9\u099c [...]_\" \"\u0986\u09ae\u09b0 \u0986\u09ae\u09a6\u09b0 APIs [...] \u098f\u09b0 \u099c\u09a8\u09af FastAPI- \u09a4 \u098f\u09b8\u099b [...] \u0986\u09ae \u09ae\u09a8 \u0995\u09b0 \u0986\u09aa\u09a8\u0993 \u098f\u099f \u09aa\u099b\u09a8\u09a6 \u0995\u09b0\u09ac\u09a8 [...]\" \u0987\u09a8\u09b8 \u09ae\u09a8\u099f\u09a8 - \u09ae\u09af\u09a5\u0989 \u09b9\u09a8\u09ac\u09b2 - Explosion AI \u09aa\u09b0\u09a4\u09b7\u09a0\u09a4 - spaCy \u09b8\u09b0\u09b7\u099f (ref) - (ref) Typer, CLI \u098f\u09b0 \u099c\u09a8\u09af FastAPI \u0986\u09aa\u09a8 \u09af\u09a6 CLI \u0985\u09af\u09aa \u09ac\u09a8\u09a4 \u099a\u09a8, \u09af \u0995\u09a8 \u0993\u09df\u09ac API \u098f\u09b0 \u09aa\u09b0\u09ac\u09b0\u09a4 \u099f\u09b0\u09ae\u09a8\u09b2 \u09ac\u09af\u09ac\u09b9\u09b0 \u09b9\u09ac, \u09a4\u09b9\u09b2 \u09a6\u0996\u09a8Typer. \u099f\u0987\u09aa\u09b0 \u09b9\u09b2 FastAPI \u098f\u09b0 \u099b\u099f \u09ad\u0987\u09df\u09b0 \u09ae\u09a4 \u098f\u09ac \u098f\u099f\u09b0 \u0989\u09a6\u09a6\u09b6\u09af \u099b\u09b2 CLIs \u098f\u09b0 FastAPI \u09b9\u0993\u09df   \u09aa\u09b0\u09af\u099c\u09a8\u09af\u09a4 \u0997\u09b2 Python 3.7+ FastAPI \u0995\u099b \u09a6\u09a8\u09ac\u09a6\u09b0 \u0995\u09a7 \u09a6\u09a1\u09af \u0986\u099b: Starlette \u0993\u09af\u09ac \u0985\u09b6\u09b0 \u099c\u09a8\u09af. Pydantic \u09a1\u099f \u0985\u09b6\u0997\u09b2\u09b0 \u099c\u09a8\u09af. \u0987\u09a8\u09b8\u099f\u09b2\u09b6\u09a8 \u09aa\u09b0\u0995\u09b0\u09df  pip install fastapi --- 100 \u0986\u09aa\u09a8\u09b0 \u098f\u0995\u099f ASGI \u09b8\u09b0\u09ad\u09b0\u09b0\u0993 \u09aa\u09b0\u09af\u099c\u09a8 \u09b9\u09ac, \u09aa\u09b0\u09a1\u0995\u09b6\u09a8\u09b0 \u099c\u09a8\u09af Uvicorn \u0985\u09a5\u09ac Hypercorn.  pip install \"uvicorn[standard]\" --- 100 \u0989\u09a6\u09b9\u09b0\u09a3 \u09a4\u09b0 main.py \u09a8\u09ae \u098f\u0995\u099f \u09ab\u0987\u09b2 \u09a4\u09b0 \u0995\u09b0\u09a8: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} \u0985\u09a5\u09ac \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a8 async def... \u09af\u09a6 \u0986\u09aa\u09a8\u09b0 \u0995\u09a1 async / await, \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09a4\u09b9\u09b2 async def \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a8: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} \u099f\u0995: \u0986\u09aa\u09a8 \u09af\u09a6 \u09a8 \u099c\u09a8\u09a8, \"\u09a4\u09a1\u09b9\u09a1?\" \u09ac\u09ad\u0997\u099f \u09a6\u0996\u09a8 async \u098f\u09ac await \u09a8\u09a5\u09b0 \u09ae\u09a7\u09af \u09a6\u0996\u09a8 . \u098f\u099f \u099a\u09b2\u09a8 \u09b8\u09b0\u09ad\u09b0 \u099a\u09b2 \u0995\u09b0\u09a8:  uvicorn main:app --reload INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup. INFO: Application startup complete. \u09a8\u09b0\u09a6\u09b6\u09a8 \u09b8\u09ae\u09aa\u09b0\u0995 uvicorn main:app --reload... uvicorn main:app \u09a8\u09b0\u09a6\u09b6\u09a8\u099f \u09a6\u09ac\u09b0 \u09ac\u099d\u09af: main: \u09ab\u0987\u09b2 main.py (\u09aa\u0987\u09a5\u09a8 \"\u09ae\u09a1\u0989\u09b2\") app: app = FastAPI() \u09b2\u0987\u09a8 \u09a6\u09af main.py \u098f\u09b0 \u09ad\u09a4\u09b0 \u09a4\u09b0 \u0995\u09b0 \u0985\u09ac\u099c\u0995\u099f --reload: \u0995\u09a1 \u09aa\u09b0\u09ac\u09b0\u09a4\u09a8\u09b0 \u09aa\u09b0 \u09b8\u09b0\u09ad\u09b0 \u09aa\u09a8\u09b0\u09af \u099a\u09b2 \u0995\u09b0\u09a8 \u098f\u099f \u09b6\u09a7\u09ae\u09a4\u09b0 \u09a1\u09ad\u09b2\u09aa\u09ae\u09a8\u099f \u098f\u09b0 \u09b8\u09ae\u09df \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a8 \u098f\u099f \u099a\u0995 \u0995\u09b0\u09a8 \u0986\u09aa\u09a8\u09b0 \u09ac\u09b0\u0989\u099c\u09b0 \u0996\u09b2\u09a8 http://127.0.0.1:8000/items/5?q=somequery \u098f \u0986\u09aa\u09a8 JSON \u09b0\u09b8\u09aa\u09a8\u09b8 \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8: {\"item_id\": 5, \"q\": \"somequery\"} \u0986\u09aa\u09a8 \u0987\u09a4\u09ae\u09a7\u09af \u098f\u0995\u099f API \u09a4\u09b0 \u0995\u09b0\u099b\u09a8 \u09af: / \u098f\u09ac /items/{item_id} paths \u098f HTTP \u0985\u09a8\u09b0\u09a7 \u0997\u09b0\u09b9\u09a3 \u0995\u09b0 \u0989\u09ad\u09af path\u0987 GET \u0985\u09aa\u09b0\u09b6\u09a8 \u09a8\u09af ( \u09af HTTP methods \u09a8\u09ae\u0993 \u09aa\u09b0\u099a\u09a4) path /items/{item_id}-\u098f \u098f\u0995\u099f path \u09aa\u09af\u09b0\u09ae\u099f\u09b0 item_id \u0986\u099b \u09af \u0995\u09a8 int \u09b9\u09a4 \u09b9\u09ac path /items/{item_id}-\u098f\u09b0 \u098f\u0995\u099f \u0990\u099a\u099b\u0995 str query \u09aa\u09af\u09b0\u09ae\u099f\u09b0 q \u0986\u099b \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u098f\u0996\u09a8 \u09af\u09a8 http://127.0.0.1:8000/docs. \u0986\u09aa\u09a8 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u09ad\u09ac \u09aa\u09b0\u09b8\u09a4\u09a4 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8 (Swagger UI \u09aa\u09b0\u09a6\u09a4\u09a4): \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u098f\u09ac \u098f\u0996\u09a8 http://127.0.0.1:8000/redoc \u098f \u09af\u09a8. \u0986\u09aa\u09a8 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u09ad\u09ac \u09aa\u09b0\u09b8\u09a4\u09a4 \u09ac\u0995\u09b2\u09aa \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8 (ReDoc \u09aa\u09b0\u09a6\u09a4\u09a4): \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa \u0986\u09aa\u0997\u09b0\u09a1 \u098f\u0996\u09a8 main.py \u09ab\u0987\u09b2\u099f \u09aa\u09b0\u09ac\u09b0\u09a4\u09a8 \u0995\u09b0\u09a8 \u09af\u09a8 \u098f\u099f PUT \u09b0\u0995\u09df\u09b8\u099f \u09a5\u0995 \u09ac\u09a1 \u09aa\u09a4 \u09aa\u09b0 Python \u09b8\u099f\u09af\u09a8\u09a1\u09b0\u09a1 \u09b2\u0987\u09ac\u09b0\u09b0, Pydantic \u098f\u09b0 \u09b8\u09b9\u09af\u09af \u09ac\u09a1 \u0998\u09b7\u09a3 \u0995\u09b0\u09a8 from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} \u09b8\u09b0\u09ad\u09b0\u099f \u09b8\u09ac\u09af\u0995\u09b0\u09af\u09ad\u09ac \u09aa\u09a8\u09b0\u09af \u09b2\u09a1 \u09b9\u0993\u09af \u0989\u099a\u09a4 (\u0995\u09b0\u09a3 \u0986\u09aa\u09a8 \u0989\u09aa\u09b0\u09b0 uvicorn \u0995\u09ae\u09a8\u09a1 --reload \u09af\u0997 \u0995\u09b0\u099b\u09a8) \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a8\u09a8\u09a4\u0995\u09b0\u09a3 \u098f\u0996\u09a8 http://127.0.0.1:8000/docs \u098f\u09a1\u09a1\u09b0\u09b8 \u09af\u09a8. \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5\u099f \u09b8\u09ac\u09af\u0995\u09b0\u09af\u09ad\u09ac \u0989\u09a8\u09a8\u09a4 \u09b9\u09af \u09af\u09ac, \u09a8\u09a4\u09a8 \u09ac\u09a1 \u09b8\u09b9: \"Try it out\" \u09ac\u099f\u09a8 \u099a\u09aa\u09a8, \u098f\u099f \u0986\u09aa\u09a8\u0995 \u09aa\u09b0\u09ae\u099f\u09b0\u0997\u09b2 \u09aa\u09b0\u09a3 \u0995\u09b0\u09a4 \u098f\u09ac API \u098f\u09b0 \u09b8\u09a5 \u09b8\u09b0\u09b8\u09b0 \u0995\u09b0\u09df-\u0995\u09b2\u09aa \u0995\u09b0\u09a4 \u09a6\u09ac: \u09a4\u09b0\u09aa\u09b0 \"Execute\" \u09ac\u099f\u09a8 \u099a\u09aa\u09a8, \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0987\u09a8\u099f\u09b0\u09ab\u09b8 \u0986\u09aa\u09a8\u09b0 API \u098f\u09b0 \u09b8\u09a5 \u09af\u0997\u09af\u0997 \u0995\u09b0\u09ac, \u09aa\u09b0\u09ae\u099f\u09b0 \u09aa\u09a0\u09ac, \u09ab\u09b2\u09ab\u09b2\u0997\u09b2 \u09aa\u09ac \u098f\u09ac \u09b8\u0997\u09b2 \u09aa\u09b0\u09b0\u09a6\u09df \u09a6\u0996\u09ac: \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0986\u09aa\u0997\u09b0\u09a1 \u098f\u09ac \u098f\u0996\u09a8 http://127.0.0.1:8000/redoc \u098f \u09af\u09a8 \u09ac\u0995\u09b2\u09aa \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5\u09a4\u0993 \u09a8\u09a4\u09a8 \u0995\u09df\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u098f\u09ac \u09ac\u09a1 \u09aa\u09b0\u09a4\u09ab\u09b2\u09a4 \u09b9\u09ac: \u09b8\u0995\u09b7\u09aa\u09a4\u0995\u09b0\u09a3 \u09b8\u0995\u09b7\u09aa, \u0986\u09aa\u09a8 \u09b6\u09a7 \u098f\u0995\u09ac\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0\u09b0 \u09a7\u09b0\u09a8, \u09ac\u09a1 \u0987\u09a4\u09af\u09a6 \u09ab\u09b6\u09a8 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u09b9\u09b8\u09ac \u0998\u09b7\u09a3 \u0995\u09b0\u09a8 \u0986\u09aa\u09a8 \u09b8\u099f \u0986\u09a7\u09a8\u0995 \u09aa\u0987\u09a5\u09a8\u09b0 \u09b8\u09a5 \u0995\u09b0\u09a8 \u0986\u09aa\u09a8\u0995 \u09a8\u09a4\u09a8 \u0995\u09b0 \u09a8\u09b0\u09a6\u09b7\u099f \u0995\u09a8 \u09b2\u0987\u09ac\u09b0\u09b0\u09b0 \u09ac\u0995\u09af \u0997\u09a0\u09a8, \u09ab\u09b6\u09a8 \u09ac \u0995\u09b2\u09b8 \u0995\u099b\u0987 \u09b6\u0996\u09a4 \u09b9\u099a\u099b \u09a8 \u09b6\u09a7\u0987 \u0986\u09a7\u09a8\u0995 Python 3.6+ \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa, int \u098f\u09b0 \u099c\u09a8\u09af: item_id: int \u0985\u09a5\u09ac \u0986\u09b0\u0993 \u099c\u099f\u09b2 Item \u09ae\u09a1\u09b2\u09b0 \u099c\u09a8\u09af: item: Item ...\u098f\u09ac \u09b8\u0987 \u098f\u0995\u0987 \u0998\u09b7\u09a3\u09b0 \u09b8\u09a5 \u0986\u09aa\u09a8 \u09aa\u09ac\u09a8: \u098f\u09a1\u099f\u09b0 \u09b8\u09b9\u09af\u09af, \u09af\u09ae\u09a8 \u09b8\u09ae\u09aa\u09a4 \u09a7\u09b0\u09a3 \u09af\u099a\u0987 \u09a4\u09a5\u09af \u09af\u099a\u0987\u0995\u09b0\u09a3: \u09a1\u099f \u0985\u09ac\u09a7 \u09b9\u09b2 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u098f\u09ac \u09aa\u09b0\u09b7\u0995\u09b0 \u09a4\u09b0\u099f\u09b0 \u09a8\u09b0\u09a6\u09b6\u09a8 \u098f\u09ae\u09a8\u0995 \u0997\u09ad\u09b0\u09ad\u09ac \u09a8\u09b8\u099f \u0995\u09b0 JSON \u0985\u09ac\u099c\u0995\u099f\u09b0 \u099c\u09a8\u09af \u09ac\u09a7\u09a4 \u09aa\u09b0\u09b0\u09a4 \u09a4\u09a5\u09af \u09b0\u09aa\u09a8\u09a4\u09b0: \u09af \u09a8\u099f\u0993\u09df\u09b0\u0995 \u09a5\u0995 \u09aa\u0987\u09a5\u09a8\u09b0 \u09a4\u09a5\u09af \u098f\u09ac \u09a7\u09b0\u09a8 \u0986\u09b8, \u098f\u09ac \u09b8\u0996\u09a8 \u09a5\u0995 \u09aa\u09dc: JSON \u09aa\u09a5 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0995\u09df\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0995\u0995\u099c \u09b9\u09a1\u09b0 \u09ab\u09b0\u09ae \u09ab\u0987\u09b2 \u0986\u0989\u099f\u09aa\u099f \u09a1\u099f\u09b0 \u09b0\u09aa\u09a8\u09a4\u09b0: \u09aa\u0987\u09a5\u09a8 \u09a1\u099f \u098f\u09ac \u099f\u0987\u09aa \u09a5\u0995 \u09a8\u099f\u0993\u09af\u09b0\u0995 \u09a1\u099f\u09a4 \u09b0\u09aa\u09a8\u09a4\u09b0 \u0995\u09b0 (JSON \u09b9\u09b8\u09ac): -\u09aa\u0987\u09a5\u09a8 \u099f\u0987\u09aa \u09b0\u09aa\u09a8\u09a4\u09b0 \u0995\u09b0\u09a8 (str, int, float, bool, list, \u0987\u09a4\u09af\u09a6) datetime \u0985\u09ac\u099c\u0995\u099f UUID obje\u0985\u09ac\u099c\u0995\u099fcts \u09a1\u099f\u09ac\u09b8 \u09ae\u09a1\u09b2 ...\u098f\u09ac \u0986\u09b0 \u0985\u09a8\u0995 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5, 2\u099f \u09ac\u0995\u09b2\u09aa \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0987\u09a8\u099f\u09b0\u09ab\u09b8 \u09b8\u09b9: \u09b8\u09af\u0997\u09b0 \u0987\u0989 \u0986\u0987 (Swagger UI) \u09b0\u09a1\u0995 (ReDoc) \u09aa\u09b0\u09ac\u09ac\u09b0\u09a4 \u0995\u09a1 \u0989\u09a6\u09b9\u09b0\u09a3 \u09ab\u09b0 \u0986\u09b8 \u09af\u0995, FastAPI \u09af \u0995\u09b0\u09ac: GET \u098f\u09ac PUT \u0985\u09a8\u09b0\u09a7\u09b0 \u099c\u09a8\u09af \u09aa\u09a5 item_id \u0986\u099b \u0995\u09a8 \u09a4 \u09af\u099a\u0987 \u0995\u09b0\u09ac GET \u098f\u09ac PUT \u0985\u09a8\u09b0\u09a7\u09b0 \u099c\u09a8\u09af item_id \u099f\u0987\u09aa int \u098f\u09b0 \u09b9\u09a4 \u09b9\u09ac \u09a4 \u09af\u099a\u0987 \u0995\u09b0\u09ac \u09af\u09a6 \u09a8 \u09b9\u09af \u09a4\u09ac \u0995\u09b2\u09af\u09a8\u099f \u098f\u0995\u099f \u0989\u09aa\u09af\u0995\u09a4, \u09aa\u09b0\u09b7\u0995\u09b0 \u09a4\u09b0\u099f \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8 GET \u0985\u09a8\u09b0\u09a7\u09b0 \u099c\u09a8\u09af \u098f\u0995\u099f \u0990\u099a\u099b\u0995 \u0995\u09af\u09af\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u09a8\u09ae\u0995 q (\u09af\u09ae\u09a8 http://127.0.0.1:8000/items/foo?q=somequery) \u0986\u099b \u0995 \u09a4 \u099a\u0995 \u0995\u09b0\u09ac \u09af\u09b9\u09a4 q \u09aa\u09af\u09b0\u09ae\u099f\u09b0\u099f = None \u09a6\u09af \u0998\u09b7\u09a3 \u0995\u09b0 \u09b9\u09af\u099b, \u09a4\u0987 \u098f\u099f \u0990\u099a\u099b\u0995 None \u099b\u09a1 \u098f\u099f \u09aa\u09b0\u09af\u099c\u09a8\u09af \u09b9\u09a4 (\u09af\u09ae\u09a8 PUT \u098f\u09b0 \u0995\u09b7\u09a4\u09b0 \u09b9\u09df\u099b) /items/{item_id} \u098f\u09b0 \u099c\u09a8\u09af PUT \u0985\u09a8\u09b0\u09a7\u09b0 \u09ac\u09a1 JSON \u09b9\u09b8\u09ac \u09aa\u09a1\u09a8: \u09b2\u0995\u09b7 \u0995\u09b0\u09a8, name \u098f\u0995\u099f \u09aa\u09b0\u09af\u099c\u09a8\u09af \u0985\u09af\u099f\u09b0\u09ac\u0989\u099f \u09b9\u09b8\u09ac \u09ac\u09ac\u099a\u09a8 \u0995\u09b0\u099b \u098f\u09ac \u098f\u099f str \u09b9\u09a4 \u09b9\u09ac \u09b2\u0995\u09b7 \u0995\u09b0\u09a8 \u098f\u0996\u09a8, price \u0985\u09af\u099f\u09b0\u09ac\u0989\u099f\u099f \u0986\u09ac\u09b6\u09af\u0995 \u098f\u09ac \u098f\u099f float \u09b9\u09a4 \u09b9\u09ac \u09b2\u0995\u09b7 \u0995\u09b0\u09a8 is_offer \u098f\u0995\u099f \u0990\u099a\u099b\u0995 \u0985\u09af\u099f\u09b0\u09ac\u0989\u099f \u098f\u09ac \u098f\u099f bool \u09b9\u09a4 \u09b9\u09ac \u09af\u09a6 \u0989\u09aa\u09b8\u09a5\u09a4 \u09a5\u0995 \u098f\u0987 \u09b8\u09ac\u099f \u0997\u09ad\u09b0\u09ad\u09ac \u0985\u09ac\u09b8\u09a5\u09a8\u09b0\u09a4 JSON \u0985\u09ac\u099c\u0995\u099f\u0997\u09b2\u09a4\u0993 \u0995\u099c \u0995\u09b0\u09ac \u09b8\u09ac\u09af\u0995\u09b0\u09af\u09ad\u09ac JSON \u09b9\u09a4 \u098f\u09ac JSON \u09a5\u0995 \u0995\u09a8\u09ad\u09b0\u099f \u0995\u09b0\u09a8 OpenAPI \u09a6\u09af \u09b8\u09ac\u0995\u099b \u09a1\u0995\u09ae\u09a8\u099f \u0995\u09b0\u09a8, \u09af \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09af\u09a4 \u09aa\u09b0: \u0995\u09b0\u09df\u09b6\u09b2 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0985\u09a8\u0995 \u09ad\u09b7\u09b0 \u099c\u09a8\u09af \u09b8\u09ac\u09af\u0995\u09b0\u09af \u0995\u09b2\u09af\u09a8\u099f \u0995\u09a1 \u09a4\u09b0\u09b0 \u09ac\u09af\u09ac\u09b8\u09a5 \u09b8\u09b0\u09b8\u09b0 2\u099f \u0995\u09b0\u09df\u09b6\u09b2 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0993\u09af\u09ac \u09aa\u09b7\u09a0 \u09aa\u09b0\u09a6\u09a8 \u0995\u09b0 \u09b9\u09df\u099b \u0986\u09ae\u09b0 \u098f\u09a4\u0995\u09b7\u09a8 \u09b6\u09a7 \u098f\u09b0 \u09aa\u09b7\u09a0 \u09a4\u09b0 \u0995\u09b0\u099b, \u0995\u09a8\u09a4 \u0986\u09aa\u09a8 \u0987\u09a4\u09ae\u09a7\u09af\u0987 \u098f\u099f \u0995\u09ad\u09ac \u0995\u099c \u0995\u09b0 \u09a4\u09b0 \u09a7\u09b0\u09a3\u0993 \u09aa\u09df \u0997\u09df\u099b\u09a8 \u09a8\u09ae\u09a8\u0995\u09a4 \u09b2\u0987\u09a8 \u0997\u09b2 \u09aa\u09b0\u09ac\u09b0\u09a4\u09a8 \u0995\u09b0\u09b0 \u099a\u09b7\u099f \u0995\u09b0\u09a8: return {\"item_name\": item.name, \"item_id\": item_id} ...\u09aa\u09b0\u09ac: ... \"item_name\": item.name ... ...\u09aa\u09b0\u09ac\u09b0\u09a4\u09a4: ... \"item_price\": item.price ... ...\u098f\u09ac \u09a6\u0996\u09a8 \u0995\u09ad\u09ac \u0986\u09aa\u09a8\u09b0 \u098f\u09a1\u099f\u09b0 \u0989\u09aa\u09a6\u09a8\u0997\u09b2\u0995 \u09b8\u09df\u0995\u09b0\u09df\u09ad\u09ac-\u09b8\u09ae\u09aa\u09a8\u09a8 \u0995\u09b0\u09ac \u098f\u09ac \u09a4\u09a6\u09b0 \u09a7\u09b0\u09a8 \u099c\u09a8\u09a4 \u09aa\u09b0\u09ac: \u0986\u09b0\u0993 \u09ac\u09b6\u09b7\u099f\u09af \u09b8\u09ae\u09aa\u09a8\u09a8 \u0989\u09a6\u09b9\u09b0\u09a3\u09b0 \u099c\u09a8\u09af, \u09a6\u0996\u09a8 \u099f\u0989\u099f\u09b0\u09df\u09b2 - \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0997\u0987\u09a1. \u09b8\u09aa\u09df\u09b2\u09b0 \u09b8\u09a4\u09b0\u0995\u09a4: \u099f\u0989\u099f\u09b0\u09df\u09b2 - \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0997\u0987\u09a1 \u09a8\u09ae\u09a8\u0995\u09a4 \u09ac\u09b7\u09df\u0997\u09b2 \u0985\u09a8\u09a4\u09b0\u09ad\u0995\u09a4 \u0995\u09b0: \u09b9\u09a1\u09b0, \u0995\u0995\u099c, \u09ab\u09b0\u09ae \u09ab\u09b2\u09a1 \u098f\u09ac \u09ab\u0987\u09b2\u0997\u09b2 \u098f\u09ae\u09a8 \u0985\u09a8\u09af\u09a8\u09af \u099c\u09df\u0997 \u09a5\u0995 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0998\u09b7\u09a3 \u0995\u09b0 maximum_length \u09ac regex \u098f\u09b0 \u09ae\u09a4 \u09af\u099a\u0987\u0995\u09b0\u09a3 \u09ac\u09a7\u09ae\u0995\u09a4 \u09b8\u099f \u0995\u09b0 \u09b9\u09af \u0995\u09ad\u09ac, \u09a4 \u09a8\u09df \u0986\u09b2\u099a\u09a8 \u0995\u09b0 \u09b9\u09ac \u098f\u0995\u099f \u0996\u09ac \u09b6\u0995\u09a4\u09b6\u09b2 \u098f\u09ac \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09b8\u09b9\u099c \u09a1\u09aa\u09a8\u09a1\u09a8\u09b8 \u0987\u09a8\u099c\u0995\u09b6\u09a8 \u09aa\u09a6\u09a7\u09a4 OAuth2 \u098f\u09ac JWT \u099f\u0995\u09a8 \u098f\u09ac HTTP Basic auth \u09b8\u09b9 \u09a8\u09b0\u09aa\u09a4\u09a4 \u098f\u09ac \u0985\u09a8\u09ae\u09a6\u09a8\u09aa\u09b0\u09aa\u09a4 \u09b8\u09ae\u09aa\u09b0\u0995\u09a4 \u09ac\u09b7\u09df\u09b8\u09ae\u09b9\u09b0 \u0989\u09aa\u09b0 \u0997\u09ad\u09b0\u09ad\u09ac \u0985\u09ac\u09b8\u09a5\u09a8\u09b0\u09a4 JSON \u09ae\u09a1\u09b2 \u0998\u09b7\u09a3 \u0995\u09b0\u09b0 \u099c\u09a8\u09af \u0986\u09b0\u0993 \u0989\u09a8\u09a8\u09a4 (\u0995\u09a8\u09a4 \u09b8\u09ae\u09a8 \u09b8\u09b9\u099c) \u0995\u09b6\u09b2 (Pydantic \u0995 \u09a7\u09a8\u09af\u09ac\u09a6) \u0986\u09b0 \u0985\u09a4\u09b0\u0995\u09a4 \u09ac\u09b6\u09b7\u099f\u09af (\u09b8\u099f\u09b0\u09b2\u099f\u0995 \u09a7\u09a8\u09af\u09ac\u09a6) \u09b9\u09b8\u09ac: WebSockets GraphQL HTTPX \u098f\u09ac pytest \u09ad\u09a4\u09a4\u0995 \u0985\u09a4\u09af\u09a8\u09a4 \u09b8\u09b9\u099c \u09aa\u09b0\u0995\u09b7 CORS Cookie Sessions ...\u098f\u09ac \u0986\u09b0 \u0995\u09b0\u09ae\u0995\u09b7\u09ae\u09a4 \u09b8\u09ac\u09a7\u09a8 TechEmpower Benchmarks \u09a6\u0996\u09af \u09af FastAPI \u0985\u09af\u09aa\u09b2\u0995\u09b6\u09a8\u0997\u09b2 Uvicorn-\u098f\u09b0 \u0985\u09a7\u09a8 \u099a\u09b2\u09ae\u09a8 \u09a6\u09b0\u09a4\u09a4\u09ae\u09aa\u0987\u09a5\u09a8 \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995\u0997\u09b2\u09b0 \u09ae\u09a7\u09af \u098f\u0995\u099f, \u09b6\u09a7\u09ae\u09a4\u09b0 Starlette \u098f\u09ac Uvicorn-\u098f\u09b0 \u09aa\u09b0 (FastAPI \u09a6\u09ac\u09b0 \u0985\u09ad\u09af\u09a8\u09a4\u09b0\u09a3\u09ad\u09ac \u09ac\u09af\u09ac\u09b9\u09a4) (*) \u098f\u099f \u09b8\u09ae\u09aa\u09b0\u0995 \u0986\u09b0\u0993 \u09ac\u099d\u09a4, \u09a6\u0996\u09a8 Benchmarks. \u0990\u099a\u099b\u0995 \u09a8\u09b0\u09ad\u09b0\u09b6\u09b2\u09a4 Pydantic \u09a6\u09ac\u09b0 \u09ac\u09af\u09ac\u09b9\u09a4: email-validator - \u0987\u09ae\u09b2 \u09af\u099a\u0987\u0995\u09b0\u09a3\u09b0 \u099c\u09a8\u09af \u09b8\u099f\u09b0\u09b2\u099f \u09a6\u09ac\u09b0 \u09ac\u09af\u09ac\u09b9\u09a4: httpx - \u0986\u09aa\u09a8 \u09af\u09a6 TestClient \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u09a8 \u09a4\u09b9\u09b2 \u0986\u09ac\u09b6\u09af\u0995 jinja2 - \u0986\u09aa\u09a8 \u09af\u09a6 \u09aa\u09b0\u09a6\u09a4\u09a4 \u099f\u09ae\u09aa\u09b2\u099f \u09b0\u09aa\u09b0\u0996 \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u09a8 \u09a4\u09b9\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 python-multipart - \u0986\u09aa\u09a8 \u09af\u09a6 \u09ab\u09b0\u09ae \u09b8\u09b9\u09af\u09a4 \u0995\u09b0\u09a4 \u099a\u09a8 \u09a4\u09b9\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 \"parsing\", request.form() \u09b8\u09b9 itsdangerous - SessionMiddleware \u09b8\u09b9\u09af\u09a4\u09b0 \u099c\u09a8\u09af \u09aa\u09b0\u09af\u099c\u09a8 pyyaml - \u09b8\u099f\u09b0\u09b2\u099f\u09b0 SchemaGenerator \u09b8\u09aa\u09b0\u099f \u098f\u09b0 \u099c\u09a8\u09af \u09aa\u09b0\u09df\u099c\u09a8 (\u0986\u09aa\u09a8\u09b0 \u09b8\u09ae\u09ad\u09ac\u09a4 FastAPI \u09aa\u09b0\u09af\u099c\u09a8 \u09a8\u0987) graphene - GraphQLApp \u09b8\u09b9\u09af\u09a4\u09b0 \u099c\u09a8\u09af \u09aa\u09b0\u09df\u099c\u09a8 FastAPI / Starlette \u09a6\u09ac\u09b0 \u09ac\u09af\u09ac\u09b9\u09a4: uvicorn - \u09b8\u09b0\u09ad\u09b0\u09b0 \u099c\u09a8\u09af \u09af \u0986\u09aa\u09a8\u09b0 \u0985\u09af\u09aa\u09b2\u0995\u09b6\u09a8 \u09b2\u09a1 \u0995\u09b0 \u098f\u09ac \u09aa\u09b0\u09ac\u09b6\u09a8 \u0995\u09b0 orjson - \u0986\u09aa\u09a8 ORJSONResponse \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u0987\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 ujson - \u0986\u09aa\u09a8 UJSONResponse \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u0987\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 \u0986\u09aa\u09a8 \u098f\u0987 \u09b8\u09ac \u0987\u09a8\u09b8\u099f\u09b2 \u0995\u09b0\u09a4 \u09aa\u09b0\u09a8 pip install fastapi[all] \u09a6\u09df. \u09b2\u0987\u09b8\u09a8\u09b8 \u098f\u0987 \u09aa\u09b0\u099c\u0995\u099f MIT \u09b2\u0987\u09b8\u09a8\u09b8 \u09a8\u09a4\u09ae\u09b2\u09b0 \u0985\u09a7\u09a8 \u09b6\u09b0\u09a4\u09df\u09a4 \u0989\u09aa\u09b0 \u09ab\u09b0 \u09af\u0993",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "uvicorn main:app --reload",
        "uvicorn main:app",
        "app = FastAPI()",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "email-validator",
        "python-multipart",
        "request.form()",
        "itsdangerous",
        "SessionMiddleware",
        "ORJSONResponse",
        "UJSONResponse",
        "pip install fastapi[all]"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI \u09b8\u099a \u09a4\u09b2\u0995 \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u09ae\u09a4\u09ae\u09a4 \u09b8\u09ae\u09b9 Typer, CLI \u098f\u09b0 \u099c\u09a8\u09af FastAPI \u09aa\u09b0\u09af\u099c\u09a8\u09af\u09a4 \u0997\u09b2 \u0987\u09a8\u09b8\u099f\u09b2\u09b6\u09a8 \u09aa\u09b0\u0995\u09b0\u09df \u0989\u09a6\u09b9\u09b0\u09a3 \u09a4\u09b0 \u098f\u099f \u099a\u09b2\u09a8 \u098f\u099f \u099a\u0995 \u0995\u09b0\u09a8 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa \u0986\u09aa\u0997\u09b0\u09a1 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a8\u09a8\u09a4\u0995\u09b0\u09a3 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0986\u09aa\u0997\u09b0\u09a1 \u09b8\u0995\u09b7\u09aa\u09a4\u0995\u09b0\u09a3 \u0995\u09b0\u09ae\u0995\u09b7\u09ae\u09a4 \u0990\u099a\u099b\u0995 \u09a8\u09b0\u09ad\u09b0\u09b6\u09b2\u09a4 \u09b2\u0987\u09b8\u09a8\u09b8 Features \u09b6\u0996\u09a8 \u09b6\u0996\u09a8 \u09aa\u0987\u09a5\u09a8 \u098f\u09b0 \u099f\u0987\u09aa\u09b8 \u09aa\u09b0\u099a\u09a4 Concurrency and async / await \u098f\u09a8\u09ad\u09af\u09b0\u09a8\u09ae\u09a8\u099f \u09ad\u09b0\u09af\u09ac\u09b2\u09b8 Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes \u09b8\u099a \u09a4\u09b2\u0995 \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u09ae\u09a4\u09ae\u09a4 \u09b8\u09ae\u09b9 Typer, CLI \u098f\u09b0 \u099c\u09a8\u09af FastAPI \u09aa\u09b0\u09af\u099c\u09a8\u09af\u09a4 \u0997\u09b2 \u0987\u09a8\u09b8\u099f\u09b2\u09b6\u09a8 \u09aa\u09b0\u0995\u09b0\u09df \u0989\u09a6\u09b9\u09b0\u09a3 \u09a4\u09b0 \u098f\u099f \u099a\u09b2\u09a8 \u098f\u099f \u099a\u0995 \u0995\u09b0\u09a8 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa \u0986\u09aa\u0997\u09b0\u09a1 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a8\u09a8\u09a4\u0995\u09b0\u09a3 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0986\u09aa\u0997\u09b0\u09a1 \u09b8\u0995\u09b7\u09aa\u09a4\u0995\u09b0\u09a3 \u0995\u09b0\u09ae\u0995\u09b7\u09ae\u09a4 \u0990\u099a\u099b\u0995 \u09a8\u09b0\u09ad\u09b0\u09b6\u09b2\u09a4 \u09b2\u0987\u09b8\u09a8\u09b8 FastAPI FastAPI \u0989\u099a\u099a\u0995\u09b7\u09ae\u09a4 \u09b8\u09ae\u09aa\u09a8\u09a8, \u09b8\u09b9\u099c \u09b6\u0996\u09b0 \u098f\u09ac \u09a6\u09b0\u09a4 \u0995\u09a1 \u0995\u09b0 \u09aa\u09b0\u09a1\u0995\u09b6\u09a8\u09b0 \u099c\u09a8\u09af \u09ab\u09b0\u09ae\u0993\u09df\u09b0\u0995 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5: https://fastapi",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com \u09b8\u09b0\u09b8 \u0995\u09a1: https://github com/fastapi/fastapi FastAPI \u098f\u0995\u099f \u0986\u09a7\u09a8\u0995, \u09a6\u09b0\u09a4 ( \u09ac\u09b6 \u0995\u09b7\u09ae\u09a4 ) \u09b8\u09ae\u09aa\u09a8\u09a8, Python 3",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "6+ \u09a6\u09df API \u09a4\u09b0\u09b0 \u099c\u09a8\u09af \u09b8\u099f\u09af\u09a8\u09a1\u09b0\u09a1 \u09aa\u0987\u09a5\u09a8 \u099f\u0987\u09aa \u0987\u0999\u0997\u09a4 \u09ad\u09a4\u09a4\u0995 \u0993\u09af\u09ac \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995 \u098f\u09b0 \u09ae\u09b2 \u09ac\u09b6\u09b7\u099f\u09af \u0997\u09b2 \u09b9\u09b2 \u0997\u09a4: \u098f\u099f NodeJS \u098f\u09ac Go \u098f\u09b0 \u09ae\u09a4 \u0995\u09b0\u09af\u0995\u09b7\u09ae\u09a4 \u09b8\u09ae\u09aa\u09a8\u09a8 (Starlette \u098f\u09ac Pydantic \u098f\u09b0 \u09b8\u09b9\u09af\u09af) \u09aa\u0987\u09a5\u09a8 \u098f\u09b0 \u09a6\u09b0\u09a4\u09a4\u09ae \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995 \u0997\u09b2\u09b0 \u09ae\u09a7\u09af \u098f\u099f \u098f\u0995\u099f \u09a6\u09b0\u09a4 \u0995\u09a1 \u0995\u09b0:\u09ac\u09b6\u09b7\u099f\u09af \u09a4\u09b0\u09b0 \u0997\u09a4 \u09e8\u09e6\u09e6 \u09a5\u0995 \u09e9\u09e6\u09e6 \u09ac\u09a6\u09a7 \u0995\u09b0\u09f7 * \u09b8\u09ac\u09b2\u09aa bugs: \u09ae\u09a8\u09ac (\u09a1\u09ad\u09b2\u09aa\u09b0) \u09b8\u09b7\u099f \u09a4\u09b0\u099f\u09b0 \u09aa\u09b0\u09af \u09ea\u09e6 \u09b9\u09b0\u09b8 \u0995\u09b0 * \u09b8\u09ac\u099c\u099e\u09a4: \u09a6\u09b0\u09a6\u09a8\u09a4 \u098f\u09a1\u099f\u09b0 \u09b8\u09b9\u09af\u09af Completion \u09a8\u09ae\u0993 \u09aa\u09b0\u099a\u09a4 \u09a6\u09b0\u09a4 \u09a1\u09ac\u0997 \u0995\u09b0 \u09af\u09df \u09b8\u09b9\u099c: \u098f\u099f \u098f\u09ae\u09a8 \u09ad\u09ac \u09b8\u099c\u09a8 \u09b9\u09df\u099b \u09af\u09a8 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09aa\u09dc \u09b8\u09b9\u099c \u09b6\u0996 \u098f\u09ac \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09af\u09df \u09b8\u0995\u09b7\u09aa\u09a4: \u0995\u09a1 \u09aa\u09a8\u09b0\u09ac\u09a4\u09a4 \u0995\u09ae\u09a8\u09b0 \u09aa\u09b6\u09aa\u09b6, bug \u0995\u09ae\u09df \u098f\u09ac \u09aa\u09b0\u09a4\u099f \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0998\u09b7\u09a3 \u09a5\u0995 \u098f\u0995\u09a7\u0995 \u09ab\u099a\u09b0 \u09aa\u0993\u09df \u09af\u09df  \u099c\u09b0\u09b2: \u09b8\u09ac\u09af\u0995\u09b0\u09af \u09ad\u09ac \u09a4\u09b0 \u0995\u09b0\u09df\u09b6\u09b2 \u09a8\u09b0\u09a6\u09b6\u09a8 \u09a8\u09a5 (documentation) \u09b8\u09b9 \u0989\u09ce\u09aa\u09a6\u09a8 \u0989\u09aa\u09af\u0997 (Production-ready) \u0995\u09a1 \u09aa\u0993\u09df \u09af\u09df \u09ae\u09a8-\u09ad\u09a4\u09a4\u0995: \u098f\u09b0 \u09ad\u09a4\u09a4 OpenAPI (\u09af \u09aa\u09b0\u09ac Swagger \u09a8\u09ae \u09aa\u09b0\u099a\u09a4 \u099b\u09b2) \u098f\u09ac JSON Schema \u098f\u09b0 \u0986\u09a6\u09b0\u09b6\u09b0 \u09ae\u09a8\u09b0 \u0993\u09aa\u09b0 * \u0989\u09ce\u09aa\u09a6\u09a8\u09ae\u0996 \u098f\u09aa\u09b2\u0995\u09b6\u09a8 \u09ac\u09a8\u09a8\u09b0 \u098f\u0995 \u09a6\u09b2 \u09a1\u09ad\u09b2\u09aa\u09b0 \u098f\u09b0 \u09ae\u09a4\u09ae\u09a4 \u09ad\u09a4\u09a4\u0995 \u09ab\u09b2\u09ab\u09b2 \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u0985\u09a8\u09af\u09a8\u09af \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u09ae\u09a4\u09ae\u09a4 \u09b8\u09ae\u09b9 \"\u0986\u09ae \u0986\u099c\u0995\u09b2 FastAPI \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u099b [",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "] \u0986\u09ae\u09b0 \u09ad\u09ac\u099b \u09ae\u0987\u0995\u09b0\u09b8\u09ab\u099f ML \u09b8\u09b0\u09ad\u09b8 \u098f \u09b8\u0995\u09b2 \u09a6\u09b2\u09b0 \u099c\u09a8\u09af \u098f\u099f \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09ac \u09af\u09b0 \u09ae\u09a7\u09af \u0995\u099b \u09aa\u09a3\u09af Windows \u098f \u09b8\u09af\u09af\u09a8 \u09b9\u09df \u098f\u09ac \u0995\u099b Office \u098f\u09b0 \u09b8\u09a5 \u09b8\u09af\u09af\u09a8 \u09b9\u099a\u099b\" \u0995\u09ac\u09b0 \u0996\u09a8 - \u09ae\u0987\u0995\u09b0\u09b8\u09ab\u099f (ref) \"\u0986\u09ae\u09b0 FastAPI \u09b2\u0987\u09ac\u09b0\u09b0 \u0997\u09b0\u09b9\u09a3 \u0995\u09b0\u099b \u098f\u0995\u099f REST \u09b8\u09b0\u09ad\u09b0 \u09a4\u09b0 \u0995\u09b0\u09a4, \u09af \u09ad\u09ac\u09b7\u09af\u09a6\u09ac\u09a3 \u09aa\u0993\u09af\u09b0 \u099c\u09a8\u09af \u0995\u09df\u09b0 \u0995\u09b0 \u09af\u09a4 \u09aa\u09b0 [\u09b2\u09a1\u0989\u0987\u0997\u09b0 \u099c\u09a8\u09af]\" \u09aa\u09af\u09b0 \u09ae\u09b2\u09a8, \u0987\u09af\u09b0\u09b8\u09b2\u09ad \u09a6\u09a6\u09a8, \u098f\u09ac \u09b8\u0987 \u09b8\u09ae\u09a8\u09a5 \u09ae\u09b0\u09af\u09b2 - \u0989\u09ac\u09b0 (ref) \"Netflix \u0986\u09ae\u09a6\u09b0 \u0995\u09b0\u0987\u09b8\u09b8 \u09ae\u09af\u09a8\u099c\u09ae\u09a8\u099f \u0985\u09b0\u0995\u09b8\u099f\u09b0\u09b6\u09a8 \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995: \u09a1\u09b8\u09aa\u09af\u099a \u098f\u09b0 \u0993\u09aa\u09a8 \u09b8\u09b0\u09b8 \u09b0\u09b2\u099c \u0998\u09b7\u09a3 \u0995\u09b0\u09a4 \u09aa\u09b0 \u0986\u09a8\u09a8\u09a6\u09a4 [\u09af\u0995\u09a8 FastAPI \u09a6\u09af \u09a8\u09b0\u09ae\u09a4]\" \u0995\u09ad\u09a8 \u0997\u09b2\u09b8\u09a8, \u09ae\u09b0\u0995 \u09ad\u09b2\u09a8\u09ad, \u09ab\u09b0\u09b8\u099f \u09ae\u09a8\u09b8\u09a8 - \u09a8\u099f\u09ab\u09b2\u0995\u09b8 (ref) \"\u0986\u09ae FastAPI \u09a8\u09af \u099a\u09a6\u09b0 \u09b8\u09ae\u09a8 \u0989\u09ce\u09b8\u09b9\u09a4 \u098f\u099f \u0996\u09ac\u0987 \u09ae\u099c\u09b0",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "\" \u09ac\u09b0\u09af\u09a8 \u0993\u0995\u09a8 - \u09aa\u0987\u09a5\u09a8 \u09ac\u0987\u099f\u09b8 \u09aa\u09a1\u0995\u09b8\u099f \u09b9\u09b8\u099f (ref) \"_\u09b8\u09a4\u09af\u0987, \u0986\u09aa\u09a8 \u09af \u09a4\u09b0 \u0995\u09b0\u099b\u09a8 \u09a4 \u0996\u09ac \u09ae\u099c\u09ac\u09a4 \u098f\u09ac \u09aa\u09b0\u09aa\u09b0\u09a8\u09f7 \u0985\u09a8\u0995 \u0989\u09aa\u09af, \u0986\u09ae \u09af Hug \u098f \u0995\u09b0\u09a4 \u099a\u09df\u099b\u09b2\u09ae - \u09a4 \u0995\u0989\u0995 \u09a4\u09b0 \u0995\u09b0\u09a4 \u09a6\u0996 \u0986\u09ae \u09b8\u09a4\u09af\u0987 \u0985\u09a8\u09aa\u09b0\u09a8\u09a4\u09f7_\" \u099f\u09ae\u09a5 \u0995\u09b0\u09b8\u09b2 - Hug \u09b8\u09b0\u09b7\u099f (ref) \"\u0986\u09aa\u09a8 \u09af\u09a6 REST API \u09a4\u09b0\u09b0 \u099c\u09a8\u09af \u098f\u0995\u099f \u0986\u09a7\u09a8\u0995 \u09ab\u09b0\u09ae\u0993\u09df\u09b0\u0995 \u09b6\u0996\u09a4 \u099a\u09a8, \u09a4\u09b9\u09b2 FastAPI \u09a6\u0996\u09a8 [ ] \u098f\u099f \u09a6\u09b0\u09a4, \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09b8\u09b9\u099c \u098f\u09ac \u09b6\u0996\u09a4\u0993 \u09b8\u09b9\u099c [ ]_\" \"\u0986\u09ae\u09b0 \u0986\u09ae\u09a6\u09b0 APIs [ ] \u098f\u09b0 \u099c\u09a8\u09af FastAPI- \u09a4 \u098f\u09b8\u099b [ ] \u0986\u09ae \u09ae\u09a8 \u0995\u09b0 \u0986\u09aa\u09a8\u0993 \u098f\u099f \u09aa\u099b\u09a8\u09a6 \u0995\u09b0\u09ac\u09a8 [",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "]\" \u0987\u09a8\u09b8 \u09ae\u09a8\u099f\u09a8 - \u09ae\u09af\u09a5\u0989 \u09b9\u09a8\u09ac\u09b2 - Explosion AI \u09aa\u09b0\u09a4\u09b7\u09a0\u09a4 - spaCy \u09b8\u09b0\u09b7\u099f (ref) - (ref) Typer, CLI \u098f\u09b0 \u099c\u09a8\u09af FastAPI \u0986\u09aa\u09a8 \u09af\u09a6 CLI \u0985\u09af\u09aa \u09ac\u09a8\u09a4 \u099a\u09a8, \u09af \u0995\u09a8 \u0993\u09df\u09ac API \u098f\u09b0 \u09aa\u09b0\u09ac\u09b0\u09a4 \u099f\u09b0\u09ae\u09a8\u09b2 \u09ac\u09af\u09ac\u09b9\u09b0 \u09b9\u09ac, \u09a4\u09b9\u09b2 \u09a6\u0996\u09a8Typer \u099f\u0987\u09aa\u09b0 \u09b9\u09b2 FastAPI \u098f\u09b0 \u099b\u099f \u09ad\u0987\u09df\u09b0 \u09ae\u09a4 \u098f\u09ac \u098f\u099f\u09b0 \u0989\u09a6\u09a6\u09b6\u09af \u099b\u09b2 CLIs \u098f\u09b0 FastAPI \u09b9\u0993\u09df   \u09aa\u09b0\u09af\u099c\u09a8\u09af\u09a4 \u0997\u09b2 Python 3 7+ FastAPI \u0995\u099b \u09a6\u09a8\u09ac\u09a6\u09b0 \u0995\u09a7 \u09a6\u09a1\u09af \u0986\u099b: Starlette \u0993\u09af\u09ac \u0985\u09b6\u09b0 \u099c\u09a8\u09af Pydantic \u09a1\u099f \u0985\u09b6\u0997\u09b2\u09b0 \u099c\u09a8\u09af \u0987\u09a8\u09b8\u099f\u09b2\u09b6\u09a8 \u09aa\u09b0\u0995\u09b0\u09df  pip install fastapi --- 100 \u0986\u09aa\u09a8\u09b0 \u098f\u0995\u099f ASGI \u09b8\u09b0\u09ad\u09b0\u09b0\u0993 \u09aa\u09b0\u09af\u099c\u09a8 \u09b9\u09ac, \u09aa\u09b0\u09a1\u0995\u09b6\u09a8\u09b0 \u099c\u09a8\u09af Uvicorn \u0985\u09a5\u09ac Hypercorn pip install \"uvicorn[standard]\" --- 100 \u0989\u09a6\u09b9\u09b0\u09a3 \u09a4\u09b0 main",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "py \u09a8\u09ae \u098f\u0995\u099f \u09ab\u0987\u09b2 \u09a4\u09b0 \u0995\u09b0\u09a8: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} \u0985\u09a5\u09ac \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a8 async def \u09af\u09a6 \u0986\u09aa\u09a8\u09b0 \u0995\u09a1 async / await, \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09a4\u09b9\u09b2 async def \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a8: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} \u099f\u0995: \u0986\u09aa\u09a8 \u09af\u09a6 \u09a8 \u099c\u09a8\u09a8, \"\u09a4\u09a1\u09b9\u09a1 \" \u09ac\u09ad\u0997\u099f \u09a6\u0996\u09a8 async \u098f\u09ac await \u09a8\u09a5\u09b0 \u09ae\u09a7\u09af \u09a6\u0996\u09a8 \u098f\u099f \u099a\u09b2\u09a8 \u09b8\u09b0\u09ad\u09b0 \u099a\u09b2 \u0995\u09b0\u09a8:  uvicorn main:app --reload INFO: Uvicorn running on http://127 0 0 1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup INFO: Application startup complete \u09a8\u09b0\u09a6\u09b6\u09a8 \u09b8\u09ae\u09aa\u09b0\u0995 uvicorn main:app --reload",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "uvicorn main:app \u09a8\u09b0\u09a6\u09b6\u09a8\u099f \u09a6\u09ac\u09b0 \u09ac\u099d\u09af: main: \u09ab\u0987\u09b2 main py (\u09aa\u0987\u09a5\u09a8 \"\u09ae\u09a1\u0989\u09b2\") app: app = FastAPI() \u09b2\u0987\u09a8 \u09a6\u09af main py \u098f\u09b0 \u09ad\u09a4\u09b0 \u09a4\u09b0 \u0995\u09b0 \u0985\u09ac\u099c\u0995\u099f --reload: \u0995\u09a1 \u09aa\u09b0\u09ac\u09b0\u09a4\u09a8\u09b0 \u09aa\u09b0 \u09b8\u09b0\u09ad\u09b0 \u09aa\u09a8\u09b0\u09af \u099a\u09b2 \u0995\u09b0\u09a8 \u098f\u099f \u09b6\u09a7\u09ae\u09a4\u09b0 \u09a1\u09ad\u09b2\u09aa\u09ae\u09a8\u099f \u098f\u09b0 \u09b8\u09ae\u09df \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a8 \u098f\u099f \u099a\u0995 \u0995\u09b0\u09a8 \u0986\u09aa\u09a8\u09b0 \u09ac\u09b0\u0989\u099c\u09b0 \u0996\u09b2\u09a8 http://127 0 0 1:8000/items/5",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "q=somequery \u098f \u0986\u09aa\u09a8 JSON \u09b0\u09b8\u09aa\u09a8\u09b8 \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8: {\"item_id\": 5, \"q\": \"somequery\"} \u0986\u09aa\u09a8 \u0987\u09a4\u09ae\u09a7\u09af \u098f\u0995\u099f API \u09a4\u09b0 \u0995\u09b0\u099b\u09a8 \u09af: / \u098f\u09ac /items/{item_id} paths \u098f HTTP \u0985\u09a8\u09b0\u09a7 \u0997\u09b0\u09b9\u09a3 \u0995\u09b0 \u0989\u09ad\u09af path\u0987 GET \u0985\u09aa\u09b0\u09b6\u09a8 \u09a8\u09af ( \u09af HTTP methods \u09a8\u09ae\u0993 \u09aa\u09b0\u099a\u09a4) path /items/{item_id}-\u098f \u098f\u0995\u099f path \u09aa\u09af\u09b0\u09ae\u099f\u09b0 item_id \u0986\u099b \u09af \u0995\u09a8 int \u09b9\u09a4 \u09b9\u09ac path /items/{item_id}-\u098f\u09b0 \u098f\u0995\u099f \u0990\u099a\u099b\u0995 str query \u09aa\u09af\u09b0\u09ae\u099f\u09b0 q \u0986\u099b \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u098f\u0996\u09a8 \u09af\u09a8 http://127 0 0 1:8000/docs \u0986\u09aa\u09a8 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u09ad\u09ac \u09aa\u09b0\u09b8\u09a4\u09a4 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8 (Swagger UI \u09aa\u09b0\u09a6\u09a4\u09a4): \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u098f\u09ac \u098f\u0996\u09a8 http://127 0 0 1:8000/redoc \u098f \u09af\u09a8",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "\u0986\u09aa\u09a8 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u09ad\u09ac \u09aa\u09b0\u09b8\u09a4\u09a4 \u09ac\u0995\u09b2\u09aa \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8 (ReDoc \u09aa\u09b0\u09a6\u09a4\u09a4): \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa \u0986\u09aa\u0997\u09b0\u09a1 \u098f\u0996\u09a8 main py \u09ab\u0987\u09b2\u099f \u09aa\u09b0\u09ac\u09b0\u09a4\u09a8 \u0995\u09b0\u09a8 \u09af\u09a8 \u098f\u099f PUT \u09b0\u0995\u09df\u09b8\u099f \u09a5\u0995 \u09ac\u09a1 \u09aa\u09a4 \u09aa\u09b0 Python \u09b8\u099f\u09af\u09a8\u09a1\u09b0\u09a1 \u09b2\u0987\u09ac\u09b0\u09b0, Pydantic \u098f\u09b0 \u09b8\u09b9\u09af\u09af \u09ac\u09a1 \u0998\u09b7\u09a3 \u0995\u09b0\u09a8 from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item name, \"item_id\": item_id} \u09b8\u09b0\u09ad\u09b0\u099f \u09b8\u09ac\u09af\u0995\u09b0\u09af\u09ad\u09ac \u09aa\u09a8\u09b0\u09af \u09b2\u09a1 \u09b9\u0993\u09af \u0989\u099a\u09a4 (\u0995\u09b0\u09a3 \u0986\u09aa\u09a8 \u0989\u09aa\u09b0\u09b0 uvicorn \u0995\u09ae\u09a8\u09a1 --reload \u09af\u0997 \u0995\u09b0\u099b\u09a8) \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a8\u09a8\u09a4\u0995\u09b0\u09a3 \u098f\u0996\u09a8 http://127 0 0 1:8000/docs \u098f\u09a1\u09a1\u09b0\u09b8 \u09af\u09a8",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "\u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5\u099f \u09b8\u09ac\u09af\u0995\u09b0\u09af\u09ad\u09ac \u0989\u09a8\u09a8\u09a4 \u09b9\u09af \u09af\u09ac, \u09a8\u09a4\u09a8 \u09ac\u09a1 \u09b8\u09b9: \"Try it out\" \u09ac\u099f\u09a8 \u099a\u09aa\u09a8, \u098f\u099f \u0986\u09aa\u09a8\u0995 \u09aa\u09b0\u09ae\u099f\u09b0\u0997\u09b2 \u09aa\u09b0\u09a3 \u0995\u09b0\u09a4 \u098f\u09ac API \u098f\u09b0 \u09b8\u09a5 \u09b8\u09b0\u09b8\u09b0 \u0995\u09b0\u09df-\u0995\u09b2\u09aa \u0995\u09b0\u09a4 \u09a6\u09ac: \u09a4\u09b0\u09aa\u09b0 \"Execute\" \u09ac\u099f\u09a8 \u099a\u09aa\u09a8, \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0987\u09a8\u099f\u09b0\u09ab\u09b8 \u0986\u09aa\u09a8\u09b0 API \u098f\u09b0 \u09b8\u09a5 \u09af\u0997\u09af\u0997 \u0995\u09b0\u09ac, \u09aa\u09b0\u09ae\u099f\u09b0 \u09aa\u09a0\u09ac, \u09ab\u09b2\u09ab\u09b2\u0997\u09b2 \u09aa\u09ac \u098f\u09ac \u09b8\u0997\u09b2 \u09aa\u09b0\u09b0\u09a6\u09df \u09a6\u0996\u09ac: \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0986\u09aa\u0997\u09b0\u09a1 \u098f\u09ac \u098f\u0996\u09a8 http://127 0 0",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "1:8000/redoc \u098f \u09af\u09a8 \u09ac\u0995\u09b2\u09aa \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5\u09a4\u0993 \u09a8\u09a4\u09a8 \u0995\u09df\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u098f\u09ac \u09ac\u09a1 \u09aa\u09b0\u09a4\u09ab\u09b2\u09a4 \u09b9\u09ac: \u09b8\u0995\u09b7\u09aa\u09a4\u0995\u09b0\u09a3 \u09b8\u0995\u09b7\u09aa, \u0986\u09aa\u09a8 \u09b6\u09a7 \u098f\u0995\u09ac\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0\u09b0 \u09a7\u09b0\u09a8, \u09ac\u09a1 \u0987\u09a4\u09af\u09a6 \u09ab\u09b6\u09a8 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u09b9\u09b8\u09ac \u0998\u09b7\u09a3 \u0995\u09b0\u09a8 \u0986\u09aa\u09a8 \u09b8\u099f \u0986\u09a7\u09a8\u0995 \u09aa\u0987\u09a5\u09a8\u09b0 \u09b8\u09a5 \u0995\u09b0\u09a8 \u0986\u09aa\u09a8\u0995 \u09a8\u09a4\u09a8 \u0995\u09b0 \u09a8\u09b0\u09a6\u09b7\u099f \u0995\u09a8 \u09b2\u0987\u09ac\u09b0\u09b0\u09b0 \u09ac\u0995\u09af \u0997\u09a0\u09a8, \u09ab\u09b6\u09a8 \u09ac \u0995\u09b2\u09b8 \u0995\u099b\u0987 \u09b6\u0996\u09a4 \u09b9\u099a\u099b \u09a8 \u09b6\u09a7\u0987 \u0986\u09a7\u09a8\u0995 Python 3 6+ \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa, int \u098f\u09b0 \u099c\u09a8\u09af: item_id: int \u0985\u09a5\u09ac \u0986\u09b0\u0993 \u099c\u099f\u09b2 Item \u09ae\u09a1\u09b2\u09b0 \u099c\u09a8\u09af: item: Item",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "\u098f\u09ac \u09b8\u0987 \u098f\u0995\u0987 \u0998\u09b7\u09a3\u09b0 \u09b8\u09a5 \u0986\u09aa\u09a8 \u09aa\u09ac\u09a8: \u098f\u09a1\u099f\u09b0 \u09b8\u09b9\u09af\u09af, \u09af\u09ae\u09a8 \u09b8\u09ae\u09aa\u09a4 \u09a7\u09b0\u09a3 \u09af\u099a\u0987 \u09a4\u09a5\u09af \u09af\u099a\u0987\u0995\u09b0\u09a3: \u09a1\u099f \u0985\u09ac\u09a7 \u09b9\u09b2 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u098f\u09ac \u09aa\u09b0\u09b7\u0995\u09b0 \u09a4\u09b0\u099f\u09b0 \u09a8\u09b0\u09a6\u09b6\u09a8 \u098f\u09ae\u09a8\u0995 \u0997\u09ad\u09b0\u09ad\u09ac \u09a8\u09b8\u099f \u0995\u09b0 JSON \u0985\u09ac\u099c\u0995\u099f\u09b0 \u099c\u09a8\u09af \u09ac\u09a7\u09a4 \u09aa\u09b0\u09b0\u09a4 \u09a4\u09a5\u09af \u09b0\u09aa\u09a8\u09a4\u09b0: \u09af \u09a8\u099f\u0993\u09df\u09b0\u0995 \u09a5\u0995 \u09aa\u0987\u09a5\u09a8\u09b0 \u09a4\u09a5\u09af \u098f\u09ac \u09a7\u09b0\u09a8 \u0986\u09b8, \u098f\u09ac \u09b8\u0996\u09a8 \u09a5\u0995 \u09aa\u09dc: JSON \u09aa\u09a5 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0995\u09df\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0995\u0995\u099c \u09b9\u09a1\u09b0 \u09ab\u09b0\u09ae \u09ab\u0987\u09b2 \u0986\u0989\u099f\u09aa\u099f \u09a1\u099f\u09b0 \u09b0\u09aa\u09a8\u09a4\u09b0: \u09aa\u0987\u09a5\u09a8 \u09a1\u099f \u098f\u09ac \u099f\u0987\u09aa \u09a5\u0995 \u09a8\u099f\u0993\u09af\u09b0\u0995 \u09a1\u099f\u09a4 \u09b0\u09aa\u09a8\u09a4\u09b0 \u0995\u09b0 (JSON \u09b9\u09b8\u09ac): -\u09aa\u0987\u09a5\u09a8 \u099f\u0987\u09aa \u09b0\u09aa\u09a8\u09a4\u09b0 \u0995\u09b0\u09a8 (str, int, float, bool, list, \u0987\u09a4\u09af\u09a6) datetime \u0985\u09ac\u099c\u0995\u099f UUID obje\u0985\u09ac\u099c\u0995\u099fcts \u09a1\u099f\u09ac\u09b8 \u09ae\u09a1\u09b2",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "\u098f\u09ac \u0986\u09b0 \u0985\u09a8\u0995 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5, 2\u099f \u09ac\u0995\u09b2\u09aa \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0987\u09a8\u099f\u09b0\u09ab\u09b8 \u09b8\u09b9: \u09b8\u09af\u0997\u09b0 \u0987\u0989 \u0986\u0987 (Swagger UI) \u09b0\u09a1\u0995 (ReDoc) \u09aa\u09b0\u09ac\u09ac\u09b0\u09a4 \u0995\u09a1 \u0989\u09a6\u09b9\u09b0\u09a3 \u09ab\u09b0 \u0986\u09b8 \u09af\u0995, FastAPI \u09af \u0995\u09b0\u09ac: GET \u098f\u09ac PUT \u0985\u09a8\u09b0\u09a7\u09b0 \u099c\u09a8\u09af \u09aa\u09a5 item_id \u0986\u099b \u0995\u09a8 \u09a4 \u09af\u099a\u0987 \u0995\u09b0\u09ac GET \u098f\u09ac PUT \u0985\u09a8\u09b0\u09a7\u09b0 \u099c\u09a8\u09af item_id \u099f\u0987\u09aa int \u098f\u09b0 \u09b9\u09a4 \u09b9\u09ac \u09a4 \u09af\u099a\u0987 \u0995\u09b0\u09ac \u09af\u09a6 \u09a8 \u09b9\u09af \u09a4\u09ac \u0995\u09b2\u09af\u09a8\u099f \u098f\u0995\u099f \u0989\u09aa\u09af\u0995\u09a4, \u09aa\u09b0\u09b7\u0995\u09b0 \u09a4\u09b0\u099f \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8 GET \u0985\u09a8\u09b0\u09a7\u09b0 \u099c\u09a8\u09af \u098f\u0995\u099f \u0990\u099a\u099b\u0995 \u0995\u09af\u09af\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u09a8\u09ae\u0995 q (\u09af\u09ae\u09a8 http://127 0 0 1:8000/items/foo",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "q=somequery) \u0986\u099b \u0995 \u09a4 \u099a\u0995 \u0995\u09b0\u09ac \u09af\u09b9\u09a4 q \u09aa\u09af\u09b0\u09ae\u099f\u09b0\u099f = None \u09a6\u09af \u0998\u09b7\u09a3 \u0995\u09b0 \u09b9\u09af\u099b, \u09a4\u0987 \u098f\u099f \u0990\u099a\u099b\u0995 None \u099b\u09a1 \u098f\u099f \u09aa\u09b0\u09af\u099c\u09a8\u09af \u09b9\u09a4 (\u09af\u09ae\u09a8 PUT \u098f\u09b0 \u0995\u09b7\u09a4\u09b0 \u09b9\u09df\u099b) /items/{item_id} \u098f\u09b0 \u099c\u09a8\u09af PUT \u0985\u09a8\u09b0\u09a7\u09b0 \u09ac\u09a1 JSON \u09b9\u09b8\u09ac \u09aa\u09a1\u09a8: \u09b2\u0995\u09b7 \u0995\u09b0\u09a8, name \u098f\u0995\u099f \u09aa\u09b0\u09af\u099c\u09a8\u09af \u0985\u09af\u099f\u09b0\u09ac\u0989\u099f \u09b9\u09b8\u09ac \u09ac\u09ac\u099a\u09a8 \u0995\u09b0\u099b \u098f\u09ac \u098f\u099f str \u09b9\u09a4 \u09b9\u09ac \u09b2\u0995\u09b7 \u0995\u09b0\u09a8 \u098f\u0996\u09a8, price \u0985\u09af\u099f\u09b0\u09ac\u0989\u099f\u099f \u0986\u09ac\u09b6\u09af\u0995 \u098f\u09ac \u098f\u099f float \u09b9\u09a4 \u09b9\u09ac \u09b2\u0995\u09b7 \u0995\u09b0\u09a8 is_offer \u098f\u0995\u099f \u0990\u099a\u099b\u0995 \u0985\u09af\u099f\u09b0\u09ac\u0989\u099f \u098f\u09ac \u098f\u099f bool \u09b9\u09a4 \u09b9\u09ac \u09af\u09a6 \u0989\u09aa\u09b8\u09a5\u09a4 \u09a5\u0995 \u098f\u0987 \u09b8\u09ac\u099f \u0997\u09ad\u09b0\u09ad\u09ac \u0985\u09ac\u09b8\u09a5\u09a8\u09b0\u09a4 JSON \u0985\u09ac\u099c\u0995\u099f\u0997\u09b2\u09a4\u0993 \u0995\u099c \u0995\u09b0\u09ac \u09b8\u09ac\u09af\u0995\u09b0\u09af\u09ad\u09ac JSON \u09b9\u09a4 \u098f\u09ac JSON \u09a5\u0995 \u0995\u09a8\u09ad\u09b0\u099f \u0995\u09b0\u09a8 OpenAPI \u09a6\u09af \u09b8\u09ac\u0995\u099b \u09a1\u0995\u09ae\u09a8\u099f \u0995\u09b0\u09a8, \u09af \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09af\u09a4 \u09aa\u09b0: \u0995\u09b0\u09df\u09b6\u09b2 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0985\u09a8\u0995 \u09ad\u09b7\u09b0 \u099c\u09a8\u09af \u09b8\u09ac\u09af\u0995\u09b0\u09af \u0995\u09b2\u09af\u09a8\u099f \u0995\u09a1 \u09a4\u09b0\u09b0 \u09ac\u09af\u09ac\u09b8\u09a5 \u09b8\u09b0\u09b8\u09b0 2\u099f \u0995\u09b0\u09df\u09b6\u09b2 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0993\u09af\u09ac \u09aa\u09b7\u09a0 \u09aa\u09b0\u09a6\u09a8 \u0995\u09b0 \u09b9\u09df\u099b \u0986\u09ae\u09b0 \u098f\u09a4\u0995\u09b7\u09a8 \u09b6\u09a7 \u098f\u09b0 \u09aa\u09b7\u09a0 \u09a4\u09b0 \u0995\u09b0\u099b, \u0995\u09a8\u09a4 \u0986\u09aa\u09a8 \u0987\u09a4\u09ae\u09a7\u09af\u0987 \u098f\u099f \u0995\u09ad\u09ac \u0995\u099c \u0995\u09b0 \u09a4\u09b0 \u09a7\u09b0\u09a3\u0993 \u09aa\u09df \u0997\u09df\u099b\u09a8 \u09a8\u09ae\u09a8\u0995\u09a4 \u09b2\u0987\u09a8 \u0997\u09b2 \u09aa\u09b0\u09ac\u09b0\u09a4\u09a8 \u0995\u09b0\u09b0 \u099a\u09b7\u099f \u0995\u09b0\u09a8: return {\"item_name\": item",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "name, \"item_id\": item_id} \u09aa\u09b0\u09ac: \"item_name\": item name \u09aa\u09b0\u09ac\u09b0\u09a4\u09a4: \"item_price\": item price \u098f\u09ac \u09a6\u0996\u09a8 \u0995\u09ad\u09ac \u0986\u09aa\u09a8\u09b0 \u098f\u09a1\u099f\u09b0 \u0989\u09aa\u09a6\u09a8\u0997\u09b2\u0995 \u09b8\u09df\u0995\u09b0\u09df\u09ad\u09ac-\u09b8\u09ae\u09aa\u09a8\u09a8 \u0995\u09b0\u09ac \u098f\u09ac \u09a4\u09a6\u09b0 \u09a7\u09b0\u09a8 \u099c\u09a8\u09a4 \u09aa\u09b0\u09ac: \u0986\u09b0\u0993 \u09ac\u09b6\u09b7\u099f\u09af \u09b8\u09ae\u09aa\u09a8\u09a8 \u0989\u09a6\u09b9\u09b0\u09a3\u09b0 \u099c\u09a8\u09af, \u09a6\u0996\u09a8 \u099f\u0989\u099f\u09b0\u09df\u09b2 - \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0997\u0987\u09a1",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "\u09b8\u09aa\u09df\u09b2\u09b0 \u09b8\u09a4\u09b0\u0995\u09a4: \u099f\u0989\u099f\u09b0\u09df\u09b2 - \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0997\u0987\u09a1 \u09a8\u09ae\u09a8\u0995\u09a4 \u09ac\u09b7\u09df\u0997\u09b2 \u0985\u09a8\u09a4\u09b0\u09ad\u0995\u09a4 \u0995\u09b0: \u09b9\u09a1\u09b0, \u0995\u0995\u099c, \u09ab\u09b0\u09ae \u09ab\u09b2\u09a1 \u098f\u09ac \u09ab\u0987\u09b2\u0997\u09b2 \u098f\u09ae\u09a8 \u0985\u09a8\u09af\u09a8\u09af \u099c\u09df\u0997 \u09a5\u0995 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0998\u09b7\u09a3 \u0995\u09b0 maximum_length \u09ac regex \u098f\u09b0 \u09ae\u09a4 \u09af\u099a\u0987\u0995\u09b0\u09a3 \u09ac\u09a7\u09ae\u0995\u09a4 \u09b8\u099f \u0995\u09b0 \u09b9\u09af \u0995\u09ad\u09ac, \u09a4 \u09a8\u09df \u0986\u09b2\u099a\u09a8 \u0995\u09b0 \u09b9\u09ac \u098f\u0995\u099f \u0996\u09ac \u09b6\u0995\u09a4\u09b6\u09b2 \u098f\u09ac \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09b8\u09b9\u099c \u09a1\u09aa\u09a8\u09a1\u09a8\u09b8 \u0987\u09a8\u099c\u0995\u09b6\u09a8 \u09aa\u09a6\u09a7\u09a4 OAuth2 \u098f\u09ac JWT \u099f\u0995\u09a8 \u098f\u09ac HTTP Basic auth \u09b8\u09b9 \u09a8\u09b0\u09aa\u09a4\u09a4 \u098f\u09ac \u0985\u09a8\u09ae\u09a6\u09a8\u09aa\u09b0\u09aa\u09a4 \u09b8\u09ae\u09aa\u09b0\u0995\u09a4 \u09ac\u09b7\u09df\u09b8\u09ae\u09b9\u09b0 \u0989\u09aa\u09b0 \u0997\u09ad\u09b0\u09ad\u09ac \u0985\u09ac\u09b8\u09a5\u09a8\u09b0\u09a4 JSON \u09ae\u09a1\u09b2 \u0998\u09b7\u09a3 \u0995\u09b0\u09b0 \u099c\u09a8\u09af \u0986\u09b0\u0993 \u0989\u09a8\u09a8\u09a4 (\u0995\u09a8\u09a4 \u09b8\u09ae\u09a8 \u09b8\u09b9\u099c) \u0995\u09b6\u09b2 (Pydantic \u0995 \u09a7\u09a8\u09af\u09ac\u09a6) \u0986\u09b0 \u0985\u09a4\u09b0\u0995\u09a4 \u09ac\u09b6\u09b7\u099f\u09af (\u09b8\u099f\u09b0\u09b2\u099f\u0995 \u09a7\u09a8\u09af\u09ac\u09a6) \u09b9\u09b8\u09ac: WebSockets GraphQL HTTPX \u098f\u09ac pytest \u09ad\u09a4\u09a4\u0995 \u0985\u09a4\u09af\u09a8\u09a4 \u09b8\u09b9\u099c \u09aa\u09b0\u0995\u09b7 CORS Cookie Sessions",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "\u098f\u09ac \u0986\u09b0 \u0995\u09b0\u09ae\u0995\u09b7\u09ae\u09a4 \u09b8\u09ac\u09a7\u09a8 TechEmpower Benchmarks \u09a6\u0996\u09af \u09af FastAPI \u0985\u09af\u09aa\u09b2\u0995\u09b6\u09a8\u0997\u09b2 Uvicorn-\u098f\u09b0 \u0985\u09a7\u09a8 \u099a\u09b2\u09ae\u09a8 \u09a6\u09b0\u09a4\u09a4\u09ae\u09aa\u0987\u09a5\u09a8 \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995\u0997\u09b2\u09b0 \u09ae\u09a7\u09af \u098f\u0995\u099f, \u09b6\u09a7\u09ae\u09a4\u09b0 Starlette \u098f\u09ac Uvicorn-\u098f\u09b0 \u09aa\u09b0 (FastAPI \u09a6\u09ac\u09b0 \u0985\u09ad\u09af\u09a8\u09a4\u09b0\u09a3\u09ad\u09ac \u09ac\u09af\u09ac\u09b9\u09a4) (*) \u098f\u099f \u09b8\u09ae\u09aa\u09b0\u0995 \u0986\u09b0\u0993 \u09ac\u099d\u09a4, \u09a6\u0996\u09a8 Benchmarks \u0990\u099a\u099b\u0995 \u09a8\u09b0\u09ad\u09b0\u09b6\u09b2\u09a4 Pydantic \u09a6\u09ac\u09b0 \u09ac\u09af\u09ac\u09b9\u09a4: email-validator - \u0987\u09ae\u09b2 \u09af\u099a\u0987\u0995\u09b0\u09a3\u09b0 \u099c\u09a8\u09af \u09b8\u099f\u09b0\u09b2\u099f \u09a6\u09ac\u09b0 \u09ac\u09af\u09ac\u09b9\u09a4: httpx - \u0986\u09aa\u09a8 \u09af\u09a6 TestClient \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u09a8 \u09a4\u09b9\u09b2 \u0986\u09ac\u09b6\u09af\u0995 jinja2 - \u0986\u09aa\u09a8 \u09af\u09a6 \u09aa\u09b0\u09a6\u09a4\u09a4 \u099f\u09ae\u09aa\u09b2\u099f \u09b0\u09aa\u09b0\u0996 \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u09a8 \u09a4\u09b9\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 python-multipart - \u0986\u09aa\u09a8 \u09af\u09a6 \u09ab\u09b0\u09ae \u09b8\u09b9\u09af\u09a4 \u0995\u09b0\u09a4 \u099a\u09a8 \u09a4\u09b9\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 \"parsing\", request",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "form() \u09b8\u09b9 itsdangerous - SessionMiddleware \u09b8\u09b9\u09af\u09a4\u09b0 \u099c\u09a8\u09af \u09aa\u09b0\u09af\u099c\u09a8 pyyaml - \u09b8\u099f\u09b0\u09b2\u099f\u09b0 SchemaGenerator \u09b8\u09aa\u09b0\u099f \u098f\u09b0 \u099c\u09a8\u09af \u09aa\u09b0\u09df\u099c\u09a8 (\u0986\u09aa\u09a8\u09b0 \u09b8\u09ae\u09ad\u09ac\u09a4 FastAPI \u09aa\u09b0\u09af\u099c\u09a8 \u09a8\u0987) graphene - GraphQLApp \u09b8\u09b9\u09af\u09a4\u09b0 \u099c\u09a8\u09af \u09aa\u09b0\u09df\u099c\u09a8 FastAPI / Starlette \u09a6\u09ac\u09b0 \u09ac\u09af\u09ac\u09b9\u09a4: uvicorn - \u09b8\u09b0\u09ad\u09b0\u09b0 \u099c\u09a8\u09af \u09af \u0986\u09aa\u09a8\u09b0 \u0985\u09af\u09aa\u09b2\u0995\u09b6\u09a8 \u09b2\u09a1 \u0995\u09b0 \u098f\u09ac \u09aa\u09b0\u09ac\u09b6\u09a8 \u0995\u09b0 orjson - \u0986\u09aa\u09a8 ORJSONResponse \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u0987\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 ujson - \u0986\u09aa\u09a8 UJSONResponse \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u0987\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 \u0986\u09aa\u09a8 \u098f\u0987 \u09b8\u09ac \u0987\u09a8\u09b8\u099f\u09b2 \u0995\u09b0\u09a4 \u09aa\u09b0\u09a8 pip install fastapi[all] \u09a6\u09df \u09b2\u0987\u09b8\u09a8\u09b8 \u098f\u0987 \u09aa\u09b0\u099c\u0995\u099f MIT \u09b2\u0987\u09b8\u09a8\u09b8 \u09a8\u09a4\u09ae\u09b2\u09b0 \u0985\u09a7\u09a8 \u09b6\u09b0\u09a4\u09df\u09a4 \u0989\u09aa\u09b0 \u09ab\u09b0 \u09af\u0993",
          "url": "https://fastapi.tiangolo.com/bn/",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/de/",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI Inhaltsverzeichnis Sponsoren Meinungen Typer, das FastAPI der CLIs Anforderungen Installation Beispiel Erstellung Starten Testen Interaktive API-Dokumentation Alternative API-Dokumentation Beispiel Aktualisierung Aktualisierung der interaktiven API-Dokumentation Aktualisierung der alternativen API-Dokumentation Zusammenfassung Performanz Optionale Abh\u00e4ngigkeiten Lizenz Merkmale Lernen Lernen Einf\u00fchrung in Python-Typen Nebenl\u00e4ufigkeit und async / await Environment Variables Virtual Environments Tutorial  Benutzerhandbuch Tutorial  Benutzerhandbuch Erste Schritte Pfad-Parameter Query-Parameter Requestbody Query-Parameter und Stringvalidierung Pfad-Parameter und Validierung von Zahlen Query Parameter Models Body  Mehrere Parameter Body  Felder Body  Verschachtelte Modelle Beispiel-Request-Daten deklarieren Zus\u00e4tzliche Datentypen Cookie-Parameter Header-Parameter Cookie Parameter Models Header Parameter Models Responsemodell  R\u00fcckgabetyp Extramodelle Response-Statuscode Formulardaten Form Models Dateien im Request Formulardaten und Dateien im Request Fehlerbehandlung Pfadoperation-Konfiguration JSON-kompatibler Encoder Body  Aktualisierungen Abh\u00e4ngigkeiten Abh\u00e4ngigkeiten Klassen als Abh\u00e4ngigkeiten Unterabh\u00e4ngigkeiten Abh\u00e4ngigkeiten in Pfadoperation-Dekoratoren Globale Abh\u00e4ngigkeiten Abh\u00e4ngigkeiten mit yield Sicherheit Sicherheit Sicherheit  Erste Schritte Aktuellen Benutzer abrufen Einfaches OAuth2 mit Password und Bearer OAuth2 mit Password (und Hashing), Bearer mit JWT-Tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Gr\u00f6\u00dfere Anwendungen  mehrere Dateien Hintergrundtasks Metadaten und URLs der Dokumentationen Statische Dateien Testen Debugging Handbuch f\u00fcr fortgeschrittene Benutzer Handbuch f\u00fcr fortgeschrittene Benutzer Fortgeschrittene Konfiguration der Pfadoperation Zus\u00e4tzliche Statuscodes Eine Response direkt zur\u00fcckgeben Benutzerdefinierte Response  HTML, Stream, Datei, andere Zus\u00e4tzliche Responses in OpenAPI Response-Cookies Response-Header Response  Statuscode \u00e4ndern Fortgeschrittene Abh\u00e4ngigkeiten Fortgeschrittene Sicherheit Fortgeschrittene Sicherheit OAuth2-Scopes HTTP Basic Auth Den Request direkt verwenden Verwendung von Datenklassen Fortgeschrittene Middleware Unteranwendungen  Mounts Hinter einem Proxy Templates WebSockets Lifespan-Events WebSockets testen Events testen: Hochfahren  Herunterfahren Testen mit Ersatz f\u00fcr Abh\u00e4ngigkeiten Asynchrone Tests Einstellungen und Umgebungsvariablen OpenAPI-Callbacks OpenAPI-Webhooks WSGI inkludieren  Flask, Django und andere Clients generieren FastAPI CLI Deployment Deployment \u00dcber FastAPI-Versionen \u00dcber HTTPS Einen Server manuell ausf\u00fchren  Uvicorn Deployment-Konzepte FastAPI-Deployment bei Cloud-Anbietern Serverworker  Gunicorn mit Uvicorn FastAPI in Containern  Docker How-To  Rezepte How-To  Rezepte Allgemeines  How-To  Rezepte GraphQL Benutzerdefinierte Request- und APIRoute-Klasse Bedingte OpenAPI OpenAPI erweitern Separate OpenAPI-Schemas f\u00fcr Eingabe und Ausgabe oder nicht Statische Assets der Dokumentationsoberfl\u00e4che (selbst hosten) Swagger-Oberfl\u00e4che konfigurieren Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Ressourcen Ressourcen FastAPI helfen  Hilfe erhalten Development - Contributing Projektgenerierung  Vorlage External Links and Articles FastAPI and friends newsletter Repository Management Tasks \u00dcber \u00dcber Alternativen, Inspiration und Vergleiche Geschichte, Design und Zukunft Benchmarks Repository Management Release Notes Inhaltsverzeichnis Sponsoren Meinungen Typer, das FastAPI der CLIs Anforderungen Installation Beispiel Erstellung Starten Testen Interaktive API-Dokumentation Alternative API-Dokumentation Beispiel Aktualisierung Aktualisierung der interaktiven API-Dokumentation Aktualisierung der alternativen API-Dokumentation Zusammenfassung Performanz Optionale Abh\u00e4ngigkeiten Lizenz FastAPI FastAPI Framework, hochperformant, leicht zu erlernen, schnell zu programmieren, einsatzbereit Dokumentation: https://fastapi.tiangolo.com Quellcode: https://github.com/fastapi/fastapi FastAPI ist ein modernes, schnelles (hoch performantes) Webframework zur Erstellung von APIs mit Python auf Basis von Standard-Python-Typhinweisen. Seine Schl\u00fcssel-Merkmale sind: Schnell: Sehr hohe Leistung, auf Augenh\u00f6he mit NodeJS und Go (Dank Starlette und Pydantic). Eines der schnellsten verf\u00fcgbaren Python-Frameworks. Schnell zu programmieren: Erh\u00f6hen Sie die Geschwindigkeit bei der Entwicklung von Funktionen um etwa 200  bis 300 . * Weniger Bugs: Verringern Sie die von Menschen (Entwicklern) verursachten Fehler um etwa 40 . * Intuitiv: Exzellente Editor-Unterst\u00fctzung. Code-Vervollst\u00e4ndigung \u00fcberall. Weniger Debuggen. Einfach: So konzipiert, dass es einfach zu benutzen und zu erlernen ist. Weniger Zeit f\u00fcr das Lesen der Dokumentation. Kurz: Minimieren Sie die Verdoppelung von Code. Mehrere Funktionen aus jeder Parameterdeklaration. Weniger Bugs. Robust: Erhalten Sie produktionsreifen Code. Mit automatischer, interaktiver Dokumentation. Standards-basiert: Basierend auf (und vollst\u00e4ndig kompatibel mit) den offenen Standards f\u00fcr APIs: OpenAPI (fr\u00fcher bekannt als Swagger) und JSON Schema. * Sch\u00e4tzung auf Basis von Tests in einem internen Entwicklungsteam, das Produktionsanwendungen erstellt. Sponsoren Andere Sponsoren Meinungen [...] Ich verwende FastAPI heutzutage sehr oft. [...] Ich habe tats\u00e4chlich vor, es f\u00fcr alle ML-Dienste meines Teams bei Microsoft zu verwenden. Einige davon werden in das Kernprodukt Windows und einige Office-Produkte integriert. Kabir Khan - Microsoft (Ref) Wir haben die FastAPI-Bibliothek genommen, um einen REST-Server zu erstellen, der abgefragt werden kann, um Vorhersagen zu erhalten. [f\u00fcr Ludwig] Piero Molino, Yaroslav Dudin, und Sai Sumanth Miryala - Uber (Ref) Netflix freut sich, die Open-Source-Ver\u00f6ffentlichung unseres Krisenmanagement-Orchestrierung-Frameworks bekannt zu geben: Dispatch! [erstellt mit FastAPI] Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (Ref) Ich bin \u00fcbergl\u00fccklich mit FastAPI. Es macht so viel Spa\u00df! Brian Okken - Host des Python Bytes Podcast (Ref) Ehrlich, was Du gebaut hast, sieht super solide und poliert aus. In vielerlei Hinsicht ist es so, wie ich Hug haben wollte  es ist wirklich inspirierend, jemanden so etwas bauen zu sehen. Timothy Crosley - Autor von Hug (Ref) Wenn Sie ein modernes Framework zum Erstellen von REST-APIs erlernen m\u00f6chten, schauen Sie sich FastAPI an. [...] Es ist schnell, einfach zu verwenden und leicht zu erlernen [...] Wir haben zu FastAPI f\u00fcr unsere APIs gewechselt [...] Ich denke, es wird Ihnen gefallen [...] Ines Montani - Matthew Honnibal - Gr\u00fcnder von Explosion AI - Autoren von spaCy (Ref) - (Ref) Falls irgendjemand eine Produktions-Python-API erstellen m\u00f6chte, kann ich FastAPI w\u00e4rmstens empfehlen. Es ist wundersch\u00f6n konzipiert, einfach zu verwenden und hoch skalierbar; es ist zu einer Schl\u00fcsselkomponente in unserer API-First-Entwicklungsstrategie geworden und treibt viele Automatisierungen und Dienste an, wie etwa unseren virtuellen TAC-Ingenieur. Deon Pillsbury - Cisco (Ref) Typer, das FastAPI der CLIs Wenn Sie eine CLI-Anwendung f\u00fcr das Terminal erstellen, anstelle einer Web-API, schauen Sie sich Typer an. Typer ist die kleine Schwester von FastAPI. Und es soll das FastAPI der CLIs sein.   Anforderungen FastAPI steht auf den Schultern von Giganten: Starlette f\u00fcr die Webanteile. Pydantic f\u00fcr die Datenanteile. Installation  pip install fastapi --- 100 Sie ben\u00f6tigen au\u00dferdem einen ASGI-Server. F\u00fcr die Produktumgebung beispielsweise Uvicorn oder Hypercorn.  pip install \"uvicorn[standard]\" --- 100 Beispiel Erstellung Erstellen Sie eine Datei main.py mit: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Oder verwenden Sie async def ... Wenn Ihr Code async / await verwendet, benutzen Sie async def: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Anmerkung: Wenn Sie das nicht kennen, schauen Sie sich den Abschnitt In Eile? \u00fcber async und await in der Dokumentation an. Starten F\u00fchren Sie den Server aus:  uvicorn main:app --reload INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup. INFO: Application startup complete. Was macht der Befehl uvicorn main:app --reload ... Der Befehl uvicorn main:app bezieht sich auf: main: die Datei main.py (das Python-Modul). app: das Objekt, das innerhalb von main.py mit der Zeile app = FastAPI() erzeugt wurde. --reload: l\u00e4sst den Server nach Code\u00e4nderungen neu starten. Tun Sie das nur w\u00e4hrend der Entwicklung. Testen \u00d6ffnen Sie Ihren Browser unter http://127.0.0.1:8000/items/5?q=somequery. Sie erhalten die JSON-Response: {\"item_id\": 5, \"q\": \"somequery\"} Damit haben Sie bereits eine API erstellt, welche: HTTP-Anfragen auf den Pfaden / und /items/{item_id} entgegennimmt. Beide Pfade erhalten GET Operationen (auch bekannt als HTTP Methoden). Der Pfad /items/{item_id} hat einen Pfadparameter item_id, der ein int sein sollte. Der Pfad /items/{item_id} hat einen optionalen str Query Parameter q. Interaktive API-Dokumentation Gehen Sie nun auf http://127.0.0.1:8000/docs. Sie sehen die automatische interaktive API-Dokumentation (bereitgestellt von Swagger UI): Alternative API-Dokumentation Gehen Sie jetzt auf http://127.0.0.1:8000/redoc. Sie sehen die alternative automatische Dokumentation (bereitgestellt von ReDoc): Beispiel Aktualisierung \u00c4ndern Sie jetzt die Datei main.py, um den Body einer PUT-Anfrage zu empfangen. Deklarieren Sie den Body mithilfe von Standard-Python-Typen, dank Pydantic. from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} Der Server sollte automatisch neu geladen werden (weil Sie oben --reload zum Befehl uvicorn hinzugef\u00fcgt haben). Aktualisierung der interaktiven API-Dokumentation Gehen Sie jetzt auf http://127.0.0.1:8000/docs. Die interaktive API-Dokumentation wird automatisch aktualisiert, einschlie\u00dflich des neuen Bodys: Klicken Sie auf die Taste Try it out, damit k\u00f6nnen Sie die Parameter ausf\u00fcllen und direkt mit der API interagieren: Klicken Sie dann auf die Taste Execute, die Benutzeroberfl\u00e4che wird mit Ihrer API kommunizieren, sendet die Parameter, holt die Ergebnisse und zeigt sie auf dem Bildschirm an: Aktualisierung der alternativen API-Dokumentation Und nun gehen Sie auf http://127.0.0.1:8000/redoc. Die alternative Dokumentation wird ebenfalls den neuen Abfrageparameter und -inhalt widerspiegeln: Zusammenfassung Zusammengefasst deklarieren Sie einmal die Typen von Parametern, Body, etc. als Funktionsparameter. Das machen Sie mit modernen Standard-Python-Typen. Sie m\u00fcssen keine neue Syntax, Methoden oder Klassen einer bestimmten Bibliothek usw. lernen. Nur Standard-Python+. Zum Beispiel f\u00fcr ein int: item_id: int oder f\u00fcr ein komplexeres Item-Modell: item: Item ... und mit dieser einen Deklaration erhalten Sie: Editor-Unterst\u00fctzung, einschlie\u00dflich: Code-Vervollst\u00e4ndigung. Typpr\u00fcfungen. Validierung von Daten: Automatische und eindeutige Fehler, wenn die Daten ung\u00fcltig sind. Validierung auch f\u00fcr tief verschachtelte JSON-Objekte. Konvertierung von Eingabedaten: Aus dem Netzwerk kommend, zu Python-Daten und -Typen. Lesen von: JSON. Pfad-Parametern. Abfrage-Parametern. Cookies. Header-Feldern. Formularen. Dateien. Konvertierung von Ausgabedaten: Konvertierung von Python-Daten und -Typen zu Netzwerkdaten (als JSON): Konvertieren von Python-Typen (str, int, float, bool, list, usw.). Datetime-Objekte. UUID-Objekte. Datenbankmodelle. ... und viele mehr. Automatische interaktive API-Dokumentation, einschlie\u00dflich 2 alternativer Benutzeroberfl\u00e4chen: Swagger UI. ReDoc. Um auf das vorherige Codebeispiel zur\u00fcckzukommen, FastAPI wird: \u00dcberpr\u00fcfen, dass es eine item_id im Pfad f\u00fcr GET- und PUT-Anfragen gibt. \u00dcberpr\u00fcfen, ob die item_id vom Typ int f\u00fcr GET- und PUT-Anfragen ist. Falls nicht, wird dem Client ein n\u00fctzlicher, eindeutiger Fehler angezeigt. Pr\u00fcfen, ob es einen optionalen Abfrageparameter namens q (wie in http://127.0.0.1:8000/items/foo?q=somequery) f\u00fcr GET-Anfragen gibt. Da der q-Parameter mit = None deklariert ist, ist er optional. Ohne das None w\u00e4re er erforderlich (wie der Body im Fall von PUT). Bei PUT-Anfragen an /items/{item_id} den Body als JSON lesen: Pr\u00fcfen, ob er ein erforderliches Attribut name hat, das ein str sein muss. Pr\u00fcfen, ob er ein erforderliches Attribut price hat, das ein float sein muss. Pr\u00fcfen, ob er ein optionales Attribut is_offer hat, das ein bool sein muss, falls vorhanden. All dies w\u00fcrde auch f\u00fcr tief verschachtelte JSON-Objekte funktionieren. Automatisch von und nach JSON konvertieren. Alles mit OpenAPI dokumentieren, welches verwendet werden kann von: Interaktiven Dokumentationssystemen. Automatisch Client-Code generierenden Systemen f\u00fcr viele Sprachen. Zwei interaktive Dokumentation-Webschnittstellen direkt zur Verf\u00fcgung stellen. Wir haben nur an der Oberfl\u00e4che gekratzt, aber Sie bekommen schon eine Vorstellung davon, wie das Ganze funktioniert. Versuchen Sie, diese Zeile zu \u00e4ndern: return {\"item_name\": item.name, \"item_id\": item_id} ... von: ... \"item_name\": item.name ... ... zu: ... \"item_price\": item.price ... ... und sehen Sie, wie Ihr Editor die Attribute automatisch ausf\u00fcllt und ihre Typen kennt: F\u00fcr ein vollst\u00e4ndigeres Beispiel, mit weiteren Funktionen, siehe das Tutorial - Benutzerhandbuch. Spoiler-Alarm: Das Tutorial - Benutzerhandbuch enth\u00e4lt: Deklaration von Parametern von anderen verschiedenen Stellen wie: Header-Felder, Cookies, Formularfelder und Dateien. Wie man Validierungseinschr\u00e4nkungen wie maximum_length oder regex setzt. Ein sehr leistungsf\u00e4higes und einfach zu bedienendes System f\u00fcr Dependency Injection. Sicherheit und Authentifizierung, einschlie\u00dflich Unterst\u00fctzung f\u00fcr OAuth2 mit JWT-Tokens und HTTP-Basic-Authentifizierung. Fortgeschrittenere (aber ebenso einfache) Techniken zur Deklaration tief verschachtelter JSON-Modelle (dank Pydantic). GraphQL Integration mit Strawberry und anderen Bibliotheken. Viele zus\u00e4tzliche Funktionen (dank Starlette) wie: WebSockets extrem einfache Tests auf Basis von httpx und pytest CORS Cookie Sessions ... und mehr. Performanz Unabh\u00e4ngige TechEmpower-Benchmarks zeigen FastAPI-Anwendungen, die unter Uvicorn laufen, als eines der schnellsten verf\u00fcgbaren Python-Frameworks, nur noch hinter Starlette und Uvicorn selbst (intern von FastAPI verwendet). Um mehr dar\u00fcber zu erfahren, siehe den Abschnitt Benchmarks. Optionale Abh\u00e4ngigkeiten Wird von Pydantic verwendet: email-validator - f\u00fcr E-Mail-Validierung. pydantic-settings - f\u00fcr die Verwaltung von Einstellungen. pydantic-extra-types - f\u00fcr zus\u00e4tzliche Typen, mit Pydantic zu verwenden. Wird von Starlette verwendet: httpx - erforderlich, wenn Sie den TestClient verwenden m\u00f6chten. jinja2 - erforderlich, wenn Sie die Standardkonfiguration f\u00fcr Templates verwenden m\u00f6chten. python-multipart - erforderlich, wenn Sie Formulare mittels request.form() parsen m\u00f6chten. itsdangerous - erforderlich f\u00fcr SessionMiddleware Unterst\u00fctzung. pyyaml - erforderlich f\u00fcr Starlette's SchemaGenerator Unterst\u00fctzung (Sie brauchen das wahrscheinlich nicht mit FastAPI). ujson - erforderlich, wenn Sie UJSONResponse verwenden m\u00f6chten. Wird von FastAPI / Starlette verwendet: uvicorn - f\u00fcr den Server, der Ihre Anwendung l\u00e4dt und serviert. orjson - erforderlich, wenn Sie ORJSONResponse verwenden m\u00f6chten. Sie k\u00f6nnen diese alle mit pip install \"fastapi[all]\" installieren. Lizenz Dieses Projekt ist unter den Bedingungen der MIT-Lizenz lizenziert. Zur\u00fcck zum Seitenanfang",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "uvicorn main:app --reload",
        "uvicorn main:app",
        "app = FastAPI()",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "email-validator",
        "pydantic-settings",
        "pydantic-extra-types",
        "python-multipart",
        "request.form()",
        "itsdangerous",
        "SessionMiddleware",
        "SchemaGenerator",
        "UJSONResponse",
        "ORJSONResponse",
        "pip install \"fastapi[all]\""
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI Inhaltsverzeichnis Sponsoren Meinungen Typer, das FastAPI der CLIs Anforderungen Installation Beispiel Erstellung Starten Testen Interaktive API-Dokumentation Alternative API-Dokumentation Beispiel Aktualisierung Aktualisierung der interaktiven API-Dokumentation Aktualisierung der alternativen API-Dokumentation Zusammenfassung Performanz Optionale Abh\u00e4ngigkeiten Lizenz Merkmale Lernen Lernen Einf\u00fchrung in Python-Typen Nebenl\u00e4ufigkeit und async / await Environment Variables Virtual Environments Tutorial  Benutzerhandbuch Tutorial  Benutzerhandbuch Erste Schritte Pfad-Parameter Query-Parameter Requestbody Query-Parameter und Stringvalidierung Pfad-Parameter und Validierung von Zahlen Query Parameter Models Body  Mehrere Parameter Body  Felder Body  Verschachtelte Modelle Beispiel-Request-Daten deklarieren Zus\u00e4tzliche Datentypen Cookie-Parameter Header-Parameter Cookie Parameter Models Header Parameter Models Responsemodell  R\u00fcckgabetyp Extramodelle Response-Statuscode Formulardaten Form Models Dateien im Request Formulardaten und Dateien im Request Fehlerbehandlung Pfadoperation-Konfiguration JSON-kompatibler Encoder Body  Aktualisierungen Abh\u00e4ngigkeiten Abh\u00e4ngigkeiten Klassen als Abh\u00e4ngigkeiten Unterabh\u00e4ngigkeiten Abh\u00e4ngigkeiten in Pfadoperation-Dekoratoren Globale Abh\u00e4ngigkeiten Abh\u00e4ngigkeiten mit yield Sicherheit Sicherheit Sicherheit  Erste Schritte Aktuellen Benutzer abrufen Einfaches OAuth2 mit Password und Bearer OAuth2 mit Password (und Hashing), Bearer mit JWT-Tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Gr\u00f6\u00dfere Anwendungen  mehrere Dateien Hintergrundtasks Metadaten und URLs der Dokumentationen Statische Dateien Testen Debugging Handbuch f\u00fcr fortgeschrittene Benutzer Handbuch f\u00fcr fortgeschrittene Benutzer Fortgeschrittene Konfiguration der Pfadoperation Zus\u00e4tzliche Statuscodes Eine Response direkt zur\u00fcckgeben Benutzerdefinierte Response  HTML, Stream, Datei, andere Zus\u00e4tzliche Responses in OpenAPI Response-Cookies Response-Header Response  Statuscode \u00e4ndern Fortgeschrittene Abh\u00e4ngigkeiten Fortgeschrittene Sicherheit Fortgeschrittene Sicherheit OAuth2-Scopes HTTP Basic Auth Den Request direkt verwenden Verwendung von Datenklassen Fortgeschrittene Middleware Unteranwendungen  Mounts Hinter einem Proxy Templates WebSockets Lifespan-Events WebSockets testen Events testen: Hochfahren  Herunterfahren Testen mit Ersatz f\u00fcr Abh\u00e4ngigkeiten Asynchrone Tests Einstellungen und Umgebungsvariablen OpenAPI-Callbacks OpenAPI-Webhooks WSGI inkludieren  Flask, Django und andere Clients generieren FastAPI CLI Deployment Deployment \u00dcber FastAPI-Versionen \u00dcber HTTPS Einen Server manuell ausf\u00fchren  Uvicorn Deployment-Konzepte FastAPI-Deployment bei Cloud-Anbietern Serverworker  Gunicorn mit Uvicorn FastAPI in Containern  Docker How-To  Rezepte How-To  Rezepte Allgemeines  How-To  Rezepte GraphQL Benutzerdefinierte Request- und APIRoute-Klasse Bedingte OpenAPI OpenAPI erweitern Separate OpenAPI-Schemas f\u00fcr Eingabe und Ausgabe oder nicht Statische Assets der Dokumentationsoberfl\u00e4che (selbst hosten) Swagger-Oberfl\u00e4che konfigurieren Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Ressourcen Ressourcen FastAPI helfen  Hilfe erhalten Development - Contributing Projektgenerierung  Vorlage External Links and Articles FastAPI and friends newsletter Repository Management Tasks \u00dcber \u00dcber Alternativen, Inspiration und Vergleiche Geschichte, Design und Zukunft Benchmarks Repository Management Release Notes Inhaltsverzeichnis Sponsoren Meinungen Typer, das FastAPI der CLIs Anforderungen Installation Beispiel Erstellung Starten Testen Interaktive API-Dokumentation Alternative API-Dokumentation Beispiel Aktualisierung Aktualisierung der interaktiven API-Dokumentation Aktualisierung der alternativen API-Dokumentation Zusammenfassung Performanz Optionale Abh\u00e4ngigkeiten Lizenz FastAPI FastAPI Framework, hochperformant, leicht zu erlernen, schnell zu programmieren, einsatzbereit Dokumentation: https://fastapi",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com Quellcode: https://github com/fastapi/fastapi FastAPI ist ein modernes, schnelles (hoch performantes) Webframework zur Erstellung von APIs mit Python auf Basis von Standard-Python-Typhinweisen Seine Schl\u00fcssel-Merkmale sind: Schnell: Sehr hohe Leistung, auf Augenh\u00f6he mit NodeJS und Go (Dank Starlette und Pydantic) Eines der schnellsten verf\u00fcgbaren Python-Frameworks Schnell zu programmieren: Erh\u00f6hen Sie die Geschwindigkeit bei der Entwicklung von Funktionen um etwa 200  bis 300",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "* Weniger Bugs: Verringern Sie die von Menschen (Entwicklern) verursachten Fehler um etwa 40 * Intuitiv: Exzellente Editor-Unterst\u00fctzung Code-Vervollst\u00e4ndigung \u00fcberall Weniger Debuggen Einfach: So konzipiert, dass es einfach zu benutzen und zu erlernen ist Weniger Zeit f\u00fcr das Lesen der Dokumentation Kurz: Minimieren Sie die Verdoppelung von Code Mehrere Funktionen aus jeder Parameterdeklaration Weniger Bugs Robust: Erhalten Sie produktionsreifen Code Mit automatischer, interaktiver Dokumentation",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "Standards-basiert: Basierend auf (und vollst\u00e4ndig kompatibel mit) den offenen Standards f\u00fcr APIs: OpenAPI (fr\u00fcher bekannt als Swagger) und JSON Schema * Sch\u00e4tzung auf Basis von Tests in einem internen Entwicklungsteam, das Produktionsanwendungen erstellt Sponsoren Andere Sponsoren Meinungen [ ] Ich verwende FastAPI heutzutage sehr oft [ ] Ich habe tats\u00e4chlich vor, es f\u00fcr alle ML-Dienste meines Teams bei Microsoft zu verwenden",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "Einige davon werden in das Kernprodukt Windows und einige Office-Produkte integriert Kabir Khan - Microsoft (Ref) Wir haben die FastAPI-Bibliothek genommen, um einen REST-Server zu erstellen, der abgefragt werden kann, um Vorhersagen zu erhalten [f\u00fcr Ludwig] Piero Molino, Yaroslav Dudin, und Sai Sumanth Miryala - Uber (Ref) Netflix freut sich, die Open-Source-Ver\u00f6ffentlichung unseres Krisenmanagement-Orchestrierung-Frameworks bekannt zu geben: Dispatch",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "[erstellt mit FastAPI] Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (Ref) Ich bin \u00fcbergl\u00fccklich mit FastAPI Es macht so viel Spa\u00df Brian Okken - Host des Python Bytes Podcast (Ref) Ehrlich, was Du gebaut hast, sieht super solide und poliert aus In vielerlei Hinsicht ist es so, wie ich Hug haben wollte  es ist wirklich inspirierend, jemanden so etwas bauen zu sehen",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "Timothy Crosley - Autor von Hug (Ref) Wenn Sie ein modernes Framework zum Erstellen von REST-APIs erlernen m\u00f6chten, schauen Sie sich FastAPI an [ ] Es ist schnell, einfach zu verwenden und leicht zu erlernen [ ] Wir haben zu FastAPI f\u00fcr unsere APIs gewechselt [ ] Ich denke, es wird Ihnen gefallen [ ] Ines Montani - Matthew Honnibal - Gr\u00fcnder von Explosion AI - Autoren von spaCy (Ref) - (Ref) Falls irgendjemand eine Produktions-Python-API erstellen m\u00f6chte, kann ich FastAPI w\u00e4rmstens empfehlen",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "Es ist wundersch\u00f6n konzipiert, einfach zu verwenden und hoch skalierbar; es ist zu einer Schl\u00fcsselkomponente in unserer API-First-Entwicklungsstrategie geworden und treibt viele Automatisierungen und Dienste an, wie etwa unseren virtuellen TAC-Ingenieur Deon Pillsbury - Cisco (Ref) Typer, das FastAPI der CLIs Wenn Sie eine CLI-Anwendung f\u00fcr das Terminal erstellen, anstelle einer Web-API, schauen Sie sich Typer an Typer ist die kleine Schwester von FastAPI Und es soll das FastAPI der CLIs sein",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "Anforderungen FastAPI steht auf den Schultern von Giganten: Starlette f\u00fcr die Webanteile Pydantic f\u00fcr die Datenanteile Installation  pip install fastapi --- 100 Sie ben\u00f6tigen au\u00dferdem einen ASGI-Server F\u00fcr die Produktumgebung beispielsweise Uvicorn oder Hypercorn pip install \"uvicorn[standard]\" --- 100 Beispiel Erstellung Erstellen Sie eine Datei main py mit: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Oder verwenden Sie async def Wenn Ihr Code async / await verwendet, benutzen Sie async def: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Anmerkung: Wenn Sie das nicht kennen, schauen Sie sich den Abschnitt In Eile \u00fcber async und await in der Dokumentation an Starten F\u00fchren Sie den Server aus:  uvicorn main:app --reload INFO: Uvicorn running on http://127 0 0 1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "INFO: Application startup complete Was macht der Befehl uvicorn main:app --reload Der Befehl uvicorn main:app bezieht sich auf: main: die Datei main py (das Python-Modul) app: das Objekt, das innerhalb von main py mit der Zeile app = FastAPI() erzeugt wurde --reload: l\u00e4sst den Server nach Code\u00e4nderungen neu starten Tun Sie das nur w\u00e4hrend der Entwicklung Testen \u00d6ffnen Sie Ihren Browser unter http://127 0 0 1:8000/items/5 q=somequery",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "Sie erhalten die JSON-Response: {\"item_id\": 5, \"q\": \"somequery\"} Damit haben Sie bereits eine API erstellt, welche: HTTP-Anfragen auf den Pfaden / und /items/{item_id} entgegennimmt Beide Pfade erhalten GET Operationen (auch bekannt als HTTP Methoden) Der Pfad /items/{item_id} hat einen Pfadparameter item_id, der ein int sein sollte Der Pfad /items/{item_id} hat einen optionalen str Query Parameter q Interaktive API-Dokumentation Gehen Sie nun auf http://127 0 0 1:8000/docs",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "Sie sehen die automatische interaktive API-Dokumentation (bereitgestellt von Swagger UI): Alternative API-Dokumentation Gehen Sie jetzt auf http://127 0 0 1:8000/redoc Sie sehen die alternative automatische Dokumentation (bereitgestellt von ReDoc): Beispiel Aktualisierung \u00c4ndern Sie jetzt die Datei main py, um den Body einer PUT-Anfrage zu empfangen Deklarieren Sie den Body mithilfe von Standard-Python-Typen, dank Pydantic",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "name, \"item_id\": item_id} Der Server sollte automatisch neu geladen werden (weil Sie oben --reload zum Befehl uvicorn hinzugef\u00fcgt haben) Aktualisierung der interaktiven API-Dokumentation Gehen Sie jetzt auf http://127 0 0 1:8000/docs",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "Die interaktive API-Dokumentation wird automatisch aktualisiert, einschlie\u00dflich des neuen Bodys: Klicken Sie auf die Taste Try it out, damit k\u00f6nnen Sie die Parameter ausf\u00fcllen und direkt mit der API interagieren: Klicken Sie dann auf die Taste Execute, die Benutzeroberfl\u00e4che wird mit Ihrer API kommunizieren, sendet die Parameter, holt die Ergebnisse und zeigt sie auf dem Bildschirm an: Aktualisierung der alternativen API-Dokumentation Und nun gehen Sie auf http://127 0 0 1:8000/redoc",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "Die alternative Dokumentation wird ebenfalls den neuen Abfrageparameter und -inhalt widerspiegeln: Zusammenfassung Zusammengefasst deklarieren Sie einmal die Typen von Parametern, Body, etc als Funktionsparameter Das machen Sie mit modernen Standard-Python-Typen Sie m\u00fcssen keine neue Syntax, Methoden oder Klassen einer bestimmten Bibliothek usw lernen Nur Standard-Python+ Zum Beispiel f\u00fcr ein int: item_id: int oder f\u00fcr ein komplexeres Item-Modell: item: Item",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "und mit dieser einen Deklaration erhalten Sie: Editor-Unterst\u00fctzung, einschlie\u00dflich: Code-Vervollst\u00e4ndigung Typpr\u00fcfungen Validierung von Daten: Automatische und eindeutige Fehler, wenn die Daten ung\u00fcltig sind Validierung auch f\u00fcr tief verschachtelte JSON-Objekte Konvertierung von Eingabedaten: Aus dem Netzwerk kommend, zu Python-Daten und -Typen Lesen von: JSON Pfad-Parametern Abfrage-Parametern Cookies Header-Feldern Formularen Dateien",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "Konvertierung von Ausgabedaten: Konvertierung von Python-Daten und -Typen zu Netzwerkdaten (als JSON): Konvertieren von Python-Typen (str, int, float, bool, list, usw ) Datetime-Objekte UUID-Objekte Datenbankmodelle und viele mehr Automatische interaktive API-Dokumentation, einschlie\u00dflich 2 alternativer Benutzeroberfl\u00e4chen: Swagger UI ReDoc Um auf das vorherige Codebeispiel zur\u00fcckzukommen, FastAPI wird: \u00dcberpr\u00fcfen, dass es eine item_id im Pfad f\u00fcr GET- und PUT-Anfragen gibt",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "\u00dcberpr\u00fcfen, ob die item_id vom Typ int f\u00fcr GET- und PUT-Anfragen ist Falls nicht, wird dem Client ein n\u00fctzlicher, eindeutiger Fehler angezeigt Pr\u00fcfen, ob es einen optionalen Abfrageparameter namens q (wie in http://127 0 0 1:8000/items/foo q=somequery) f\u00fcr GET-Anfragen gibt Da der q-Parameter mit = None deklariert ist, ist er optional Ohne das None w\u00e4re er erforderlich (wie der Body im Fall von PUT)",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        },
        {
          "content": "Bei PUT-Anfragen an /items/{item_id} den Body als JSON lesen: Pr\u00fcfen, ob er ein erforderliches Attribut name hat, das ein str sein muss Pr\u00fcfen, ob er ein erforderliches Attribut price hat, das ein float sein muss Pr\u00fcfen, ob er ein optionales Attribut is_offer hat, das ein bool sein muss, falls vorhanden All dies w\u00fcrde auch f\u00fcr tief verschachtelte JSON-Objekte funktionieren Automatisch von und nach JSON konvertieren",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_22"
        },
        {
          "content": "Alles mit OpenAPI dokumentieren, welches verwendet werden kann von: Interaktiven Dokumentationssystemen Automatisch Client-Code generierenden Systemen f\u00fcr viele Sprachen Zwei interaktive Dokumentation-Webschnittstellen direkt zur Verf\u00fcgung stellen Wir haben nur an der Oberfl\u00e4che gekratzt, aber Sie bekommen schon eine Vorstellung davon, wie das Ganze funktioniert Versuchen Sie, diese Zeile zu \u00e4ndern: return {\"item_name\": item name, \"item_id\": item_id} von: \"item_name\": item name zu:",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_23"
        },
        {
          "content": "\"item_price\": item price und sehen Sie, wie Ihr Editor die Attribute automatisch ausf\u00fcllt und ihre Typen kennt: F\u00fcr ein vollst\u00e4ndigeres Beispiel, mit weiteren Funktionen, siehe das Tutorial - Benutzerhandbuch Spoiler-Alarm: Das Tutorial - Benutzerhandbuch enth\u00e4lt: Deklaration von Parametern von anderen verschiedenen Stellen wie: Header-Felder, Cookies, Formularfelder und Dateien Wie man Validierungseinschr\u00e4nkungen wie maximum_length oder regex setzt",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_24"
        },
        {
          "content": "Ein sehr leistungsf\u00e4higes und einfach zu bedienendes System f\u00fcr Dependency Injection Sicherheit und Authentifizierung, einschlie\u00dflich Unterst\u00fctzung f\u00fcr OAuth2 mit JWT-Tokens und HTTP-Basic-Authentifizierung Fortgeschrittenere (aber ebenso einfache) Techniken zur Deklaration tief verschachtelter JSON-Modelle (dank Pydantic) GraphQL Integration mit Strawberry und anderen Bibliotheken",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_25"
        },
        {
          "content": "Viele zus\u00e4tzliche Funktionen (dank Starlette) wie: WebSockets extrem einfache Tests auf Basis von httpx und pytest CORS Cookie Sessions und mehr Performanz Unabh\u00e4ngige TechEmpower-Benchmarks zeigen FastAPI-Anwendungen, die unter Uvicorn laufen, als eines der schnellsten verf\u00fcgbaren Python-Frameworks, nur noch hinter Starlette und Uvicorn selbst (intern von FastAPI verwendet) Um mehr dar\u00fcber zu erfahren, siehe den Abschnitt Benchmarks",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_26"
        },
        {
          "content": "Optionale Abh\u00e4ngigkeiten Wird von Pydantic verwendet: email-validator - f\u00fcr E-Mail-Validierung pydantic-settings - f\u00fcr die Verwaltung von Einstellungen pydantic-extra-types - f\u00fcr zus\u00e4tzliche Typen, mit Pydantic zu verwenden Wird von Starlette verwendet: httpx - erforderlich, wenn Sie den TestClient verwenden m\u00f6chten jinja2 - erforderlich, wenn Sie die Standardkonfiguration f\u00fcr Templates verwenden m\u00f6chten python-multipart - erforderlich, wenn Sie Formulare mittels request form() parsen m\u00f6chten",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_27"
        },
        {
          "content": "itsdangerous - erforderlich f\u00fcr SessionMiddleware Unterst\u00fctzung pyyaml - erforderlich f\u00fcr Starlette's SchemaGenerator Unterst\u00fctzung (Sie brauchen das wahrscheinlich nicht mit FastAPI) ujson - erforderlich, wenn Sie UJSONResponse verwenden m\u00f6chten Wird von FastAPI / Starlette verwendet: uvicorn - f\u00fcr den Server, der Ihre Anwendung l\u00e4dt und serviert orjson - erforderlich, wenn Sie ORJSONResponse verwenden m\u00f6chten Sie k\u00f6nnen diese alle mit pip install \"fastapi[all]\" installieren",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_28"
        },
        {
          "content": "Lizenz Dieses Projekt ist unter den Bedingungen der MIT-Lizenz lizenziert Zur\u00fcck zum Seitenanfang",
          "url": "https://fastapi.tiangolo.com/de/",
          "library": "fastapi",
          "chunk_id": "fastapi_29"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/es/",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI Tabla de contenidos Sponsors Opiniones Typer, el FastAPI de las CLIs Requisitos Instalaci\u00f3n Ejemplo Cr\u00e9alo C\u00f3rrelo Rev\u00edsalo Documentaci\u00f3n interactiva de la API Documentaci\u00f3n de API Alternativa Actualizaci\u00f3n del Ejemplo Actualizaci\u00f3n de la Documentaci\u00f3n Interactiva de la API Actualizaci\u00f3n de la Documentaci\u00f3n Alternativa de la API Resumen Rendimiento Dependencias Dependencias standard Sin Dependencias standard Dependencias Opcionales Adicionales Licencia Funcionalidades Aprende Aprende Introducci\u00f3n a Tipos en Python Concurrencia y async / await Variables de Entorno Entornos Virtuales Tutorial - Gu\u00eda del Usuario Tutorial - Gu\u00eda del Usuario Primeros Pasos Par\u00e1metros de Path Par\u00e1metros de Query Request Body Par\u00e1metros de Query y Validaciones de String Par\u00e1metros de Path y Validaciones Num\u00e9ricas Modelos de Par\u00e1metros Query Cuerpo - M\u00faltiples Par\u00e1metros Body - Campos Cuerpo - Modelos Anidados Declarar Ejemplos de Request Tipos de Datos Extra Par\u00e1metros de Cookie Par\u00e1metros de Header Modelos de Cookies Modelos de Par\u00e1metros de Header Modelo de Response - Tipo de Retorno Modelos Extra C\u00f3digo de Estado del Response Form Data Modelos de Formulario Archivos de Request Request Forms and Files Manejo de Errores Configuraci\u00f3n de Path Operation JSON Compatible Encoder Cuerpo - Actualizaciones Dependencias Dependencias Clases como dependencias Sub-dependencias Dependencias en decoradores de path operation Dependencias Globales Dependencias con yield Seguridad Seguridad Seguridad - Primeros pasos Obtener Usuario Actual Simple OAuth2 con Password y Bearer OAuth2 con Password (y hashing), Bearer con tokens JWT Middleware CORS (Cross-Origin Resource Sharing) Bases de Datos SQL (Relacionales) Aplicaciones m\u00e1s grandes - M\u00faltiples archivos Tareas en Segundo Plano Metadata y URLs de Docs Archivos Est\u00e1ticos Testing Depuraci\u00f3n Gu\u00eda avanzada del usuario Gu\u00eda avanzada del usuario Configuraci\u00f3n Avanzada de Path Operation C\u00f3digos de Estado Adicionales Devolver una Response Directamente Response Personalizado - HTML, Stream, Archivo, otros Responses Adicionales en OpenAPI Cookies de Response Response Headers Response - Cambiar C\u00f3digo de Estado Dependencias Avanzadas Seguridad Avanzada Seguridad Avanzada Scopes de OAuth2 HTTP Basic Auth Usar el Request Directamente Usando Dataclasses Middleware Avanzado Sub Aplicaciones - Mounts Detr\u00e1s de un Proxy Plantillas WebSockets Eventos de Lifespan Probando WebSockets Testing Events: startup - shutdown Probando Dependencias con Overrides Tests As\u00edncronos Configuraciones y Variables de Entorno OpenAPI Callbacks Webhooks de OpenAPI Incluyendo WSGI - Flask, Django, otros Genera Clientes FastAPI CLI Despliegue Despliegue Sobre las versiones de FastAPI Sobre HTTPS Ejecutar un Servidor Manualmente Conceptos de Implementaci\u00f3n Despliega FastAPI en Proveedores de Nube Servidores Workers - Uvicorn con Workers FastAPI en Contenedores - Docker How To - Recetas How To - Recetas General - C\u00f3mo Hacer - Recetas GraphQL Clase personalizada de Request y APIRoute OpenAPI Condicional Extender OpenAPI Separaci\u00f3n de Esquemas OpenAPI para Entrada y Salida o No Recursos Est\u00e1ticos Personalizados para la Docs UI (Self-Hosting) Configurar Swagger UI Probando una Base de Datos Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Recursos Recursos Ayuda a FastAPI - Consigue Ayuda Development - Contributing Plantilla Full Stack FastAPI External Links and Articles FastAPI and friends newsletter Repository Management Tasks Acerca de Acerca de Alternativas, Inspiraci\u00f3n y Comparaciones Historia, Dise\u00f1o y Futuro Benchmarks Repository Management Release Notes Tabla de contenidos Sponsors Opiniones Typer, el FastAPI de las CLIs Requisitos Instalaci\u00f3n Ejemplo Cr\u00e9alo C\u00f3rrelo Rev\u00edsalo Documentaci\u00f3n interactiva de la API Documentaci\u00f3n de API Alternativa Actualizaci\u00f3n del Ejemplo Actualizaci\u00f3n de la Documentaci\u00f3n Interactiva de la API Actualizaci\u00f3n de la Documentaci\u00f3n Alternativa de la API Resumen Rendimiento Dependencias Dependencias standard Sin Dependencias standard Dependencias Opcionales Adicionales Licencia FastAPI FastAPI framework, alto rendimiento, f\u00e1cil de aprender, r\u00e1pido de programar, listo para producci\u00f3n Documentaci\u00f3n: https://fastapi.tiangolo.com C\u00f3digo Fuente: https://github.com/fastapi/fastapi FastAPI es un framework web moderno, r\u00e1pido (de alto rendimiento), para construir APIs con Python basado en las anotaciones de tipos est\u00e1ndar de Python. Las caracter\u00edsticas clave son: R\u00e1pido: Muy alto rendimiento, a la par con NodeJS y Go (gracias a Starlette y Pydantic). Uno de los frameworks Python m\u00e1s r\u00e1pidos disponibles. R\u00e1pido de programar: Aumenta la velocidad para desarrollar funcionalidades en aproximadamente un 200 a 300. * Menos bugs: Reduce en aproximadamente un 40 los errores inducidos por humanos (desarrolladores). * Intuitivo: Gran soporte para editores. Autocompletado en todas partes. Menos tiempo depurando. F\u00e1cil: Dise\u00f1ado para ser f\u00e1cil de usar y aprender. Menos tiempo leyendo documentaci\u00f3n. Corto: Minimiza la duplicaci\u00f3n de c\u00f3digo. M\u00faltiples funcionalidades desde cada declaraci\u00f3n de par\u00e1metro. Menos bugs. Robusto: Obt\u00e9n c\u00f3digo listo para producci\u00f3n. Con documentaci\u00f3n interactiva autom\u00e1tica. Basado en est\u00e1ndares: Basado (y completamente compatible) con los est\u00e1ndares abiertos para APIs: OpenAPI (anteriormente conocido como Swagger) y JSON Schema. * estimaci\u00f3n basada en pruebas con un equipo de desarrollo interno, construyendo aplicaciones de producci\u00f3n. Sponsors Otros sponsors Opiniones \"[...] Estoy usando FastAPI un mont\u00f3n estos d\u00edas. [...] De hecho, estoy planeando usarlo para todos los servicios de ML de mi equipo en Microsoft. Algunos de ellos se est\u00e1n integrando en el n\u00facleo del producto Windows y algunos productos de Office.\" Kabir Khan - Microsoft (ref) \"Adoptamos el paquete FastAPI para crear un servidor REST que pueda ser consultado para obtener predicciones. [para Ludwig]\" Piero Molino, Yaroslav Dudin, y Sai Sumanth Miryala - Uber (ref) \"Netflix se complace en anunciar el lanzamiento de c\u00f3digo abierto de nuestro framework de orquestaci\u00f3n de gesti\u00f3n de crisis: Dispatch! [construido con FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Estoy s\u00faper emocionado con FastAPI. Es tan divertido!\" Brian Okken - host del podcast Python Bytes (ref) \"Honestamente, lo que has construido parece s\u00faper s\u00f3lido y pulido. En muchos aspectos, es lo que quer\u00eda que Hug fuera; es realmente inspirador ver a alguien construir eso.\" Timothy Crosley - creador de Hug (ref) \"Si est\u00e1s buscando aprender un framework moderno para construir APIs REST, \u00e9chale un vistazo a FastAPI [...] Es r\u00e1pido, f\u00e1cil de usar y f\u00e1cil de aprender [...]\" \"Nos hemos cambiado a FastAPI para nuestras APIs [...] Creo que te gustar\u00e1 [...]\" Ines Montani - Matthew Honnibal - fundadores de Explosion AI - creadores de spaCy (ref) - (ref) \"Si alguien est\u00e1 buscando construir una API de Python para producci\u00f3n, altamente recomendar\u00eda FastAPI. Est\u00e1 hermosamente dise\u00f1ado, es simple de usar y altamente escalable, se ha convertido en un componente clave en nuestra estrategia de desarrollo API primero y est\u00e1 impulsando muchas automatizaciones y servicios como nuestro Ingeniero Virtual TAC.\" Deon Pillsbury - Cisco (ref) Typer, el FastAPI de las CLIs Si est\u00e1s construyendo una aplicaci\u00f3n de CLI para ser usada en el terminal en lugar de una API web, revisa Typer. Typer es el hermano peque\u00f1o de FastAPI. Y est\u00e1 destinado a ser el FastAPI de las CLIs.   Requisitos FastAPI se apoya en hombros de gigantes: Starlette para las partes web. Pydantic para las partes de datos. Instalaci\u00f3n Crea y activa un entorno virtual y luego instala FastAPI:  pip install \"fastapi[standard]\" --- 100 Nota: Aseg\u00farate de poner \"fastapi[standard]\" entre comillas para asegurar que funcione en todas las terminales. Ejemplo Cr\u00e9alo Crea un archivo main.py con: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} O usa async def... Si tu c\u00f3digo usa async / await, usa async def: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Nota: Si no lo sabes, revisa la secci\u00f3n \"Con prisa?\" sobre async y await en la documentaci\u00f3n. C\u00f3rrelo Corre el servidor con:  fastapi dev main.py  FastAPI CLI - Development mode     Serving at: http://127.0.0.1:8000     API docs: http://127.0.0.1:8000/docs     Running in development mode, for production use:     fastapi run     INFO: Will watch for changes in these directories: ['/home/user/code/awesomeapp'] INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [2248755] using WatchFiles INFO: Started server process [2248757] INFO: Waiting for application startup. INFO: Application startup complete. Acerca del comando fastapi dev main.py... El comando fastapi dev lee tu archivo main.py, detecta la app FastAPI en \u00e9l y arranca un servidor usando Uvicorn. Por defecto, fastapi dev comenzar\u00e1 con auto-recarga habilitada para el desarrollo local. Puedes leer m\u00e1s sobre esto en la documentaci\u00f3n del CLI de FastAPI. Rev\u00edsalo Abre tu navegador en http://127.0.0.1:8000/items/5?q=somequery. Ver\u00e1s el response JSON como: {\"item_id\": 5, \"q\": \"somequery\"} Ya creaste una API que: Recibe requests HTTP en los paths / y /items/{item_id}. Ambos paths toman operaciones GET (tambi\u00e9n conocidas como m\u00e9todos HTTP). El path /items/{item_id} tiene un par\u00e1metro de path item_id que debe ser un int. El path /items/{item_id} tiene un par\u00e1metro de query q opcional que es un str. Documentaci\u00f3n interactiva de la API Ahora ve a http://127.0.0.1:8000/docs. Ver\u00e1s la documentaci\u00f3n interactiva autom\u00e1tica de la API (proporcionada por Swagger UI): Documentaci\u00f3n de API Alternativa Y ahora, ve a http://127.0.0.1:8000/redoc. Ver\u00e1s la documentaci\u00f3n alternativa autom\u00e1tica (proporcionada por ReDoc): Actualizaci\u00f3n del Ejemplo Ahora modifica el archivo main.py para recibir un body desde un request PUT. Declara el body usando tipos est\u00e1ndar de Python, gracias a Pydantic. from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} El servidor fastapi dev deber\u00eda recargarse autom\u00e1ticamente. Actualizaci\u00f3n de la Documentaci\u00f3n Interactiva de la API Ahora ve a http://127.0.0.1:8000/docs. La documentaci\u00f3n interactiva de la API se actualizar\u00e1 autom\u00e1ticamente, incluyendo el nuevo body: Haz clic en el bot\u00f3n \"Try it out\", te permite llenar los par\u00e1metros e interactuar directamente con la API: Luego haz clic en el bot\u00f3n \"Execute\", la interfaz de usuario se comunicar\u00e1 con tu API, enviar\u00e1 los par\u00e1metros, obtendr\u00e1 los resultados y los mostrar\u00e1 en la pantalla: Actualizaci\u00f3n de la Documentaci\u00f3n Alternativa de la API Y ahora, ve a http://127.0.0.1:8000/redoc. La documentaci\u00f3n alternativa tambi\u00e9n reflejar\u00e1 el nuevo par\u00e1metro de query y body: Resumen En resumen, declaras una vez los tipos de par\u00e1metros, body, etc. como par\u00e1metros de funci\u00f3n. Lo haces con tipos est\u00e1ndar modernos de Python. No tienes que aprender una nueva sintaxis, los m\u00e9todos o clases de un paquete espec\u00edfico, etc. Solo Python est\u00e1ndar. Por ejemplo, para un int: item_id: int o para un modelo Item m\u00e1s complejo: item: Item ...y con esa \u00fanica declaraci\u00f3n obtienes: Soporte para editores, incluyendo: Autocompletado. Chequeo de tipos. Validaci\u00f3n de datos: Errores autom\u00e1ticos y claros cuando los datos son inv\u00e1lidos. Validaci\u00f3n incluso para objetos JSON profundamente anidados. Conversi\u00f3n de datos de entrada: de la red a los datos y tipos de Python. Leyendo desde: JSON. Par\u00e1metros de path. Par\u00e1metros de query. Cookies. Headers. Forms. Archivos. Conversi\u00f3n de datos de salida: convirtiendo de datos y tipos de Python a datos de red (como JSON): Convertir tipos de Python (str, int, float, bool, list, etc). Objetos datetime. Objetos UUID. Modelos de base de datos. ...y muchos m\u00e1s. Documentaci\u00f3n interactiva autom\u00e1tica de la API, incluyendo 2 interfaces de usuario alternativas: Swagger UI. ReDoc. Volviendo al ejemplo de c\u00f3digo anterior, FastAPI: Validar\u00e1 que haya un item_id en el path para requests GET y PUT. Validar\u00e1 que el item_id sea del tipo int para requests GET y PUT. Si no lo es, el cliente ver\u00e1 un error \u00fatil y claro. Comprobar\u00e1 si hay un par\u00e1metro de query opcional llamado q (como en http://127.0.0.1:8000/items/foo?q=somequery) para requests GET. Como el par\u00e1metro q est\u00e1 declarado con = None, es opcional. Sin el None ser\u00eda requerido (como lo es el body en el caso con PUT). Para requests PUT a /items/{item_id}, leer\u00e1 el body como JSON: Comprobar\u00e1 que tiene un atributo requerido name que debe ser un str. Comprobar\u00e1 que tiene un atributo requerido price que debe ser un float. Comprobar\u00e1 que tiene un atributo opcional is_offer, que debe ser un bool, si est\u00e1 presente. Todo esto tambi\u00e9n funcionar\u00eda para objetos JSON profundamente anidados. Convertir\u00e1 de y a JSON autom\u00e1ticamente. Documentar\u00e1 todo con OpenAPI, que puede ser usado por: Sistemas de documentaci\u00f3n interactiva. Sistemas de generaci\u00f3n autom\u00e1tica de c\u00f3digo cliente, para muchos lenguajes. Proporcionar\u00e1 2 interfaces web de documentaci\u00f3n interactiva directamente. Solo tocamos los conceptos b\u00e1sicos, pero ya te haces una idea de c\u00f3mo funciona todo. Intenta cambiar la l\u00ednea con: return {\"item_name\": item.name, \"item_id\": item_id} ...desde: ... \"item_name\": item.name ... ...a: ... \"item_price\": item.price ... ...y observa c\u00f3mo tu editor autocompleta los atributos y conoce sus tipos: Para un ejemplo m\u00e1s completo incluyendo m\u00e1s funcionalidades, ve al Tutorial - Gu\u00eda del Usuario. Alerta de spoilers: el tutorial - gu\u00eda del usuario incluye: Declaraci\u00f3n de par\u00e1metros desde otros lugares diferentes como: headers, cookies, campos de formulario y archivos. C\u00f3mo establecer restricciones de validaci\u00f3n como maximum_length o regex. Un sistema de Inyecci\u00f3n de Dependencias muy poderoso y f\u00e1cil de usar. Seguridad y autenticaci\u00f3n, incluyendo soporte para OAuth2 con tokens JWT y autenticaci\u00f3n HTTP Basic. T\u00e9cnicas m\u00e1s avanzadas (pero igualmente f\u00e1ciles) para declarar modelos JSON profundamente anidados (gracias a Pydantic). Integraci\u00f3n con GraphQL usando Strawberry y otros paquetes. Muchas funcionalidades extra (gracias a Starlette) como: WebSockets pruebas extremadamente f\u00e1ciles basadas en HTTPX y pytest CORS Sesiones de Cookies ...y m\u00e1s. Rendimiento Benchmarks independientes de TechEmpower muestran aplicaciones FastAPI ejecut\u00e1ndose bajo Uvicorn como uno de los frameworks Python m\u00e1s r\u00e1pidos disponibles, solo por debajo de Starlette y Uvicorn (usados internamente por FastAPI). (*) Para entender m\u00e1s sobre esto, ve la secci\u00f3n Benchmarks. Dependencias FastAPI depende de Pydantic y Starlette. Dependencias standard Cuando instalas FastAPI con pip install \"fastapi[standard]\" viene con el grupo standard de dependencias opcionales: Usadas por Pydantic: email-validator - para validaci\u00f3n de correos electr\u00f3nicos. Usadas por Starlette: httpx - Requerido si deseas usar el TestClient. jinja2 - Requerido si deseas usar la configuraci\u00f3n de plantilla predeterminada. python-multipart - Requerido si deseas soportar \"parsing\" de forms, con request.form(). Usadas por FastAPI / Starlette: uvicorn - para el servidor que carga y sirve tu aplicaci\u00f3n. Esto incluye uvicorn[standard], que incluye algunas dependencias (por ejemplo, uvloop) necesarias para servir con alto rendimiento. fastapi-cli - para proporcionar el comando fastapi. Sin Dependencias standard Si no deseas incluir las dependencias opcionales standard, puedes instalar con pip install fastapi en lugar de pip install \"fastapi[standard]\". Dependencias Opcionales Adicionales Existen algunas dependencias adicionales que podr\u00edas querer instalar. Dependencias opcionales adicionales de Pydantic: pydantic-settings - para la gesti\u00f3n de configuraciones. pydantic-extra-types - para tipos extra para ser usados con Pydantic. Dependencias opcionales adicionales de FastAPI: orjson - Requerido si deseas usar ORJSONResponse. ujson - Requerido si deseas usar UJSONResponse. Licencia Este proyecto tiene licencia bajo los t\u00e9rminos de la licencia MIT. Volver al principio",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install \"fastapi[standard]\"\n\n---> 100%",
        "$ pip install \"fastapi[standard]\"\n\n---> 100%",
        "\"fastapi[standard]\"",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "$ fastapi dev main.py\n\n \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 FastAPI CLI - Development mode \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n \u2502                                                     \u2502\n \u2502  Serving at: http://127.0.0.1:8000                  \u2502\n \u2502                                                     \u2502\n \u2502  API docs: http://127.0.0.1:8000/docs               \u2502\n \u2502                                                     \u2502\n \u2502  Running in development mode, for production use:   \u2502\n \u2502                                                     \u2502\n \u2502  fastapi run                                        \u2502\n \u2502                                                     \u2502\n \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ fastapi dev main.py\n\n \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 FastAPI CLI - Development mode \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n \u2502                                                     \u2502\n \u2502  Serving at: http://127.0.0.1:8000                  \u2502\n \u2502                                                     \u2502\n \u2502  API docs: http://127.0.0.1:8000/docs               \u2502\n \u2502                                                     \u2502\n \u2502  Running in development mode, for production use:   \u2502\n \u2502                                                     \u2502\n \u2502  fastapi run                                        \u2502\n \u2502                                                     \u2502\n \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "fastapi dev main.py",
        "fastapi dev",
        "fastapi dev",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "fastapi dev",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "pip install \"fastapi[standard]\"",
        "email-validator",
        "python-multipart",
        "request.form()",
        "uvicorn[standard]",
        "fastapi-cli",
        "pip install fastapi",
        "pip install \"fastapi[standard]\"",
        "pydantic-settings",
        "pydantic-extra-types",
        "ORJSONResponse",
        "UJSONResponse"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI Tabla de contenidos Sponsors Opiniones Typer, el FastAPI de las CLIs Requisitos Instalaci\u00f3n Ejemplo Cr\u00e9alo C\u00f3rrelo Rev\u00edsalo Documentaci\u00f3n interactiva de la API Documentaci\u00f3n de API Alternativa Actualizaci\u00f3n del Ejemplo Actualizaci\u00f3n de la Documentaci\u00f3n Interactiva de la API Actualizaci\u00f3n de la Documentaci\u00f3n Alternativa de la API Resumen Rendimiento Dependencias Dependencias standard Sin Dependencias standard Dependencias Opcionales Adicionales Licencia Funcionalidades Aprende Aprende Introducci\u00f3n a Tipos en Python Concurrencia y async / await Variables de Entorno Entornos Virtuales Tutorial - Gu\u00eda del Usuario Tutorial - Gu\u00eda del Usuario Primeros Pasos Par\u00e1metros de Path Par\u00e1metros de Query Request Body Par\u00e1metros de Query y Validaciones de String Par\u00e1metros de Path y Validaciones Num\u00e9ricas Modelos de Par\u00e1metros Query Cuerpo - M\u00faltiples Par\u00e1metros Body - Campos Cuerpo - Modelos Anidados Declarar Ejemplos de Request Tipos de Datos Extra Par\u00e1metros de Cookie Par\u00e1metros de Header Modelos de Cookies Modelos de Par\u00e1metros de Header Modelo de Response - Tipo de Retorno Modelos Extra C\u00f3digo de Estado del Response Form Data Modelos de Formulario Archivos de Request Request Forms and Files Manejo de Errores Configuraci\u00f3n de Path Operation JSON Compatible Encoder Cuerpo - Actualizaciones Dependencias Dependencias Clases como dependencias Sub-dependencias Dependencias en decoradores de path operation Dependencias Globales Dependencias con yield Seguridad Seguridad Seguridad - Primeros pasos Obtener Usuario Actual Simple OAuth2 con Password y Bearer OAuth2 con Password (y hashing), Bearer con tokens JWT Middleware CORS (Cross-Origin Resource Sharing) Bases de Datos SQL (Relacionales) Aplicaciones m\u00e1s grandes - M\u00faltiples archivos Tareas en Segundo Plano Metadata y URLs de Docs Archivos Est\u00e1ticos Testing Depuraci\u00f3n Gu\u00eda avanzada del usuario Gu\u00eda avanzada del usuario Configuraci\u00f3n Avanzada de Path Operation C\u00f3digos de Estado Adicionales Devolver una Response Directamente Response Personalizado - HTML, Stream, Archivo, otros Responses Adicionales en OpenAPI Cookies de Response Response Headers Response - Cambiar C\u00f3digo de Estado Dependencias Avanzadas Seguridad Avanzada Seguridad Avanzada Scopes de OAuth2 HTTP Basic Auth Usar el Request Directamente Usando Dataclasses Middleware Avanzado Sub Aplicaciones - Mounts Detr\u00e1s de un Proxy Plantillas WebSockets Eventos de Lifespan Probando WebSockets Testing Events: startup - shutdown Probando Dependencias con Overrides Tests As\u00edncronos Configuraciones y Variables de Entorno OpenAPI Callbacks Webhooks de OpenAPI Incluyendo WSGI - Flask, Django, otros Genera Clientes FastAPI CLI Despliegue Despliegue Sobre las versiones de FastAPI Sobre HTTPS Ejecutar un Servidor Manualmente Conceptos de Implementaci\u00f3n Despliega FastAPI en Proveedores de Nube Servidores Workers - Uvicorn con Workers FastAPI en Contenedores - Docker How To - Recetas How To - Recetas General - C\u00f3mo Hacer - Recetas GraphQL Clase personalizada de Request y APIRoute OpenAPI Condicional Extender OpenAPI Separaci\u00f3n de Esquemas OpenAPI para Entrada y Salida o No Recursos Est\u00e1ticos Personalizados para la Docs UI (Self-Hosting) Configurar Swagger UI Probando una Base de Datos Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Recursos Recursos Ayuda a FastAPI - Consigue Ayuda Development - Contributing Plantilla Full Stack FastAPI External Links and Articles FastAPI and friends newsletter Repository Management Tasks Acerca de Acerca de Alternativas, Inspiraci\u00f3n y Comparaciones Historia, Dise\u00f1o y Futuro Benchmarks Repository Management Release Notes Tabla de contenidos Sponsors Opiniones Typer, el FastAPI de las CLIs Requisitos Instalaci\u00f3n Ejemplo Cr\u00e9alo C\u00f3rrelo Rev\u00edsalo Documentaci\u00f3n interactiva de la API Documentaci\u00f3n de API Alternativa Actualizaci\u00f3n del Ejemplo Actualizaci\u00f3n de la Documentaci\u00f3n Interactiva de la API Actualizaci\u00f3n de la Documentaci\u00f3n Alternativa de la API Resumen Rendimiento Dependencias Dependencias standard Sin Dependencias standard Dependencias Opcionales Adicionales Licencia FastAPI FastAPI framework, alto rendimiento, f\u00e1cil de aprender, r\u00e1pido de programar, listo para producci\u00f3n Documentaci\u00f3n: https://fastapi",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com C\u00f3digo Fuente: https://github com/fastapi/fastapi FastAPI es un framework web moderno, r\u00e1pido (de alto rendimiento), para construir APIs con Python basado en las anotaciones de tipos est\u00e1ndar de Python Las caracter\u00edsticas clave son: R\u00e1pido: Muy alto rendimiento, a la par con NodeJS y Go (gracias a Starlette y Pydantic) Uno de los frameworks Python m\u00e1s r\u00e1pidos disponibles R\u00e1pido de programar: Aumenta la velocidad para desarrollar funcionalidades en aproximadamente un 200 a 300",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "* Menos bugs: Reduce en aproximadamente un 40 los errores inducidos por humanos (desarrolladores) * Intuitivo: Gran soporte para editores Autocompletado en todas partes Menos tiempo depurando F\u00e1cil: Dise\u00f1ado para ser f\u00e1cil de usar y aprender Menos tiempo leyendo documentaci\u00f3n Corto: Minimiza la duplicaci\u00f3n de c\u00f3digo M\u00faltiples funcionalidades desde cada declaraci\u00f3n de par\u00e1metro Menos bugs Robusto: Obt\u00e9n c\u00f3digo listo para producci\u00f3n Con documentaci\u00f3n interactiva autom\u00e1tica",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "Basado en est\u00e1ndares: Basado (y completamente compatible) con los est\u00e1ndares abiertos para APIs: OpenAPI (anteriormente conocido como Swagger) y JSON Schema * estimaci\u00f3n basada en pruebas con un equipo de desarrollo interno, construyendo aplicaciones de producci\u00f3n Sponsors Otros sponsors Opiniones \"[ ] Estoy usando FastAPI un mont\u00f3n estos d\u00edas [ ] De hecho, estoy planeando usarlo para todos los servicios de ML de mi equipo en Microsoft",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "Algunos de ellos se est\u00e1n integrando en el n\u00facleo del producto Windows y algunos productos de Office \" Kabir Khan - Microsoft (ref) \"Adoptamos el paquete FastAPI para crear un servidor REST que pueda ser consultado para obtener predicciones [para Ludwig]\" Piero Molino, Yaroslav Dudin, y Sai Sumanth Miryala - Uber (ref) \"Netflix se complace en anunciar el lanzamiento de c\u00f3digo abierto de nuestro framework de orquestaci\u00f3n de gesti\u00f3n de crisis: Dispatch",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "[construido con FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Estoy s\u00faper emocionado con FastAPI Es tan divertido \" Brian Okken - host del podcast Python Bytes (ref) \"Honestamente, lo que has construido parece s\u00faper s\u00f3lido y pulido En muchos aspectos, es lo que quer\u00eda que Hug fuera; es realmente inspirador ver a alguien construir eso",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "\" Timothy Crosley - creador de Hug (ref) \"Si est\u00e1s buscando aprender un framework moderno para construir APIs REST, \u00e9chale un vistazo a FastAPI [ ] Es r\u00e1pido, f\u00e1cil de usar y f\u00e1cil de aprender [ ]\" \"Nos hemos cambiado a FastAPI para nuestras APIs [ ] Creo que te gustar\u00e1 [ ]\" Ines Montani - Matthew Honnibal - fundadores de Explosion AI - creadores de spaCy (ref) - (ref) \"Si alguien est\u00e1 buscando construir una API de Python para producci\u00f3n, altamente recomendar\u00eda FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "Est\u00e1 hermosamente dise\u00f1ado, es simple de usar y altamente escalable, se ha convertido en un componente clave en nuestra estrategia de desarrollo API primero y est\u00e1 impulsando muchas automatizaciones y servicios como nuestro Ingeniero Virtual TAC \" Deon Pillsbury - Cisco (ref) Typer, el FastAPI de las CLIs Si est\u00e1s construyendo una aplicaci\u00f3n de CLI para ser usada en el terminal en lugar de una API web, revisa Typer Typer es el hermano peque\u00f1o de FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "Y est\u00e1 destinado a ser el FastAPI de las CLIs Requisitos FastAPI se apoya en hombros de gigantes: Starlette para las partes web Pydantic para las partes de datos Instalaci\u00f3n Crea y activa un entorno virtual y luego instala FastAPI:  pip install \"fastapi[standard]\" --- 100 Nota: Aseg\u00farate de poner \"fastapi[standard]\" entre comillas para asegurar que funcione en todas las terminales Ejemplo Cr\u00e9alo Crea un archivo main py con: from typing import Union from fastapi import FastAPI app = FastAPI() app",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "get(\"/\") def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} O usa async def Si tu c\u00f3digo usa async / await, usa async def: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Nota: Si no lo sabes, revisa la secci\u00f3n \"Con prisa \" sobre async y await en la documentaci\u00f3n C\u00f3rrelo Corre el servidor con:  fastapi dev main py  FastAPI CLI - Development mode     Serving at: http://127 0 0 1:8000     API docs: http://127 0 0",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "1:8000/docs     Running in development mode, for production use:     fastapi run     INFO: Will watch for changes in these directories: ['/home/user/code/awesomeapp'] INFO: Uvicorn running on http://127 0 0 1:8000 (Press CTRL+C to quit) INFO: Started reloader process [2248755] using WatchFiles INFO: Started server process [2248757] INFO: Waiting for application startup INFO: Application startup complete Acerca del comando fastapi dev main py El comando fastapi dev lee tu archivo main",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "py, detecta la app FastAPI en \u00e9l y arranca un servidor usando Uvicorn Por defecto, fastapi dev comenzar\u00e1 con auto-recarga habilitada para el desarrollo local Puedes leer m\u00e1s sobre esto en la documentaci\u00f3n del CLI de FastAPI Rev\u00edsalo Abre tu navegador en http://127 0 0 1:8000/items/5 q=somequery Ver\u00e1s el response JSON como: {\"item_id\": 5, \"q\": \"somequery\"} Ya creaste una API que: Recibe requests HTTP en los paths / y /items/{item_id}",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "Ambos paths toman operaciones GET (tambi\u00e9n conocidas como m\u00e9todos HTTP) El path /items/{item_id} tiene un par\u00e1metro de path item_id que debe ser un int El path /items/{item_id} tiene un par\u00e1metro de query q opcional que es un str Documentaci\u00f3n interactiva de la API Ahora ve a http://127 0 0 1:8000/docs Ver\u00e1s la documentaci\u00f3n interactiva autom\u00e1tica de la API (proporcionada por Swagger UI): Documentaci\u00f3n de API Alternativa Y ahora, ve a http://127 0 0 1:8000/redoc",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "Ver\u00e1s la documentaci\u00f3n alternativa autom\u00e1tica (proporcionada por ReDoc): Actualizaci\u00f3n del Ejemplo Ahora modifica el archivo main py para recibir un body desde un request PUT Declara el body usando tipos est\u00e1ndar de Python, gracias a Pydantic from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item name, \"item_id\": item_id} El servidor fastapi dev deber\u00eda recargarse autom\u00e1ticamente Actualizaci\u00f3n de la Documentaci\u00f3n Interactiva de la API Ahora ve a http://127 0 0 1:8000/docs",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "La documentaci\u00f3n interactiva de la API se actualizar\u00e1 autom\u00e1ticamente, incluyendo el nuevo body: Haz clic en el bot\u00f3n \"Try it out\", te permite llenar los par\u00e1metros e interactuar directamente con la API: Luego haz clic en el bot\u00f3n \"Execute\", la interfaz de usuario se comunicar\u00e1 con tu API, enviar\u00e1 los par\u00e1metros, obtendr\u00e1 los resultados y los mostrar\u00e1 en la pantalla: Actualizaci\u00f3n de la Documentaci\u00f3n Alternativa de la API Y ahora, ve a http://127 0 0 1:8000/redoc",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "La documentaci\u00f3n alternativa tambi\u00e9n reflejar\u00e1 el nuevo par\u00e1metro de query y body: Resumen En resumen, declaras una vez los tipos de par\u00e1metros, body, etc como par\u00e1metros de funci\u00f3n Lo haces con tipos est\u00e1ndar modernos de Python No tienes que aprender una nueva sintaxis, los m\u00e9todos o clases de un paquete espec\u00edfico, etc Solo Python est\u00e1ndar Por ejemplo, para un int: item_id: int o para un modelo Item m\u00e1s complejo: item: Item",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "y con esa \u00fanica declaraci\u00f3n obtienes: Soporte para editores, incluyendo: Autocompletado Chequeo de tipos Validaci\u00f3n de datos: Errores autom\u00e1ticos y claros cuando los datos son inv\u00e1lidos Validaci\u00f3n incluso para objetos JSON profundamente anidados Conversi\u00f3n de datos de entrada: de la red a los datos y tipos de Python Leyendo desde: JSON Par\u00e1metros de path Par\u00e1metros de query Cookies Headers Forms Archivos",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "Conversi\u00f3n de datos de salida: convirtiendo de datos y tipos de Python a datos de red (como JSON): Convertir tipos de Python (str, int, float, bool, list, etc) Objetos datetime Objetos UUID Modelos de base de datos y muchos m\u00e1s Documentaci\u00f3n interactiva autom\u00e1tica de la API, incluyendo 2 interfaces de usuario alternativas: Swagger UI ReDoc Volviendo al ejemplo de c\u00f3digo anterior, FastAPI: Validar\u00e1 que haya un item_id en el path para requests GET y PUT",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "Validar\u00e1 que el item_id sea del tipo int para requests GET y PUT Si no lo es, el cliente ver\u00e1 un error \u00fatil y claro Comprobar\u00e1 si hay un par\u00e1metro de query opcional llamado q (como en http://127 0 0 1:8000/items/foo q=somequery) para requests GET Como el par\u00e1metro q est\u00e1 declarado con = None, es opcional Sin el None ser\u00eda requerido (como lo es el body en el caso con PUT)",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        },
        {
          "content": "Para requests PUT a /items/{item_id}, leer\u00e1 el body como JSON: Comprobar\u00e1 que tiene un atributo requerido name que debe ser un str Comprobar\u00e1 que tiene un atributo requerido price que debe ser un float Comprobar\u00e1 que tiene un atributo opcional is_offer, que debe ser un bool, si est\u00e1 presente Todo esto tambi\u00e9n funcionar\u00eda para objetos JSON profundamente anidados Convertir\u00e1 de y a JSON autom\u00e1ticamente Documentar\u00e1 todo con OpenAPI, que puede ser usado por: Sistemas de documentaci\u00f3n interactiva",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_22"
        },
        {
          "content": "Sistemas de generaci\u00f3n autom\u00e1tica de c\u00f3digo cliente, para muchos lenguajes Proporcionar\u00e1 2 interfaces web de documentaci\u00f3n interactiva directamente Solo tocamos los conceptos b\u00e1sicos, pero ya te haces una idea de c\u00f3mo funciona todo Intenta cambiar la l\u00ednea con: return {\"item_name\": item name, \"item_id\": item_id} desde: \"item_name\": item name a: \"item_price\": item price",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_23"
        },
        {
          "content": "y observa c\u00f3mo tu editor autocompleta los atributos y conoce sus tipos: Para un ejemplo m\u00e1s completo incluyendo m\u00e1s funcionalidades, ve al Tutorial - Gu\u00eda del Usuario Alerta de spoilers: el tutorial - gu\u00eda del usuario incluye: Declaraci\u00f3n de par\u00e1metros desde otros lugares diferentes como: headers, cookies, campos de formulario y archivos C\u00f3mo establecer restricciones de validaci\u00f3n como maximum_length o regex Un sistema de Inyecci\u00f3n de Dependencias muy poderoso y f\u00e1cil de usar",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_24"
        },
        {
          "content": "Seguridad y autenticaci\u00f3n, incluyendo soporte para OAuth2 con tokens JWT y autenticaci\u00f3n HTTP Basic T\u00e9cnicas m\u00e1s avanzadas (pero igualmente f\u00e1ciles) para declarar modelos JSON profundamente anidados (gracias a Pydantic) Integraci\u00f3n con GraphQL usando Strawberry y otros paquetes Muchas funcionalidades extra (gracias a Starlette) como: WebSockets pruebas extremadamente f\u00e1ciles basadas en HTTPX y pytest CORS Sesiones de Cookies y m\u00e1s",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_25"
        },
        {
          "content": "Rendimiento Benchmarks independientes de TechEmpower muestran aplicaciones FastAPI ejecut\u00e1ndose bajo Uvicorn como uno de los frameworks Python m\u00e1s r\u00e1pidos disponibles, solo por debajo de Starlette y Uvicorn (usados internamente por FastAPI) (*) Para entender m\u00e1s sobre esto, ve la secci\u00f3n Benchmarks Dependencias FastAPI depende de Pydantic y Starlette",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_26"
        },
        {
          "content": "Dependencias standard Cuando instalas FastAPI con pip install \"fastapi[standard]\" viene con el grupo standard de dependencias opcionales: Usadas por Pydantic: email-validator - para validaci\u00f3n de correos electr\u00f3nicos Usadas por Starlette: httpx - Requerido si deseas usar el TestClient jinja2 - Requerido si deseas usar la configuraci\u00f3n de plantilla predeterminada python-multipart - Requerido si deseas soportar \"parsing\" de forms, con request form()",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_27"
        },
        {
          "content": "Usadas por FastAPI / Starlette: uvicorn - para el servidor que carga y sirve tu aplicaci\u00f3n Esto incluye uvicorn[standard], que incluye algunas dependencias (por ejemplo, uvloop) necesarias para servir con alto rendimiento fastapi-cli - para proporcionar el comando fastapi Sin Dependencias standard Si no deseas incluir las dependencias opcionales standard, puedes instalar con pip install fastapi en lugar de pip install \"fastapi[standard]\"",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_28"
        },
        {
          "content": "Dependencias Opcionales Adicionales Existen algunas dependencias adicionales que podr\u00edas querer instalar Dependencias opcionales adicionales de Pydantic: pydantic-settings - para la gesti\u00f3n de configuraciones pydantic-extra-types - para tipos extra para ser usados con Pydantic Dependencias opcionales adicionales de FastAPI: orjson - Requerido si deseas usar ORJSONResponse ujson - Requerido si deseas usar UJSONResponse Licencia Este proyecto tiene licencia bajo los t\u00e9rminos de la licencia MIT",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_29"
        },
        {
          "content": "Volver al principio",
          "url": "https://fastapi.tiangolo.com/es/",
          "library": "fastapi",
          "chunk_id": "fastapi_30"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/fa/",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI \u0641\u0647\u0631\u0633\u062a \u0645\u0648\u0636\u0648\u0639\u0627\u062a \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc \u0646\u0638\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u062f\u0631 \u0645\u0648\u0631\u062f FastAPI Typer, \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u06cc \u0645\u0639\u0627\u062f\u0644 FastAPI \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0628\u0627 \u0648\u0627\u0633\u0637 \u062e\u0637 \u0641\u0631\u0645\u0627\u0646 \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627 \u0646\u0635\u0628 \u0645\u062b\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u062b\u0627\u0644 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062e\u0644\u0627\u0635\u0647 \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0644\u0627\u06cc\u0633\u0646\u0633 \u0648\u06cc\u0698\u06af\u06cc \u0647\u0627 \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield \u0627\u0645\u0646\u06cc\u062a \u0627\u0645\u0646\u06cc\u062a Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens \u0645\u06cc\u0627\u0646\u0627\u0641\u0632\u0627\u0631 - middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware \u0632\u06cc\u0631 \u0628\u0631\u0646\u0627\u0645\u0647 \u0647\u0627 - \u0627\u062a\u0635\u0627\u0644 Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes \u0641\u0647\u0631\u0633\u062a \u0645\u0648\u0636\u0648\u0639\u0627\u062a \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc \u0646\u0638\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u062f\u0631 \u0645\u0648\u0631\u062f FastAPI Typer, \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u06cc \u0645\u0639\u0627\u062f\u0644 FastAPI \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0628\u0627 \u0648\u0627\u0633\u0637 \u062e\u0637 \u0641\u0631\u0645\u0627\u0646 \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627 \u0646\u0635\u0628 \u0645\u062b\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u062b\u0627\u0644 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062e\u0644\u0627\u0635\u0647 \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0644\u0627\u06cc\u0633\u0646\u0633 FastAPI \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 FastAPI \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0628\u0627\u0644\u0627 \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0622\u0633\u0627\u0646 \u06a9\u062f\u0646\u0648\u06cc\u0633\u06cc \u0633\u0631\u06cc\u0639 \u0622\u0645\u0627\u062f\u0647 \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u0645\u062d\u06cc\u0637 \u067e\u0631\u0648\u062f\u0627\u06a9\u0634\u0646 \u0645\u0633\u062a\u0646\u062f\u0627\u062a: https://fastapi.tiangolo.com \u06a9\u062f \u0645\u0646\u0628\u0639: https://github.com/fastapi/fastapi FastAPI \u06cc\u06a9 \u0648\u0628 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0645\u062f\u0631\u0646 \u0648 \u0633\u0631\u06cc\u0639 (\u0628\u0627 \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0628\u0627\u0644\u0627) \u0628\u0631\u0627\u06cc \u0627\u06cc\u062c\u0627\u062f API\u0647\u0627\u06cc \u0645\u062a\u0646\u0648\u0639 (\u0648\u0628 \u0648\u0628\u0633\u0648\u06a9\u062a \u0648 \u063a\u0628\u0631\u0647) \u0628\u0627 \u0632\u0628\u0627\u0646 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0646\u0633\u062e\u0647 +\u06f3.\u06f6 \u0627\u0633\u062a. \u0627\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0628\u0627 \u0631\u0639\u0627\u06cc\u062a \u06a9\u0627\u0645\u0644 \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u0646\u0648\u0639 \u062f\u0627\u062f\u0647 (Type Hint) \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u0627\u0633\u062a. \u0648\u06cc\u0698\u06af\u06cc\u0647\u0627\u06cc \u06a9\u0644\u06cc\u062f\u06cc \u0627\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0639\u0628\u0627\u0631\u062a\u0646\u062f \u0627\u0632: \u0633\u0631\u0639\u062a: \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0628\u0633\u06cc\u0627\u0631 \u0628\u0627\u0644\u0627 \u0648 \u0642\u0627\u0628\u0644 \u0645\u0642\u0627\u06cc\u0633\u0647 \u0628\u0627 NodeJS \u0648 Go (\u0628\u0627 \u062a\u0634\u06a9\u0631 \u0627\u0632 Starlette \u0648 Pydantic). \u06cc\u06a9\u06cc \u0627\u0632 \u0633\u0631\u06cc\u0639\u062a\u0631\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u0647\u0627\u06cc \u067e\u0627\u06cc\u062a\u0648\u0646\u06cc \u0645\u0648\u062c\u0648\u062f. \u06a9\u062f\u0646\u0648\u06cc\u0633\u06cc \u0633\u0631\u06cc\u0639: \u0627\u0641\u0632\u0627\u06cc\u0634 \u06f2\u06f0\u06f0 \u062a\u0627 \u06f3\u06f0\u06f0 \u062f\u0631\u0635\u062f\u06cc \u0633\u0631\u0639\u062a \u062a\u0648\u0633\u0639\u0647 \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u062c\u062f\u06cc\u062f. * \u0628\u0627\u06af \u06a9\u0645\u062a\u0631: \u06a9\u0627\u0647\u0634 \u06f4\u06f0 \u062f\u0631\u0635\u062f\u06cc \u062e\u0637\u0627\u0647\u0627\u06cc \u0627\u0646\u0633\u0627\u0646\u06cc (\u0628\u0631\u0646\u0627\u0645\u0647\u0646\u0648\u06cc\u0633\u06cc). * \u0647\u0648\u0634\u0645\u0646\u062f\u0627\u0646\u0647: \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0641\u0648\u0642\u0627\u0644\u0639\u0627\u062f\u0647 \u062f\u0631 \u0645\u062d\u06cc\u0637\u0647\u0627\u06cc \u062a\u0648\u0633\u0639\u0647 \u06cc\u06a9\u067e\u0627\u0631\u0686\u0647 (IDE). \u062a\u06a9\u0645\u06cc\u0644 \u062f\u0631 \u0647\u0645\u0647 \u0628\u062e\u0634\u0647\u0627\u06cc \u06a9\u062f. \u06a9\u0627\u0647\u0634 \u0632\u0645\u0627\u0646 \u0631\u0641\u0639 \u0628\u0627\u06af. \u0622\u0633\u0627\u0646: \u0637\u0631\u0627\u062d\u06cc \u0634\u062f\u0647 \u0628\u0631\u0627\u06cc \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0648 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0622\u0633\u0627\u0646. \u06a9\u0627\u0647\u0634 \u0632\u0645\u0627\u0646 \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0628\u0631\u0627\u06cc \u0645\u0631\u0627\u062c\u0639\u0647 \u0628\u0647 \u0645\u0633\u062a\u0646\u062f\u0627\u062a. \u06a9\u0648\u0686\u06a9: \u06a9\u0627\u0647\u0634 \u062a\u06a9\u0631\u0627\u0631 \u062f\u0631 \u06a9\u062f. \u0686\u0646\u062f\u06cc\u0646 \u0642\u0627\u0628\u0644\u06cc\u062a \u0628\u0631\u0627\u06cc \u0647\u0631 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 (\u0645\u0646\u0638\u0648\u0631 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0648\u0631\u0648\u062f\u06cc \u062a\u0627\u0628\u0639 \u0647\u0646\u062f\u0644\u0631 \u0645\u06cc\u0628\u0627\u0634\u062f \u0628\u0647 \u0628\u062e\u0634 \u062e\u0644\u0627\u0635\u0647 \u062f\u0631 \u0647\u0645\u06cc\u0646 \u0635\u0641\u062d\u0647 \u0645\u0631\u0627\u062c\u0639\u0647 \u0634\u0648\u062f). \u0628\u0627\u06af \u06a9\u0645\u062a\u0631. \u0627\u0633\u062a\u0648\u0627\u0631: \u0627\u06cc\u062c\u0627\u062f \u06a9\u062f\u06cc \u0622\u0645\u0627\u062f\u0647 \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u0645\u062d\u06cc\u0637 \u067e\u0631\u0648\u062f\u0627\u06a9\u0634\u0646 \u0648 \u062a\u0648\u0644\u06cc\u062f \u062e\u0648\u062f\u06a9\u0627\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f\u0647\u0627: \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 (\u0648 \u0645\u0646\u0637\u0628\u0642 \u0628\u0627) \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f\u0647\u0627\u06cc \u0645\u062a\u0646 \u0628\u0627\u0632 \u0645\u0631\u0628\u0648\u0637 \u0628\u0647 API: OpenAPI (\u0633\u0648\u06af\u0631 \u0633\u0627\u0628\u0642) \u0648 JSON Schema. * \u062a\u062e\u0645\u06cc\u0646\u0647\u0627 \u0628\u0631 \u0627\u0633\u0627\u0633 \u062a\u0633\u062a\u0647\u0627\u06cc \u0627\u0646\u062c\u0627\u0645 \u0634\u062f\u0647 \u062f\u0631 \u06cc\u06a9 \u062a\u06cc\u0645 \u062a\u0648\u0633\u0639\u0647 \u062f\u0627\u062e\u0644\u06cc \u06a9\u0647 \u0645\u0634\u063a\u0648\u0644 \u0627\u06cc\u062c\u0627\u062f \u0628\u0631\u0646\u0627\u0645\u0647\u0647\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u062f\u06cc \u0648\u0627\u0642\u0639\u06cc \u0628\u0648\u062f\u0646\u062f \u0635\u0648\u0631\u062a \u06af\u0631\u0641\u062a\u0647 \u0627\u0633\u062a. \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc \u062f\u06cc\u06af\u0631 \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627 \u0646\u0638\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u062f\u0631 \u0645\u0648\u0631\u062f FastAPI [...] I'm using FastAPI a ton these days. [...] I'm actually planning to use it for all of my team's ML services at Microsoft. Some of them are getting integrated into the core Windows product and some Office products.\" Kabir Khan - Microsoft (ref) \"We adopted the FastAPI library to spawn a RESTserver that can be queried to obtain predictions. [for Ludwig]\" Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref) \"Netflix is pleased to announce the open-source release of our crisis management orchestration framework: Dispatch! [built with FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Im over the moon excited about FastAPI. Its so fun!\" Brian Okken - Python Bytes podcast host (ref) \"Honestly, what you've built looks super solid and polished. In many ways, it's what I wanted Hug to be - it's really inspiring to see someone build that.\" Timothy Crosley - Hug creator (ref) \"If you're looking to learn one modern framework for building REST APIs, check out FastAPI [...] It's fast, easy to use and easy to learn [...]\" \"We've switched over to FastAPI for our APIs [...] I think you'll like it [...]\" Ines Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref) Typer, \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u06cc \u0645\u0639\u0627\u062f\u0644 FastAPI \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0628\u0627 \u0648\u0627\u0633\u0637 \u062e\u0637 \u0641\u0631\u0645\u0627\u0646 \u0627\u06af\u0631 \u062f\u0631 \u062d\u0627\u0644 \u0633\u0627\u062e\u062a\u0646 \u0628\u0631\u0646\u0627\u0645\u0647\u0627\u06cc \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 CLI (\u0628\u0647 \u062c\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u0648\u0628) \u0647\u0633\u062a\u06cc\u062f \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 Typer. \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. Typer \u062f\u0648\u0642\u0644\u0648\u06cc \u06a9\u0648\u0686\u06a9\u062a\u0631 FastAPI \u0627\u0633\u062a \u0648 \u0642\u0631\u0627\u0631 \u0627\u0633\u062a \u0645\u0639\u0627\u062f\u0644\u06cc \u0628\u0631\u0627\u06cc FastAPI \u062f\u0631 \u0628\u0631\u0646\u0627\u0645\u0647\u0647\u0627\u06cc CLI \u0628\u0627\u0634\u062f.  \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627 \u067e\u0627\u06cc\u062a\u0648\u0646 +\u06f3.\u06f6 FastAPI \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u0627\u0628\u0632\u0627\u0631\u0647\u0627\u06cc \u0642\u062f\u0631\u062a\u0645\u0646\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a: \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 Starlette \u0628\u0631\u0627\u06cc \u0628\u062e\u0634 \u0648\u0628. \u06a9\u062a\u0627\u0628\u062e\u0627\u0646\u0647 Pydantic \u0628\u0631\u0627\u06cc \u0628\u062e\u0634 \u062f\u0627\u062f\u0647. \u0646\u0635\u0628  pip install fastapi --- 100 \u0646\u0635\u0628 \u06cc\u06a9 \u0633\u0631\u0648\u0631 \u067e\u0631\u0648\u062f\u0627\u06a9\u0634\u0646 \u0646\u0638\u06cc\u0631 Uvicorn \u06cc\u0627 Hypercorn \u0646\u06cc\u0632 \u062c\u0632\u0621 \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u0633\u062a.  pip install \"uvicorn[standard]\" --- 100 \u0645\u062b\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f \u0641\u0627\u06cc\u0644\u06cc \u0628\u0647 \u0646\u0627\u0645 main.py \u0628\u0627 \u0645\u062d\u062a\u0648\u0627\u06cc \u0632\u06cc\u0631 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} \u0647\u0645\u0686\u0646\u06cc\u0646 \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 async def... \u0646\u06cc\u0632 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f \u0627\u06af\u0631 \u062f\u0631 \u06a9\u062f\u062a\u0627\u0646 \u0627\u0632 async / await \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0645\u06cc\u06a9\u0646\u06cc\u062f \u0627\u0632 async def \u0628\u0631\u0627\u06cc \u062a\u0639\u0631\u06cc\u0641 \u062a\u0627\u0628\u0639 \u062e\u0648\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f: from typing import Optional from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Optional[str] = None): return {\"item_id\": item_id, \"q\": q} \u062a\u0648\u062c\u0647: \u0627\u06af\u0631 \u0628\u0627 async / await \u0622\u0634\u0646\u0627 \u0646\u06cc\u0633\u062a\u06cc\u062f \u0628\u0647 \u0628\u062e\u0634 \"\u0639\u062c\u0644\u0647 \u062f\u0627\u0631\u06cc\u062f?\" \u062f\u0631 \u0635\u0641\u062d\u0647 \u062f\u0631\u0628\u0627\u0631\u0647 async \u0648 await \u062f\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f. \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u062f\u0633\u062a\u0648\u0631 \u0632\u06cc\u0631 \u0633\u0631\u0648\u0631 \u0631\u0627 \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f:  uvicorn main:app --reload INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup. INFO: Application startup complete. \u062f\u0631\u0628\u0627\u0631\u0647 \u062f\u0633\u062a\u0648\u0631 uvicorn main:app --reload... \u062f\u0633\u062a\u0648\u0631 uvicorn main:app \u0634\u0627\u0645\u0644 \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a: main: \u0641\u0627\u06cc\u0644 main.py (\u0645\u0627\u0698\u0648\u0644 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647). app: \u0634\u06cc\u0621 \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u062f\u0631 \u0641\u0627\u06cc\u0644 main.py \u062f\u0631 \u062e\u0637 app = FastAPI(). --reload: \u0631\u06cc\u0633\u062a\u0627\u0631\u062a \u06a9\u0631\u062f\u0646 \u0633\u0631\u0648\u0631 \u0628\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u06a9\u062f. \u062a\u0646\u0647\u0627 \u062f\u0631 \u0647\u0646\u06af\u0627\u0645 \u062a\u0648\u0633\u0639\u0647 \u0627\u0632 \u0627\u06cc\u0646 \u06af\u0632\u06cc\u0646\u0647 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u0648\u062f.. \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f \u0622\u062f\u0631\u0633 http://127.0.0.1:8000/items/5?q=somequery \u0631\u0627 \u062f\u0631 \u0645\u0631\u0648\u0631\u06af\u0631 \u062e\u0648\u062f \u0628\u0627\u0632 \u06a9\u0646\u06cc\u062f. \u067e\u0627\u0633\u062e JSON \u0632\u06cc\u0631 \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u0631\u062f: {\"item_id\": 5, \"q\": \"somequery\"} \u062a\u0627 \u0627\u06cc\u0646\u062c\u0627 \u0634\u0645\u0627 API\u0627\u06cc \u0633\u0627\u062e\u062a\u06cc\u062f \u06a9\u0647: \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc HTTP \u0628\u0647 \u0645\u0633\u06cc\u0631\u0647\u0627\u06cc / \u0648 /items/{item_id} \u0631\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u0645\u06cc\u06a9\u0646\u062f. \u0647\u0631\u062f\u0648 \u0645\u0633\u06cc\u0631 \u0639\u0645\u0644\u06cc\u0627\u062a (\u06cc\u0627 HTTP \u0645\u062a\u062f) GET \u0631\u0627 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u062f. \u0645\u0633\u06cc\u0631 /items/{item_id} \u0634\u0627\u0645\u0644 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0645\u0633\u06cc\u0631 item_id \u0627\u0632 \u0646\u0648\u0639 int \u0627\u0633\u062a. \u0645\u0633\u06cc\u0631 /items/{item_id} \u0634\u0627\u0645\u0644 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u067e\u0631\u0633\u0645\u0627\u0646 \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc q \u0627\u0632 \u0646\u0648\u0639 str \u0627\u0633\u062a. \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u062d\u0627\u0644 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127.0.0.1:8000/docs \u0628\u0631\u0648\u06cc\u062f. \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc (\u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u0628\u0647 \u06a9\u0645\u06a9 Swagger UI) \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u0631\u062f: \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062d\u0627\u0644 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127.0.0.1:8000/redoc \u0628\u0631\u0648\u06cc\u062f. \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u062f\u06cc\u06af\u0631\u06cc \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u0631\u062f \u06a9\u0647 \u0628\u0647 \u06a9\u0645\u06a9 ReDoc \u0627\u06cc\u062c\u0627\u062f \u0645\u06cc\u0634\u0648\u062f: \u062a\u063a\u06cc\u06cc\u0631 \u0645\u062b\u0627\u0644 \u062d\u0627\u0644 \u0641\u0627\u06cc\u0644 main.py \u0631\u0627 \u0645\u0637\u0627\u0628\u0642 \u0632\u06cc\u0631 \u0648\u06cc\u0631\u0627\u06cc\u0634 \u06a9\u0646\u06cc\u062f \u062a\u0627 \u0628\u062a\u0648\u0627\u0646\u06cc\u062f \u0628\u062f\u0646\u0647 \u06cc\u06a9 \u062f\u0631\u062e\u0648\u0627\u0633\u062a PUT \u0631\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u06cc\u062f. \u0628\u0647 \u06a9\u0645\u06a9 Pydantic \u0628\u062f\u0646\u0647 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0631\u0627 \u0628\u0627 \u0627\u0646\u0648\u0627\u0639 \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f \u067e\u0627\u06cc\u062a\u0648\u0646 \u062a\u0639\u0631\u06cc\u0641 \u06a9\u0646\u06cc\u062f. from typing import Optional from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} \u0633\u0631\u0648\u0631 \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0631\u06cc\u0627\u0633\u062a\u0627\u0631\u062a \u0645\u06cc\u0634\u0648\u062f (\u0632\u06cc\u0631\u0627 \u067e\u06cc\u0634\u062a\u0631 \u0627\u0632 \u06af\u0632\u06cc\u0646\u0647 --reload \u062f\u0631 \u062f\u0633\u062a\u0648\u0631 uvicorn \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0631\u062f\u06cc\u0645). \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u062c\u062f\u062f\u0627 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127.0.0.1:8000/docs \u0628\u0631\u0648\u06cc\u062f. \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0628\u0647\u0631\u0648\u0632 \u0634\u062f\u0647 \u0627\u0633\u062a \u0648 \u0634\u0627\u0645\u0644 \u0628\u062f\u0646\u0647 \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u062f\u0631 \u0645\u0631\u062d\u0644\u0647 \u0642\u0628\u0644 \u0627\u0633\u062a: \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \"Try it out\" \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f \u0627\u06a9\u0646\u0648\u0646 \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0647\u0631 API \u0631\u0627 \u0645\u0634\u062e\u0635 \u06a9\u0631\u062f\u0647 \u0648 \u0628\u0647 \u0635\u0648\u0631\u062a \u0645\u0633\u062a\u0642\u06cc\u0645 \u0628\u0627 \u0622\u0646\u0647\u0627 \u062a\u0639\u0627\u0645\u0644 \u06a9\u0646\u06cc\u062f: \u0633\u067e\u0633 \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \"Execute\" \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f \u062e\u0648\u0627\u0647\u06cc\u062f \u062f\u06cc\u062f \u06a9\u0647 \u0648\u0627\u0633\u0637 \u06a9\u0627\u0631\u0628\u0631\u06cc \u0628\u0627 API\u0647\u0627\u06cc \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0631\u0642\u0631\u0627\u0631 \u06a9\u0631\u062f\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0631\u0627 \u0628\u0647 \u0622\u0646\u0647\u0627 \u0627\u0631\u0633\u0627\u0644 \u0645\u06cc\u06a9\u0646\u062f \u0633\u067e\u0633 \u0646\u062a\u0627\u06cc\u062c \u0631\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0631\u062f\u0647 \u0648 \u062f\u0631 \u0635\u0641\u062d\u0647 \u0646\u0634\u0627\u0646 \u0645\u06cc\u062f\u0647\u062f: \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062d\u0627\u0644 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127.0.0.1:8000/redoc \u0628\u0631\u0648\u06cc\u062f. \u062e\u0648\u0627\u0647\u06cc\u062f \u062f\u06cc\u062f \u06a9\u0647 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u0646\u06cc\u0632 \u0628\u0647\u0631\u0648\u0632\u0631\u0633\u0627\u0646\u06cc \u0634\u062f\u0647 \u0648 \u0634\u0627\u0645\u0644 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u067e\u0631\u0633\u0645\u0627\u0646 \u0648 \u0628\u062f\u0646\u0647 \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u0645\u06cc\u0628\u0627\u0634\u062f: \u062e\u0644\u0627\u0635\u0647 \u0628\u0647 \u0637\u0648\u0631 \u062e\u0644\u0627\u0635\u0647 \u0634\u0645\u0627 \u06cc\u06a9 \u0628\u0627\u0631 \u0627\u0646\u0648\u0627\u0639 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627 \u0628\u062f\u0646\u0647 \u0648 \u063a\u06cc\u0631\u0647 \u0631\u0627 \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0648\u0631\u0648\u062f\u06cc \u062a\u0627\u0628\u0639 \u062e\u0648\u062f \u062a\u0639\u0631\u06cc\u0641 \u0645\u06cc\u06a9\u0646\u06cc\u062f. \u0627\u06cc\u0646 \u06a9\u0627\u0631 \u0631\u0627 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u0646\u0648\u0627\u0639 \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f \u0648 \u0645\u062f\u0631\u0646 \u0645\u0648\u062c\u0648\u062f \u062f\u0631 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0627\u0646\u062c\u0627\u0645 \u0645\u06cc\u062f\u0647\u06cc\u062f. \u0646\u06cc\u0627\u0632\u06cc \u0628\u0647 \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0646\u062d\u0648 \u062c\u062f\u06cc\u062f \u06cc\u0627 \u0645\u062a\u062f\u0647\u0627 \u0648 \u06a9\u0644\u0627\u0633\u0647\u0627\u06cc \u06cc\u06a9 \u06a9\u062a\u0627\u0628\u062e\u0627\u0646\u0647 \u0628\u062e\u0635\u0648\u0635 \u0648 \u063a\u06cc\u0631\u0647 \u0646\u06cc\u0633\u062a. \u062a\u0646\u0647\u0627 \u067e\u0627\u06cc\u062a\u0648\u0646 +\u06f3.\u06f6. \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u0645\u062b\u0627\u0644 \u0628\u0631\u0627\u06cc \u06cc\u06a9 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0627\u0632 \u0646\u0648\u0639 int: item_id: int \u06cc\u0627 \u0628\u0631\u0627\u06cc \u06cc\u06a9 \u0645\u062f\u0644 \u067e\u06cc\u0686\u06cc\u062f\u0647\u062a\u0631 \u0645\u062b\u0644 Item: item: Item ...\u0648 \u0628\u0627 \u0647\u0645\u06cc\u0646 \u0627\u0639\u0644\u0627\u0646 \u062a\u0645\u0627\u0645\u06cc \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u0632\u06cc\u0631 \u062f\u0631 \u062f\u0633\u062a\u0631\u0633 \u0642\u0631\u0627\u0631 \u0645\u06cc\u06af\u06cc\u0631\u062f: \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0648\u06cc\u0631\u0627\u06cc\u0634\u06af\u0631 \u0645\u062a\u0646\u06cc \u0634\u0627\u0645\u0644: \u062a\u06a9\u0645\u06cc\u0644 \u06a9\u062f. \u0628\u0631\u0631\u0633\u06cc \u0627\u0646\u0648\u0627\u0639 \u062f\u0627\u062f\u0647. \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u062f\u0627\u062f\u0647: \u062e\u0637\u0627\u0647\u0627\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0648 \u0645\u0634\u062e\u0635 \u062f\u0631 \u0647\u0646\u06af\u0627\u0645 \u0646\u0627\u0645\u0639\u062a\u0628\u0631 \u0628\u0648\u062f\u0646 \u062f\u0627\u062f\u0647. \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u062d\u062a\u06cc \u0628\u0631\u0627\u06cc \u0627\u0634\u06cc\u0627\u0621 JSON \u062a\u0648 \u062f\u0631 \u062a\u0648. \u062a\u0628\u062f\u06cc\u0644 \u062f\u0627\u062f\u0647 \u0648\u0631\u0648\u062f\u06cc: \u06a9\u0647 \u0627\u0632 \u0634\u0628\u06a9\u0647 \u0631\u0633\u06cc\u062f\u0647 \u0628\u0647 \u0627\u0646\u0648\u0627\u0639 \u0648 \u062f\u0627\u062f\u0647 \u067e\u0627\u06cc\u062a\u0648\u0646\u06cc. \u0627\u06cc\u0646 \u062f\u0627\u062f\u0647 \u0634\u0627\u0645\u0644: JSON. \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0633\u06cc\u0631. \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u067e\u0631\u0633\u0645\u0627\u0646. \u06a9\u0648\u06a9\u06cc\u0647\u0627. \u0633\u0631\u0622\u06cc\u0646\u062f\u0647\u0627 (\u0647\u062f\u0631\u0647\u0627). \u0641\u0631\u0645\u0647\u0627. \u0641\u0627\u06cc\u0644\u0647\u0627. \u062a\u0628\u062f\u06cc\u0644 \u062f\u0627\u062f\u0647 \u062e\u0631\u0648\u062c\u06cc: \u062a\u0628\u062f\u06cc\u0644 \u0627\u0632 \u0627\u0646\u0648\u0627\u0639 \u0648 \u062f\u0627\u062f\u0647 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0628\u0647 \u062f\u0627\u062f\u0647 \u0634\u0628\u06a9\u0647 (\u0645\u0627\u0646\u0646\u062f JSON): \u062a\u0628\u062f\u06cc\u0644 \u0627\u0646\u0648\u0627\u0639 \u062f\u0627\u062f\u0647 \u067e\u0627\u06cc\u062a\u0648\u0646\u06cc (str, int, float, bool, list \u0648 \u063a\u06cc\u0631\u0647). \u0627\u0634\u06cc\u0627\u0621 datetime. \u0627\u0634\u06cc\u0627\u0621 UUID. q\u0645\u062f\u0644\u0647\u0627\u06cc \u067e\u0627\u06cc\u06af\u0627\u0647\u062f\u0627\u062f\u0647. \u0648 \u0645\u0648\u0627\u0631\u062f \u0628\u06cc\u0634\u0645\u0627\u0631 \u062f\u06cc\u06af\u0631. \u062f\u0648 \u0645\u062f\u0644 \u0645\u0633\u062a\u0646\u062f API \u062a\u0639\u0627\u0645\u0644\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 : Swagger UI. ReDoc. \u0628\u0647 \u0645\u062b\u0627\u0644 \u0642\u0628\u0644\u06cc \u0628\u0627\u0632 \u0645\u06cc\u06af\u0631\u062f\u06cc\u0645 \u062f\u0631 \u0627\u06cc\u0646 \u0645\u062b\u0627\u0644 FastAPI \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0631\u0627 \u0627\u0646\u062c\u0627\u0645 \u0645\u06cc\u062f\u0647\u062f: \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 item_id \u062f\u0631 \u0645\u0633\u06cc\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc GET \u0648 PUT \u0645\u0648\u062c\u0648\u062f \u0627\u0633\u062a. \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 item_id \u062f\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc GET \u0648 PUT \u0627\u0632 \u0646\u0648\u0639 int \u0627\u0633\u062a. \u0627\u06af\u0631 \u063a\u06cc\u0631 \u0627\u0632 \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0628\u0627\u0634\u062f \u0633\u0631\u0648\u06cc\u0633\u06af\u06cc\u0631\u0646\u062f\u0647 \u062e\u0637\u0627\u06cc \u0645\u0641\u06cc\u062f \u0648 \u0645\u0634\u062e\u0635\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u062e\u0648\u0627\u0647\u062f \u06a9\u0631\u062f. \u0628\u0631\u0631\u0633\u06cc \u0648\u062c\u0648\u062f \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u067e\u0631\u0633\u0645\u0627\u0646 \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc q (\u0645\u0627\u0646\u0646\u062f http://127.0.0.1:8000/items/foo?q=somequery) \u062f\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc GET. \u0627\u0632 \u0622\u0646\u062c\u0627 \u06a9\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 q \u0628\u0627 = None \u0645\u0642\u062f\u0627\u0631\u062f\u0647\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a \u0627\u06cc\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0627\u0633\u062a. \u0627\u06af\u0631 \u0627\u0632 \u0645\u0642\u062f\u0627\u0631 \u0627\u0648\u0644\u06cc\u0647 None \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u06a9\u0646\u06cc\u0645 \u0627\u06cc\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0627\u0644\u0632\u0627\u0645\u06cc \u062e\u0648\u0627\u0647\u062f \u0628\u0648\u062f (\u0647\u0645\u0627\u0646\u0646\u062f \u0628\u062f\u0646\u0647 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u062f\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a PUT). \u0628\u0631\u0627\u06cc \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc PUT \u0628\u0647 \u0622\u062f\u0631\u0633 /items/{item_id} \u0628\u062f\u0646\u0647 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0628\u0627\u06cc\u062f \u0627\u0632 \u0646\u0648\u0639 JSON \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u0628\u0627\u0634\u062f: \u0628\u0631\u0631\u0633\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u0628\u062f\u0646\u0647 \u0634\u0627\u0645\u0644 \u0641\u06cc\u0644\u062f\u06cc \u0628\u0627 \u0646\u0627\u0645 name \u0648 \u0627\u0632 \u0646\u0648\u0639 str \u0627\u0633\u062a. \u0628\u0631\u0631\u0633\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u0628\u062f\u0646\u0647 \u0634\u0627\u0645\u0644 \u0641\u06cc\u0644\u062f\u06cc \u0628\u0627 \u0646\u0627\u0645 price \u0648 \u0627\u0632 \u0646\u0648\u0639 float \u0627\u0633\u062a. \u0628\u0631\u0631\u0633\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u0628\u062f\u0646\u0647 \u0634\u0627\u0645\u0644 \u0641\u06cc\u0644\u062f\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0628\u0627 \u0646\u0627\u0645 is_offer \u0627\u0633\u062a \u06a9\u0647 \u062f\u0631 \u0635\u0648\u0631\u062a \u0648\u062c\u0648\u062f \u0628\u0627\u06cc\u062f \u0627\u0632 \u0646\u0648\u0639 bool \u0628\u0627\u0634\u062f. \u062a\u0645\u0627\u0645\u06cc \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0628\u0631\u0627\u06cc \u0627\u0634\u06cc\u0627\u0621 JSON \u062f\u0631 \u0647\u0631 \u0639\u0645\u0642\u06cc \u0642\u0627\u0628\u0644 \u0628\u0631\u0631\u0633\u06cc \u0645\u06cc\u0628\u0627\u0634\u062f. \u062a\u0628\u062f\u06cc\u0644 \u0627\u0632/\u0628\u0647 JSON \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631. \u0645\u0633\u062a\u0646\u062f\u0633\u0627\u0632\u06cc \u0647\u0645\u0647 \u0686\u06cc\u0632 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 OpenAPI \u06a9\u0647 \u0645\u06cc\u062a\u0648\u0627\u0646 \u0627\u0632 \u0622\u0646 \u0628\u0631\u0627\u06cc \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0631\u062f: \u0633\u06cc\u0633\u062a\u0645 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062a\u0639\u0627\u0645\u0644\u06cc. \u062a\u0648\u0644\u06cc\u062f \u062e\u0648\u062f\u06a9\u0627\u0631 \u06a9\u062f \u0633\u0631\u0648\u06cc\u0633\u06af\u06cc\u0631\u0646\u062f\u0647 \u062f\u0631 \u0632\u0628\u0627\u0646\u0647\u0627\u06cc \u0628\u0631\u0646\u0627\u0645\u0647\u0646\u0648\u06cc\u0633\u06cc \u0628\u06cc\u0634\u0645\u0627\u0631. \u0641\u0631\u0627\u0647\u0645 \u0633\u0627\u0632\u06cc \u06f2 \u0645\u0633\u062a\u0646\u062f \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u0648\u0628 \u0628\u0647 \u0635\u0648\u0631\u062a \u067e\u06cc\u0634\u0641\u0631\u0636. \u0645\u0648\u0627\u0631\u062f \u0630\u06a9\u0631 \u0634\u062f\u0647 \u062a\u0646\u0647\u0627 \u067e\u0627\u0631\u0647\u0627\u06cc \u0627\u0632 \u0648\u06cc\u0698\u06af\u06cc\u0647\u0627\u06cc \u0628\u06cc\u0634\u0645\u0627\u0631 FastAPI \u0627\u0633\u062a \u0627\u0645\u0627 \u0627\u06cc\u062f\u0647\u0627\u06cc \u06a9\u0644\u06cc \u0627\u0632 \u0637\u0631\u0632 \u06a9\u0627\u0631 \u0622\u0646 \u062f\u0631 \u0627\u062e\u062a\u06cc\u0627\u0631 \u0642\u0631\u0627\u0631 \u0645\u06cc\u062f\u0647\u062f. \u062e\u0637 \u0632\u06cc\u0631 \u0631\u0627 \u0628\u0647 \u0627\u06cc\u0646 \u0635\u0648\u0631\u062a \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0647\u06cc\u062f: return {\"item_name\": item.name, \"item_id\": item_id} \u0627\u0632: ... \"item_name\": item.name ... \u0628\u0647: ... \"item_price\": item.price ... \u062f\u0631 \u062d\u06cc\u0646 \u062a\u0627\u06cc\u067e \u06a9\u0631\u062f\u0646 \u062a\u0648\u062c\u0647 \u06a9\u0646\u06cc\u062f \u06a9\u0647 \u0686\u06af\u0648\u0646\u0647 \u0648\u06cc\u0631\u0627\u06cc\u0634\u06af\u0631 \u0648\u06cc\u0698\u06af\u06cc\u0647\u0627\u06cc \u06a9\u0644\u0627\u0633 Item \u0631\u0627 \u062a\u0634\u062e\u06cc\u0635 \u062f\u0627\u062f\u0647 \u0648 \u0628\u0647 \u062a\u06a9\u0645\u06cc\u0644 \u062e\u0648\u062f\u06a9\u0627\u0631 \u0622\u0646\u0647\u0627 \u06a9\u0645\u06a9 \u0645\u06cc\u06a9\u0646\u062f: \u0628\u0631\u0627\u06cc \u0645\u0634\u0627\u0647\u062f\u0647 \u0645\u062b\u0627\u0644\u0647\u0627\u06cc \u06a9\u0627\u0645\u0644\u062a\u0631 \u06a9\u0647 \u0634\u0627\u0645\u0644 \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u0628\u06cc\u0634\u062a\u0631\u06cc \u0627\u0632 FastAPI \u0628\u0627\u0634\u062f \u0628\u0647 \u0628\u062e\u0634 \u0622\u0645\u0648\u0632\u0634 - \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631 \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f. \u0647\u0634\u062f\u0627\u0631 \u0627\u0633\u067e\u0648\u06cc\u0644: \u0628\u062e\u0634 \u0622\u0645\u0648\u0632\u0634 - \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631 \u0634\u0627\u0645\u0644 \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a: \u0627\u0639\u0644\u0627\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0648\u062c\u0648\u062f \u062f\u0631 \u0628\u062e\u0634\u0647\u0627\u06cc \u062f\u06cc\u06af\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0634\u0627\u0645\u0644: \u0633\u0631\u0622\u06cc\u0646\u062f (\u0647\u062f\u0631)\u0647\u0627 \u06a9\u0648\u06a9\u06cc\u0647\u0627 \u0641\u06cc\u0644\u062f\u0647\u0627\u06cc \u0641\u0631\u0645 \u0648 \u0641\u0627\u06cc\u0644\u0647\u0627. \u0686\u06af\u0648\u0646\u06af\u06cc \u062a\u0646\u0638\u06cc\u0645 \u0645\u062d\u062f\u0648\u062f\u06cc\u062a\u0647\u0627\u06cc \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u0645\u062b\u0627\u0644 maximum_length \u06cc\u0627 regex. \u0633\u06cc\u0633\u062a\u0645 Dependency Injection \u0642\u0648\u06cc \u0648 \u06a9\u0627\u0631\u0628\u0631\u062f\u06cc. \u0627\u0645\u0646\u06cc\u062a \u0648 \u062a\u0627\u06cc\u06cc\u062f \u0647\u0648\u06cc\u062a, \u0634\u0627\u0645\u0644 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u0632 OAuth2 \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 JWT tokens \u0648 HTTP Basic. \u062a\u06a9\u0646\u06cc\u06a9 \u067e\u06cc\u0634\u0631\u0641\u062a\u0647 \u0628\u0631\u0627\u06cc \u062a\u0639\u0631\u06cc\u0641 \u0645\u062f\u0644\u0647\u0627\u06cc \u0686\u0646\u062f \u0633\u0637\u062d\u06cc JSON (\u0628\u0631 \u0627\u0633\u0627\u0633 Pydantic). \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u0627\u0636\u0627\u0641\u06cc \u062f\u06cc\u06af\u0631 (\u0628\u0631 \u0627\u0633\u0627\u0633 Starlette) \u0634\u0627\u0645\u0644: \u0648\u0628\u0633\u0648\u06a9\u062a GraphQL \u062a\u0633\u062a\u0647\u0627\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0622\u0633\u0627\u0646 \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 HTTPX \u0648 pytest CORS Cookie Sessions \u0648 \u0645\u0648\u0627\u0631\u062f \u0628\u06cc\u0634\u0645\u0627\u0631 \u062f\u06cc\u06af\u0631. \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0645\u0639\u06cc\u0627\u0631 (\u0628\u0646\u0686\u0645\u0627\u0631\u06a9)\u0647\u0627\u06cc \u0645\u0633\u062a\u0642\u0644 TechEmpower \u062d\u0627\u06a9\u06cc \u0627\u0632 \u0622\u0646 \u0627\u0633\u062a \u06a9\u0647 \u0628\u0631\u0646\u0627\u0645\u0647\u0647\u0627\u06cc FastAPI \u06a9\u0647 \u062a\u062d\u062a Uvicorn \u0627\u062c\u0631\u0627 \u0645\u06cc\u0634\u0648\u062f \u06cc\u06a9\u06cc \u0627\u0632 \u0633\u0631\u06cc\u0639\u062a\u0631\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u0647\u0627\u06cc \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0627\u0633\u062a \u06a9\u0647 \u06a9\u0645\u06cc \u0636\u0639\u06cc\u0641\u062a\u0631 \u0627\u0632 Starlette \u0648 Uvicorn \u0639\u0645\u0644 \u0645\u06cc\u06a9\u0646\u062f (\u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0648 \u0633\u0631\u0648\u0631\u06cc \u06a9\u0647 FastAPI \u0628\u0631 \u0627\u0633\u0627\u0633 \u0622\u0646\u0647\u0627 \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u0627\u0633\u062a) (*) \u0628\u0631\u0627\u06cc \u062f\u0631\u06a9 \u0628\u0647\u062a\u0631\u06cc \u0627\u0632 \u0627\u06cc\u0646 \u0645\u0648\u0636\u0648\u0639 \u0628\u0647 \u0628\u062e\u0634 \u0628\u0646\u0686\u0645\u0627\u0631\u06a9\u0647\u0627 \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f. \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 Pydantic: email-validator - \u0628\u0631\u0627\u06cc \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0622\u062f\u0631\u0633\u0647\u0627\u06cc \u0627\u06cc\u0645\u06cc\u0644. \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 Starlette: HTTPX - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0645\u06cc\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 TestClient \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. aiofiles - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0645\u06cc\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 FileResponse \u0648 StaticFiles \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. jinja2 - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 \u067e\u06cc\u06a9\u0631\u0628\u0646\u062f\u06cc \u067e\u06cc\u0634\u0641\u0631\u0636 \u0628\u0631\u0627\u06cc \u0642\u0627\u0644\u0628\u0647\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. python-multipart - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 request.form() \u0627\u0632 \u0642\u0627\u0628\u0644\u06cc\u062a \"\u062a\u062c\u0632\u06cc\u0647 (parse)\" \u0641\u0631\u0645 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. itsdangerous - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u06cc\u062f \u0627\u0632 SessionMiddleware \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u06a9\u0646\u06cc\u062f. pyyaml - \u0628\u0631\u0627\u06cc \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc SchemaGenerator \u062f\u0631 Starlet (\u0628\u0647 \u0627\u062d\u062a\u0645\u0627\u0644 \u0632\u06cc\u0627\u062f \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u06a9\u0631\u062f\u0646 \u0628\u0627 FastAPI \u0628\u0647 \u0622\u0646 \u0646\u06cc\u0627\u0632\u06cc \u067e\u06cc\u062f\u0627 \u0646\u0645\u06cc\u06a9\u0646\u06cc\u062f). graphene - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0627\u0632 GraphQLApp \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u062f. \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 FastAPI / Starlette: uvicorn - \u0628\u0631\u0627\u06cc \u0633\u0631\u0648\u0631 \u0627\u062c\u0631\u0627 \u06a9\u0646\u0646\u062f\u0647 \u0628\u0631\u0646\u0627\u0645\u0647 \u0648\u0628. orjson - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 ORJSONResponse \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. ujson - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 UJSONResponse \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. \u0645\u06cc\u062a\u0648\u0627\u0646 \u0647\u0645\u0647 \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0631\u0627 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u062f\u0633\u062a\u0648\u0631 pip install fastapi[all]. \u0628\u0647 \u0635\u0648\u0631\u062a \u06cc\u06a9\u062c\u0627 \u0646\u0635\u0628 \u06a9\u0631\u062f. \u0644\u0627\u06cc\u0633\u0646\u0633 \u0627\u06cc\u0646 \u067e\u0631\u0648\u0698\u0647 \u0645\u0634\u0645\u0648\u0644 \u0642\u0648\u0627\u0646\u06cc\u0646 \u0648 \u0645\u0642\u0631\u0631\u0627\u062a \u0644\u0627\u06cc\u0633\u0646\u0633 MIT \u0627\u0633\u062a. \u0628\u0631\u06af\u0634\u062a \u0628\u0647 \u0628\u0627\u0644\u0627",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Optional\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Optional[str] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Optional\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Optional[str] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "async / await",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "uvicorn main:app --reload",
        "uvicorn main:app",
        "app = FastAPI()",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Optional\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Optional\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "email-validator",
        "FileResponse",
        "StaticFiles",
        "python-multipart",
        "request.form()",
        "itsdangerous",
        "SessionMiddleware",
        "SchemaGenerator",
        "ORJSONResponse",
        "UJSONResponse",
        "pip install fastapi[all]"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI \u0641\u0647\u0631\u0633\u062a \u0645\u0648\u0636\u0648\u0639\u0627\u062a \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc \u0646\u0638\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u062f\u0631 \u0645\u0648\u0631\u062f FastAPI Typer, \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u06cc \u0645\u0639\u0627\u062f\u0644 FastAPI \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0628\u0627 \u0648\u0627\u0633\u0637 \u062e\u0637 \u0641\u0631\u0645\u0627\u0646 \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627 \u0646\u0635\u0628 \u0645\u062b\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u062b\u0627\u0644 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062e\u0644\u0627\u0635\u0647 \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0644\u0627\u06cc\u0633\u0646\u0633 \u0648\u06cc\u0698\u06af\u06cc \u0647\u0627 \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield \u0627\u0645\u0646\u06cc\u062a \u0627\u0645\u0646\u06cc\u062a Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens \u0645\u06cc\u0627\u0646\u0627\u0641\u0632\u0627\u0631 - middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware \u0632\u06cc\u0631 \u0628\u0631\u0646\u0627\u0645\u0647 \u0647\u0627 - \u0627\u062a\u0635\u0627\u0644 Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes \u0641\u0647\u0631\u0633\u062a \u0645\u0648\u0636\u0648\u0639\u0627\u062a \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc \u0646\u0638\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u062f\u0631 \u0645\u0648\u0631\u062f FastAPI Typer, \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u06cc \u0645\u0639\u0627\u062f\u0644 FastAPI \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0628\u0627 \u0648\u0627\u0633\u0637 \u062e\u0637 \u0641\u0631\u0645\u0627\u0646 \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627 \u0646\u0635\u0628 \u0645\u062b\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u062b\u0627\u0644 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062e\u0644\u0627\u0635\u0647 \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0644\u0627\u06cc\u0633\u0646\u0633 FastAPI \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 FastAPI \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0628\u0627\u0644\u0627 \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0622\u0633\u0627\u0646 \u06a9\u062f\u0646\u0648\u06cc\u0633\u06cc \u0633\u0631\u06cc\u0639 \u0622\u0645\u0627\u062f\u0647 \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u0645\u062d\u06cc\u0637 \u067e\u0631\u0648\u062f\u0627\u06a9\u0634\u0646 \u0645\u0633\u062a\u0646\u062f\u0627\u062a: https://fastapi",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com \u06a9\u062f \u0645\u0646\u0628\u0639: https://github com/fastapi/fastapi FastAPI \u06cc\u06a9 \u0648\u0628 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0645\u062f\u0631\u0646 \u0648 \u0633\u0631\u06cc\u0639 (\u0628\u0627 \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0628\u0627\u0644\u0627) \u0628\u0631\u0627\u06cc \u0627\u06cc\u062c\u0627\u062f API\u0647\u0627\u06cc \u0645\u062a\u0646\u0648\u0639 (\u0648\u0628 \u0648\u0628\u0633\u0648\u06a9\u062a \u0648 \u063a\u0628\u0631\u0647) \u0628\u0627 \u0632\u0628\u0627\u0646 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0646\u0633\u062e\u0647 +\u06f3 \u06f6 \u0627\u0633\u062a \u0627\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0628\u0627 \u0631\u0639\u0627\u06cc\u062a \u06a9\u0627\u0645\u0644 \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u0646\u0648\u0639 \u062f\u0627\u062f\u0647 (Type Hint) \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u0627\u0633\u062a \u0648\u06cc\u0698\u06af\u06cc\u0647\u0627\u06cc \u06a9\u0644\u06cc\u062f\u06cc \u0627\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0639\u0628\u0627\u0631\u062a\u0646\u062f \u0627\u0632: \u0633\u0631\u0639\u062a: \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0628\u0633\u06cc\u0627\u0631 \u0628\u0627\u0644\u0627 \u0648 \u0642\u0627\u0628\u0644 \u0645\u0642\u0627\u06cc\u0633\u0647 \u0628\u0627 NodeJS \u0648 Go (\u0628\u0627 \u062a\u0634\u06a9\u0631 \u0627\u0632 Starlette \u0648 Pydantic) \u06cc\u06a9\u06cc \u0627\u0632 \u0633\u0631\u06cc\u0639\u062a\u0631\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u0647\u0627\u06cc \u067e\u0627\u06cc\u062a\u0648\u0646\u06cc \u0645\u0648\u062c\u0648\u062f \u06a9\u062f\u0646\u0648\u06cc\u0633\u06cc \u0633\u0631\u06cc\u0639: \u0627\u0641\u0632\u0627\u06cc\u0634 \u06f2\u06f0\u06f0 \u062a\u0627 \u06f3\u06f0\u06f0 \u062f\u0631\u0635\u062f\u06cc \u0633\u0631\u0639\u062a \u062a\u0648\u0633\u0639\u0647 \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u062c\u062f\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "* \u0628\u0627\u06af \u06a9\u0645\u062a\u0631: \u06a9\u0627\u0647\u0634 \u06f4\u06f0 \u062f\u0631\u0635\u062f\u06cc \u062e\u0637\u0627\u0647\u0627\u06cc \u0627\u0646\u0633\u0627\u0646\u06cc (\u0628\u0631\u0646\u0627\u0645\u0647\u0646\u0648\u06cc\u0633\u06cc) * \u0647\u0648\u0634\u0645\u0646\u062f\u0627\u0646\u0647: \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0641\u0648\u0642\u0627\u0644\u0639\u0627\u062f\u0647 \u062f\u0631 \u0645\u062d\u06cc\u0637\u0647\u0627\u06cc \u062a\u0648\u0633\u0639\u0647 \u06cc\u06a9\u067e\u0627\u0631\u0686\u0647 (IDE) \u062a\u06a9\u0645\u06cc\u0644 \u062f\u0631 \u0647\u0645\u0647 \u0628\u062e\u0634\u0647\u0627\u06cc \u06a9\u062f \u06a9\u0627\u0647\u0634 \u0632\u0645\u0627\u0646 \u0631\u0641\u0639 \u0628\u0627\u06af \u0622\u0633\u0627\u0646: \u0637\u0631\u0627\u062d\u06cc \u0634\u062f\u0647 \u0628\u0631\u0627\u06cc \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0648 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0622\u0633\u0627\u0646 \u06a9\u0627\u0647\u0634 \u0632\u0645\u0627\u0646 \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0628\u0631\u0627\u06cc \u0645\u0631\u0627\u062c\u0639\u0647 \u0628\u0647 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u06a9\u0648\u0686\u06a9: \u06a9\u0627\u0647\u0634 \u062a\u06a9\u0631\u0627\u0631 \u062f\u0631 \u06a9\u062f \u0686\u0646\u062f\u06cc\u0646 \u0642\u0627\u0628\u0644\u06cc\u062a \u0628\u0631\u0627\u06cc \u0647\u0631 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 (\u0645\u0646\u0638\u0648\u0631 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0648\u0631\u0648\u062f\u06cc \u062a\u0627\u0628\u0639 \u0647\u0646\u062f\u0644\u0631 \u0645\u06cc\u0628\u0627\u0634\u062f \u0628\u0647 \u0628\u062e\u0634 \u062e\u0644\u0627\u0635\u0647 \u062f\u0631 \u0647\u0645\u06cc\u0646 \u0635\u0641\u062d\u0647 \u0645\u0631\u0627\u062c\u0639\u0647 \u0634\u0648\u062f) \u0628\u0627\u06af \u06a9\u0645\u062a\u0631",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "\u0627\u0633\u062a\u0648\u0627\u0631: \u0627\u06cc\u062c\u0627\u062f \u06a9\u062f\u06cc \u0622\u0645\u0627\u062f\u0647 \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u0645\u062d\u06cc\u0637 \u067e\u0631\u0648\u062f\u0627\u06a9\u0634\u0646 \u0648 \u062a\u0648\u0644\u06cc\u062f \u062e\u0648\u062f\u06a9\u0627\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f\u0647\u0627: \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 (\u0648 \u0645\u0646\u0637\u0628\u0642 \u0628\u0627) \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f\u0647\u0627\u06cc \u0645\u062a\u0646 \u0628\u0627\u0632 \u0645\u0631\u0628\u0648\u0637 \u0628\u0647 API: OpenAPI (\u0633\u0648\u06af\u0631 \u0633\u0627\u0628\u0642) \u0648 JSON Schema * \u062a\u062e\u0645\u06cc\u0646\u0647\u0627 \u0628\u0631 \u0627\u0633\u0627\u0633 \u062a\u0633\u062a\u0647\u0627\u06cc \u0627\u0646\u062c\u0627\u0645 \u0634\u062f\u0647 \u062f\u0631 \u06cc\u06a9 \u062a\u06cc\u0645 \u062a\u0648\u0633\u0639\u0647 \u062f\u0627\u062e\u0644\u06cc \u06a9\u0647 \u0645\u0634\u063a\u0648\u0644 \u0627\u06cc\u062c\u0627\u062f \u0628\u0631\u0646\u0627\u0645\u0647\u0647\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u062f\u06cc \u0648\u0627\u0642\u0639\u06cc \u0628\u0648\u062f\u0646\u062f \u0635\u0648\u0631\u062a \u06af\u0631\u0641\u062a\u0647 \u0627\u0633\u062a \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc \u062f\u06cc\u06af\u0631 \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627 \u0646\u0638\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u062f\u0631 \u0645\u0648\u0631\u062f FastAPI [ ] I'm using FastAPI a ton these days [ ] I'm actually planning to use it for all of my team's ML services at Microsoft",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "Some of them are getting integrated into the core Windows product and some Office products \" Kabir Khan - Microsoft (ref) \"We adopted the FastAPI library to spawn a RESTserver that can be queried to obtain predictions [for Ludwig]\" Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref) \"Netflix is pleased to announce the open-source release of our crisis management orchestration framework: Dispatch",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "[built with FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Im over the moon excited about FastAPI Its so fun \" Brian Okken - Python Bytes podcast host (ref) \"Honestly, what you've built looks super solid and polished In many ways, it's what I wanted Hug to be - it's really inspiring to see someone build that \" Timothy Crosley - Hug creator (ref) \"If you're looking to learn one modern framework for building REST APIs, check out FastAPI [",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "] It's fast, easy to use and easy to learn [ ]\" \"We've switched over to FastAPI for our APIs [ ] I think you'll like it [ ]\" Ines Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref) Typer, \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u06cc \u0645\u0639\u0627\u062f\u0644 FastAPI \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0628\u0627 \u0648\u0627\u0633\u0637 \u062e\u0637 \u0641\u0631\u0645\u0627\u0646 \u0627\u06af\u0631 \u062f\u0631 \u062d\u0627\u0644 \u0633\u0627\u062e\u062a\u0646 \u0628\u0631\u0646\u0627\u0645\u0647\u0627\u06cc \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 CLI (\u0628\u0647 \u062c\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u0648\u0628) \u0647\u0633\u062a\u06cc\u062f \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 Typer \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f Typer \u062f\u0648\u0642\u0644\u0648\u06cc \u06a9\u0648\u0686\u06a9\u062a\u0631 FastAPI \u0627\u0633\u062a \u0648 \u0642\u0631\u0627\u0631 \u0627\u0633\u062a \u0645\u0639\u0627\u062f\u0644\u06cc \u0628\u0631\u0627\u06cc FastAPI \u062f\u0631 \u0628\u0631\u0646\u0627\u0645\u0647\u0647\u0627\u06cc CLI \u0628\u0627\u0634\u062f \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627 \u067e\u0627\u06cc\u062a\u0648\u0646 +\u06f3",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "\u06f6 FastAPI \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u0627\u0628\u0632\u0627\u0631\u0647\u0627\u06cc \u0642\u062f\u0631\u062a\u0645\u0646\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a: \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 Starlette \u0628\u0631\u0627\u06cc \u0628\u062e\u0634 \u0648\u0628 \u06a9\u062a\u0627\u0628\u062e\u0627\u0646\u0647 Pydantic \u0628\u0631\u0627\u06cc \u0628\u062e\u0634 \u062f\u0627\u062f\u0647 \u0646\u0635\u0628  pip install fastapi --- 100 \u0646\u0635\u0628 \u06cc\u06a9 \u0633\u0631\u0648\u0631 \u067e\u0631\u0648\u062f\u0627\u06a9\u0634\u0646 \u0646\u0638\u06cc\u0631 Uvicorn \u06cc\u0627 Hypercorn \u0646\u06cc\u0632 \u062c\u0632\u0621 \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u0633\u062a pip install \"uvicorn[standard]\" --- 100 \u0645\u062b\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f \u0641\u0627\u06cc\u0644\u06cc \u0628\u0647 \u0646\u0627\u0645 main py \u0628\u0627 \u0645\u062d\u062a\u0648\u0627\u06cc \u0632\u06cc\u0631 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} \u0647\u0645\u0686\u0646\u06cc\u0646 \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 async def \u0646\u06cc\u0632 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f \u0627\u06af\u0631 \u062f\u0631 \u06a9\u062f\u062a\u0627\u0646 \u0627\u0632 async / await \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0645\u06cc\u06a9\u0646\u06cc\u062f \u0627\u0632 async def \u0628\u0631\u0627\u06cc \u062a\u0639\u0631\u06cc\u0641 \u062a\u0627\u0628\u0639 \u062e\u0648\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f: from typing import Optional from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "get(\"/items/{item_id}\") async def read_item(item_id: int, q: Optional[str] = None): return {\"item_id\": item_id, \"q\": q} \u062a\u0648\u062c\u0647: \u0627\u06af\u0631 \u0628\u0627 async / await \u0622\u0634\u0646\u0627 \u0646\u06cc\u0633\u062a\u06cc\u062f \u0628\u0647 \u0628\u062e\u0634 \"\u0639\u062c\u0644\u0647 \u062f\u0627\u0631\u06cc\u062f \" \u062f\u0631 \u0635\u0641\u062d\u0647 \u062f\u0631\u0628\u0627\u0631\u0647 async \u0648 await \u062f\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u062f\u0633\u062a\u0648\u0631 \u0632\u06cc\u0631 \u0633\u0631\u0648\u0631 \u0631\u0627 \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f:  uvicorn main:app --reload INFO: Uvicorn running on http://127 0 0 1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "INFO: Application startup complete \u062f\u0631\u0628\u0627\u0631\u0647 \u062f\u0633\u062a\u0648\u0631 uvicorn main:app --reload \u062f\u0633\u062a\u0648\u0631 uvicorn main:app \u0634\u0627\u0645\u0644 \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a: main: \u0641\u0627\u06cc\u0644 main py (\u0645\u0627\u0698\u0648\u0644 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647) app: \u0634\u06cc\u0621 \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u062f\u0631 \u0641\u0627\u06cc\u0644 main py \u062f\u0631 \u062e\u0637 app = FastAPI() --reload: \u0631\u06cc\u0633\u062a\u0627\u0631\u062a \u06a9\u0631\u062f\u0646 \u0633\u0631\u0648\u0631 \u0628\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u06a9\u062f \u062a\u0646\u0647\u0627 \u062f\u0631 \u0647\u0646\u06af\u0627\u0645 \u062a\u0648\u0633\u0639\u0647 \u0627\u0632 \u0627\u06cc\u0646 \u06af\u0632\u06cc\u0646\u0647 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u0648\u062f \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f \u0622\u062f\u0631\u0633 http://127 0 0 1:8000/items/5 q=somequery \u0631\u0627 \u062f\u0631 \u0645\u0631\u0648\u0631\u06af\u0631 \u062e\u0648\u062f \u0628\u0627\u0632 \u06a9\u0646\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "\u067e\u0627\u0633\u062e JSON \u0632\u06cc\u0631 \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u0631\u062f: {\"item_id\": 5, \"q\": \"somequery\"} \u062a\u0627 \u0627\u06cc\u0646\u062c\u0627 \u0634\u0645\u0627 API\u0627\u06cc \u0633\u0627\u062e\u062a\u06cc\u062f \u06a9\u0647: \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc HTTP \u0628\u0647 \u0645\u0633\u06cc\u0631\u0647\u0627\u06cc / \u0648 /items/{item_id} \u0631\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u0645\u06cc\u06a9\u0646\u062f \u0647\u0631\u062f\u0648 \u0645\u0633\u06cc\u0631 \u0639\u0645\u0644\u06cc\u0627\u062a (\u06cc\u0627 HTTP \u0645\u062a\u062f) GET \u0631\u0627 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u062f \u0645\u0633\u06cc\u0631 /items/{item_id} \u0634\u0627\u0645\u0644 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0645\u0633\u06cc\u0631 item_id \u0627\u0632 \u0646\u0648\u0639 int \u0627\u0633\u062a \u0645\u0633\u06cc\u0631 /items/{item_id} \u0634\u0627\u0645\u0644 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u067e\u0631\u0633\u0645\u0627\u0646 \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc q \u0627\u0632 \u0646\u0648\u0639 str \u0627\u0633\u062a \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u062d\u0627\u0644 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127 0 0 1:8000/docs \u0628\u0631\u0648\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "\u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc (\u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u0628\u0647 \u06a9\u0645\u06a9 Swagger UI) \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u0631\u062f: \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062d\u0627\u0644 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127 0 0 1:8000/redoc \u0628\u0631\u0648\u06cc\u062f \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u062f\u06cc\u06af\u0631\u06cc \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u0631\u062f \u06a9\u0647 \u0628\u0647 \u06a9\u0645\u06a9 ReDoc \u0627\u06cc\u062c\u0627\u062f \u0645\u06cc\u0634\u0648\u062f: \u062a\u063a\u06cc\u06cc\u0631 \u0645\u062b\u0627\u0644 \u062d\u0627\u0644 \u0641\u0627\u06cc\u0644 main py \u0631\u0627 \u0645\u0637\u0627\u0628\u0642 \u0632\u06cc\u0631 \u0648\u06cc\u0631\u0627\u06cc\u0634 \u06a9\u0646\u06cc\u062f \u062a\u0627 \u0628\u062a\u0648\u0627\u0646\u06cc\u062f \u0628\u062f\u0646\u0647 \u06cc\u06a9 \u062f\u0631\u062e\u0648\u0627\u0633\u062a PUT \u0631\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u06cc\u062f \u0628\u0647 \u06a9\u0645\u06a9 Pydantic \u0628\u062f\u0646\u0647 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0631\u0627 \u0628\u0627 \u0627\u0646\u0648\u0627\u0639 \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f \u067e\u0627\u06cc\u062a\u0648\u0646 \u062a\u0639\u0631\u06cc\u0641 \u06a9\u0646\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "from typing import Optional from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "name, \"item_id\": item_id} \u0633\u0631\u0648\u0631 \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0631\u06cc\u0627\u0633\u062a\u0627\u0631\u062a \u0645\u06cc\u0634\u0648\u062f (\u0632\u06cc\u0631\u0627 \u067e\u06cc\u0634\u062a\u0631 \u0627\u0632 \u06af\u0632\u06cc\u0646\u0647 --reload \u062f\u0631 \u062f\u0633\u062a\u0648\u0631 uvicorn \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0631\u062f\u06cc\u0645) \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u062c\u062f\u062f\u0627 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127 0 0 1:8000/docs \u0628\u0631\u0648\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "\u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0628\u0647\u0631\u0648\u0632 \u0634\u062f\u0647 \u0627\u0633\u062a \u0648 \u0634\u0627\u0645\u0644 \u0628\u062f\u0646\u0647 \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u062f\u0631 \u0645\u0631\u062d\u0644\u0647 \u0642\u0628\u0644 \u0627\u0633\u062a: \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \"Try it out\" \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f \u0627\u06a9\u0646\u0648\u0646 \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0647\u0631 API \u0631\u0627 \u0645\u0634\u062e\u0635 \u06a9\u0631\u062f\u0647 \u0648 \u0628\u0647 \u0635\u0648\u0631\u062a \u0645\u0633\u062a\u0642\u06cc\u0645 \u0628\u0627 \u0622\u0646\u0647\u0627 \u062a\u0639\u0627\u0645\u0644 \u06a9\u0646\u06cc\u062f: \u0633\u067e\u0633 \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \"Execute\" \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f \u062e\u0648\u0627\u0647\u06cc\u062f \u062f\u06cc\u062f \u06a9\u0647 \u0648\u0627\u0633\u0637 \u06a9\u0627\u0631\u0628\u0631\u06cc \u0628\u0627 API\u0647\u0627\u06cc \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0631\u0642\u0631\u0627\u0631 \u06a9\u0631\u062f\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0631\u0627 \u0628\u0647 \u0622\u0646\u0647\u0627 \u0627\u0631\u0633\u0627\u0644 \u0645\u06cc\u06a9\u0646\u062f \u0633\u067e\u0633 \u0646\u062a\u0627\u06cc\u062c \u0631\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0631\u062f\u0647 \u0648 \u062f\u0631 \u0635\u0641\u062d\u0647 \u0646\u0634\u0627\u0646 \u0645\u06cc\u062f\u0647\u062f: \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062d\u0627\u0644 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127 0 0 1:8000/redoc \u0628\u0631\u0648\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "\u062e\u0648\u0627\u0647\u06cc\u062f \u062f\u06cc\u062f \u06a9\u0647 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u0646\u06cc\u0632 \u0628\u0647\u0631\u0648\u0632\u0631\u0633\u0627\u0646\u06cc \u0634\u062f\u0647 \u0648 \u0634\u0627\u0645\u0644 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u067e\u0631\u0633\u0645\u0627\u0646 \u0648 \u0628\u062f\u0646\u0647 \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u0645\u06cc\u0628\u0627\u0634\u062f: \u062e\u0644\u0627\u0635\u0647 \u0628\u0647 \u0637\u0648\u0631 \u062e\u0644\u0627\u0635\u0647 \u0634\u0645\u0627 \u06cc\u06a9 \u0628\u0627\u0631 \u0627\u0646\u0648\u0627\u0639 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627 \u0628\u062f\u0646\u0647 \u0648 \u063a\u06cc\u0631\u0647 \u0631\u0627 \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0648\u0631\u0648\u062f\u06cc \u062a\u0627\u0628\u0639 \u062e\u0648\u062f \u062a\u0639\u0631\u06cc\u0641 \u0645\u06cc\u06a9\u0646\u06cc\u062f \u0627\u06cc\u0646 \u06a9\u0627\u0631 \u0631\u0627 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u0646\u0648\u0627\u0639 \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f \u0648 \u0645\u062f\u0631\u0646 \u0645\u0648\u062c\u0648\u062f \u062f\u0631 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0627\u0646\u062c\u0627\u0645 \u0645\u06cc\u062f\u0647\u06cc\u062f \u0646\u06cc\u0627\u0632\u06cc \u0628\u0647 \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0646\u062d\u0648 \u062c\u062f\u06cc\u062f \u06cc\u0627 \u0645\u062a\u062f\u0647\u0627 \u0648 \u06a9\u0644\u0627\u0633\u0647\u0627\u06cc \u06cc\u06a9 \u06a9\u062a\u0627\u0628\u062e\u0627\u0646\u0647 \u0628\u062e\u0635\u0648\u0635 \u0648 \u063a\u06cc\u0631\u0647 \u0646\u06cc\u0633\u062a \u062a\u0646\u0647\u0627 \u067e\u0627\u06cc\u062a\u0648\u0646 +\u06f3 \u06f6 \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u0645\u062b\u0627\u0644 \u0628\u0631\u0627\u06cc \u06cc\u06a9 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0627\u0632 \u0646\u0648\u0639 int: item_id: int \u06cc\u0627 \u0628\u0631\u0627\u06cc \u06cc\u06a9 \u0645\u062f\u0644 \u067e\u06cc\u0686\u06cc\u062f\u0647\u062a\u0631 \u0645\u062b\u0644 Item: item: Item",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "\u0648 \u0628\u0627 \u0647\u0645\u06cc\u0646 \u0627\u0639\u0644\u0627\u0646 \u062a\u0645\u0627\u0645\u06cc \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u0632\u06cc\u0631 \u062f\u0631 \u062f\u0633\u062a\u0631\u0633 \u0642\u0631\u0627\u0631 \u0645\u06cc\u06af\u06cc\u0631\u062f: \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0648\u06cc\u0631\u0627\u06cc\u0634\u06af\u0631 \u0645\u062a\u0646\u06cc \u0634\u0627\u0645\u0644: \u062a\u06a9\u0645\u06cc\u0644 \u06a9\u062f \u0628\u0631\u0631\u0633\u06cc \u0627\u0646\u0648\u0627\u0639 \u062f\u0627\u062f\u0647 \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u062f\u0627\u062f\u0647: \u062e\u0637\u0627\u0647\u0627\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0648 \u0645\u0634\u062e\u0635 \u062f\u0631 \u0647\u0646\u06af\u0627\u0645 \u0646\u0627\u0645\u0639\u062a\u0628\u0631 \u0628\u0648\u062f\u0646 \u062f\u0627\u062f\u0647 \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u062d\u062a\u06cc \u0628\u0631\u0627\u06cc \u0627\u0634\u06cc\u0627\u0621 JSON \u062a\u0648 \u062f\u0631 \u062a\u0648 \u062a\u0628\u062f\u06cc\u0644 \u062f\u0627\u062f\u0647 \u0648\u0631\u0648\u062f\u06cc: \u06a9\u0647 \u0627\u0632 \u0634\u0628\u06a9\u0647 \u0631\u0633\u06cc\u062f\u0647 \u0628\u0647 \u0627\u0646\u0648\u0627\u0639 \u0648 \u062f\u0627\u062f\u0647 \u067e\u0627\u06cc\u062a\u0648\u0646\u06cc \u0627\u06cc\u0646 \u062f\u0627\u062f\u0647 \u0634\u0627\u0645\u0644: JSON \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0633\u06cc\u0631 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u067e\u0631\u0633\u0645\u0627\u0646 \u06a9\u0648\u06a9\u06cc\u0647\u0627 \u0633\u0631\u0622\u06cc\u0646\u062f\u0647\u0627 (\u0647\u062f\u0631\u0647\u0627) \u0641\u0631\u0645\u0647\u0627 \u0641\u0627\u06cc\u0644\u0647\u0627",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "\u062a\u0628\u062f\u06cc\u0644 \u062f\u0627\u062f\u0647 \u062e\u0631\u0648\u062c\u06cc: \u062a\u0628\u062f\u06cc\u0644 \u0627\u0632 \u0627\u0646\u0648\u0627\u0639 \u0648 \u062f\u0627\u062f\u0647 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0628\u0647 \u062f\u0627\u062f\u0647 \u0634\u0628\u06a9\u0647 (\u0645\u0627\u0646\u0646\u062f JSON): \u062a\u0628\u062f\u06cc\u0644 \u0627\u0646\u0648\u0627\u0639 \u062f\u0627\u062f\u0647 \u067e\u0627\u06cc\u062a\u0648\u0646\u06cc (str, int, float, bool, list \u0648 \u063a\u06cc\u0631\u0647) \u0627\u0634\u06cc\u0627\u0621 datetime \u0627\u0634\u06cc\u0627\u0621 UUID q\u0645\u062f\u0644\u0647\u0627\u06cc \u067e\u0627\u06cc\u06af\u0627\u0647\u062f\u0627\u062f\u0647 \u0648 \u0645\u0648\u0627\u0631\u062f \u0628\u06cc\u0634\u0645\u0627\u0631 \u062f\u06cc\u06af\u0631 \u062f\u0648 \u0645\u062f\u0644 \u0645\u0633\u062a\u0646\u062f API \u062a\u0639\u0627\u0645\u0644\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 : Swagger UI ReDoc \u0628\u0647 \u0645\u062b\u0627\u0644 \u0642\u0628\u0644\u06cc \u0628\u0627\u0632 \u0645\u06cc\u06af\u0631\u062f\u06cc\u0645 \u062f\u0631 \u0627\u06cc\u0646 \u0645\u062b\u0627\u0644 FastAPI \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0631\u0627 \u0627\u0646\u062c\u0627\u0645 \u0645\u06cc\u062f\u0647\u062f: \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 item_id \u062f\u0631 \u0645\u0633\u06cc\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc GET \u0648 PUT \u0645\u0648\u062c\u0648\u062f \u0627\u0633\u062a \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 item_id \u062f\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc GET \u0648 PUT \u0627\u0632 \u0646\u0648\u0639 int \u0627\u0633\u062a",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "\u0627\u06af\u0631 \u063a\u06cc\u0631 \u0627\u0632 \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0628\u0627\u0634\u062f \u0633\u0631\u0648\u06cc\u0633\u06af\u06cc\u0631\u0646\u062f\u0647 \u062e\u0637\u0627\u06cc \u0645\u0641\u06cc\u062f \u0648 \u0645\u0634\u062e\u0635\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u062e\u0648\u0627\u0647\u062f \u06a9\u0631\u062f \u0628\u0631\u0631\u0633\u06cc \u0648\u062c\u0648\u062f \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u067e\u0631\u0633\u0645\u0627\u0646 \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc q (\u0645\u0627\u0646\u0646\u062f http://127 0 0 1:8000/items/foo q=somequery) \u062f\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc GET \u0627\u0632 \u0622\u0646\u062c\u0627 \u06a9\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 q \u0628\u0627 = None \u0645\u0642\u062f\u0627\u0631\u062f\u0647\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a \u0627\u06cc\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0627\u0633\u062a \u0627\u06af\u0631 \u0627\u0632 \u0645\u0642\u062f\u0627\u0631 \u0627\u0648\u0644\u06cc\u0647 None \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u06a9\u0646\u06cc\u0645 \u0627\u06cc\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0627\u0644\u0632\u0627\u0645\u06cc \u062e\u0648\u0627\u0647\u062f \u0628\u0648\u062f (\u0647\u0645\u0627\u0646\u0646\u062f \u0628\u062f\u0646\u0647 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u062f\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a PUT)",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "\u0628\u0631\u0627\u06cc \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc PUT \u0628\u0647 \u0622\u062f\u0631\u0633 /items/{item_id} \u0628\u062f\u0646\u0647 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0628\u0627\u06cc\u062f \u0627\u0632 \u0646\u0648\u0639 JSON \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u0628\u0627\u0634\u062f: \u0628\u0631\u0631\u0633\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u0628\u062f\u0646\u0647 \u0634\u0627\u0645\u0644 \u0641\u06cc\u0644\u062f\u06cc \u0628\u0627 \u0646\u0627\u0645 name \u0648 \u0627\u0632 \u0646\u0648\u0639 str \u0627\u0633\u062a \u0628\u0631\u0631\u0633\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u0628\u062f\u0646\u0647 \u0634\u0627\u0645\u0644 \u0641\u06cc\u0644\u062f\u06cc \u0628\u0627 \u0646\u0627\u0645 price \u0648 \u0627\u0632 \u0646\u0648\u0639 float \u0627\u0633\u062a \u0628\u0631\u0631\u0633\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u0628\u062f\u0646\u0647 \u0634\u0627\u0645\u0644 \u0641\u06cc\u0644\u062f\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0628\u0627 \u0646\u0627\u0645 is_offer \u0627\u0633\u062a \u06a9\u0647 \u062f\u0631 \u0635\u0648\u0631\u062a \u0648\u062c\u0648\u062f \u0628\u0627\u06cc\u062f \u0627\u0632 \u0646\u0648\u0639 bool \u0628\u0627\u0634\u062f \u062a\u0645\u0627\u0645\u06cc \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0628\u0631\u0627\u06cc \u0627\u0634\u06cc\u0627\u0621 JSON \u062f\u0631 \u0647\u0631 \u0639\u0645\u0642\u06cc \u0642\u0627\u0628\u0644 \u0628\u0631\u0631\u0633\u06cc \u0645\u06cc\u0628\u0627\u0634\u062f \u062a\u0628\u062f\u06cc\u0644 \u0627\u0632/\u0628\u0647 JSON \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0645\u0633\u062a\u0646\u062f\u0633\u0627\u0632\u06cc \u0647\u0645\u0647 \u0686\u06cc\u0632 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 OpenAPI \u06a9\u0647 \u0645\u06cc\u062a\u0648\u0627\u0646 \u0627\u0632 \u0622\u0646 \u0628\u0631\u0627\u06cc \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0631\u062f: \u0633\u06cc\u0633\u062a\u0645 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062a\u0639\u0627\u0645\u0644\u06cc",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        },
        {
          "content": "\u062a\u0648\u0644\u06cc\u062f \u062e\u0648\u062f\u06a9\u0627\u0631 \u06a9\u062f \u0633\u0631\u0648\u06cc\u0633\u06af\u06cc\u0631\u0646\u062f\u0647 \u062f\u0631 \u0632\u0628\u0627\u0646\u0647\u0627\u06cc \u0628\u0631\u0646\u0627\u0645\u0647\u0646\u0648\u06cc\u0633\u06cc \u0628\u06cc\u0634\u0645\u0627\u0631 \u0641\u0631\u0627\u0647\u0645 \u0633\u0627\u0632\u06cc \u06f2 \u0645\u0633\u062a\u0646\u062f \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u0648\u0628 \u0628\u0647 \u0635\u0648\u0631\u062a \u067e\u06cc\u0634\u0641\u0631\u0636 \u0645\u0648\u0627\u0631\u062f \u0630\u06a9\u0631 \u0634\u062f\u0647 \u062a\u0646\u0647\u0627 \u067e\u0627\u0631\u0647\u0627\u06cc \u0627\u0632 \u0648\u06cc\u0698\u06af\u06cc\u0647\u0627\u06cc \u0628\u06cc\u0634\u0645\u0627\u0631 FastAPI \u0627\u0633\u062a \u0627\u0645\u0627 \u0627\u06cc\u062f\u0647\u0627\u06cc \u06a9\u0644\u06cc \u0627\u0632 \u0637\u0631\u0632 \u06a9\u0627\u0631 \u0622\u0646 \u062f\u0631 \u0627\u062e\u062a\u06cc\u0627\u0631 \u0642\u0631\u0627\u0631 \u0645\u06cc\u062f\u0647\u062f \u062e\u0637 \u0632\u06cc\u0631 \u0631\u0627 \u0628\u0647 \u0627\u06cc\u0646 \u0635\u0648\u0631\u062a \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0647\u06cc\u062f: return {\"item_name\": item name, \"item_id\": item_id} \u0627\u0632: \"item_name\": item name \u0628\u0647: \"item_price\": item price",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_22"
        },
        {
          "content": "\u062f\u0631 \u062d\u06cc\u0646 \u062a\u0627\u06cc\u067e \u06a9\u0631\u062f\u0646 \u062a\u0648\u062c\u0647 \u06a9\u0646\u06cc\u062f \u06a9\u0647 \u0686\u06af\u0648\u0646\u0647 \u0648\u06cc\u0631\u0627\u06cc\u0634\u06af\u0631 \u0648\u06cc\u0698\u06af\u06cc\u0647\u0627\u06cc \u06a9\u0644\u0627\u0633 Item \u0631\u0627 \u062a\u0634\u062e\u06cc\u0635 \u062f\u0627\u062f\u0647 \u0648 \u0628\u0647 \u062a\u06a9\u0645\u06cc\u0644 \u062e\u0648\u062f\u06a9\u0627\u0631 \u0622\u0646\u0647\u0627 \u06a9\u0645\u06a9 \u0645\u06cc\u06a9\u0646\u062f: \u0628\u0631\u0627\u06cc \u0645\u0634\u0627\u0647\u062f\u0647 \u0645\u062b\u0627\u0644\u0647\u0627\u06cc \u06a9\u0627\u0645\u0644\u062a\u0631 \u06a9\u0647 \u0634\u0627\u0645\u0644 \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u0628\u06cc\u0634\u062a\u0631\u06cc \u0627\u0632 FastAPI \u0628\u0627\u0634\u062f \u0628\u0647 \u0628\u062e\u0634 \u0622\u0645\u0648\u0632\u0634 - \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631 \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f \u0647\u0634\u062f\u0627\u0631 \u0627\u0633\u067e\u0648\u06cc\u0644: \u0628\u062e\u0634 \u0622\u0645\u0648\u0632\u0634 - \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631 \u0634\u0627\u0645\u0644 \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a: \u0627\u0639\u0644\u0627\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0648\u062c\u0648\u062f \u062f\u0631 \u0628\u062e\u0634\u0647\u0627\u06cc \u062f\u06cc\u06af\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0634\u0627\u0645\u0644: \u0633\u0631\u0622\u06cc\u0646\u062f (\u0647\u062f\u0631)\u0647\u0627 \u06a9\u0648\u06a9\u06cc\u0647\u0627 \u0641\u06cc\u0644\u062f\u0647\u0627\u06cc \u0641\u0631\u0645 \u0648 \u0641\u0627\u06cc\u0644\u0647\u0627 \u0686\u06af\u0648\u0646\u06af\u06cc \u062a\u0646\u0638\u06cc\u0645 \u0645\u062d\u062f\u0648\u062f\u06cc\u062a\u0647\u0627\u06cc \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u0645\u062b\u0627\u0644 maximum_length \u06cc\u0627 regex \u0633\u06cc\u0633\u062a\u0645 Dependency Injection \u0642\u0648\u06cc \u0648 \u06a9\u0627\u0631\u0628\u0631\u062f\u06cc",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_23"
        },
        {
          "content": "\u0627\u0645\u0646\u06cc\u062a \u0648 \u062a\u0627\u06cc\u06cc\u062f \u0647\u0648\u06cc\u062a, \u0634\u0627\u0645\u0644 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u0632 OAuth2 \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 JWT tokens \u0648 HTTP Basic \u062a\u06a9\u0646\u06cc\u06a9 \u067e\u06cc\u0634\u0631\u0641\u062a\u0647 \u0628\u0631\u0627\u06cc \u062a\u0639\u0631\u06cc\u0641 \u0645\u062f\u0644\u0647\u0627\u06cc \u0686\u0646\u062f \u0633\u0637\u062d\u06cc JSON (\u0628\u0631 \u0627\u0633\u0627\u0633 Pydantic) \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u0627\u0636\u0627\u0641\u06cc \u062f\u06cc\u06af\u0631 (\u0628\u0631 \u0627\u0633\u0627\u0633 Starlette) \u0634\u0627\u0645\u0644: \u0648\u0628\u0633\u0648\u06a9\u062a GraphQL \u062a\u0633\u062a\u0647\u0627\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0622\u0633\u0627\u0646 \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 HTTPX \u0648 pytest CORS Cookie Sessions \u0648 \u0645\u0648\u0627\u0631\u062f \u0628\u06cc\u0634\u0645\u0627\u0631 \u062f\u06cc\u06af\u0631",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_24"
        },
        {
          "content": "\u06a9\u0627\u0631\u0627\u06cc\u06cc \u0645\u0639\u06cc\u0627\u0631 (\u0628\u0646\u0686\u0645\u0627\u0631\u06a9)\u0647\u0627\u06cc \u0645\u0633\u062a\u0642\u0644 TechEmpower \u062d\u0627\u06a9\u06cc \u0627\u0632 \u0622\u0646 \u0627\u0633\u062a \u06a9\u0647 \u0628\u0631\u0646\u0627\u0645\u0647\u0647\u0627\u06cc FastAPI \u06a9\u0647 \u062a\u062d\u062a Uvicorn \u0627\u062c\u0631\u0627 \u0645\u06cc\u0634\u0648\u062f \u06cc\u06a9\u06cc \u0627\u0632 \u0633\u0631\u06cc\u0639\u062a\u0631\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u0647\u0627\u06cc \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0627\u0633\u062a \u06a9\u0647 \u06a9\u0645\u06cc \u0636\u0639\u06cc\u0641\u062a\u0631 \u0627\u0632 Starlette \u0648 Uvicorn \u0639\u0645\u0644 \u0645\u06cc\u06a9\u0646\u062f (\u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0648 \u0633\u0631\u0648\u0631\u06cc \u06a9\u0647 FastAPI \u0628\u0631 \u0627\u0633\u0627\u0633 \u0622\u0646\u0647\u0627 \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u0627\u0633\u062a) (*) \u0628\u0631\u0627\u06cc \u062f\u0631\u06a9 \u0628\u0647\u062a\u0631\u06cc \u0627\u0632 \u0627\u06cc\u0646 \u0645\u0648\u0636\u0648\u0639 \u0628\u0647 \u0628\u062e\u0634 \u0628\u0646\u0686\u0645\u0627\u0631\u06a9\u0647\u0627 \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 Pydantic: email-validator - \u0628\u0631\u0627\u06cc \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0622\u062f\u0631\u0633\u0647\u0627\u06cc \u0627\u06cc\u0645\u06cc\u0644 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 Starlette: HTTPX - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0645\u06cc\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 TestClient \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_25"
        },
        {
          "content": "aiofiles - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0645\u06cc\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 FileResponse \u0648 StaticFiles \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f jinja2 - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 \u067e\u06cc\u06a9\u0631\u0628\u0646\u062f\u06cc \u067e\u06cc\u0634\u0641\u0631\u0636 \u0628\u0631\u0627\u06cc \u0642\u0627\u0644\u0628\u0647\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f python-multipart - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 request form() \u0627\u0632 \u0642\u0627\u0628\u0644\u06cc\u062a \"\u062a\u062c\u0632\u06cc\u0647 (parse)\" \u0641\u0631\u0645 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f itsdangerous - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u06cc\u062f \u0627\u0632 SessionMiddleware \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u06a9\u0646\u06cc\u062f pyyaml - \u0628\u0631\u0627\u06cc \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc SchemaGenerator \u062f\u0631 Starlet (\u0628\u0647 \u0627\u062d\u062a\u0645\u0627\u0644 \u0632\u06cc\u0627\u062f \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u06a9\u0631\u062f\u0646 \u0628\u0627 FastAPI \u0628\u0647 \u0622\u0646 \u0646\u06cc\u0627\u0632\u06cc \u067e\u06cc\u062f\u0627 \u0646\u0645\u06cc\u06a9\u0646\u06cc\u062f) graphene - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0627\u0632 GraphQLApp \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_26"
        },
        {
          "content": "\u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 FastAPI / Starlette: uvicorn - \u0628\u0631\u0627\u06cc \u0633\u0631\u0648\u0631 \u0627\u062c\u0631\u0627 \u06a9\u0646\u0646\u062f\u0647 \u0628\u0631\u0646\u0627\u0645\u0647 \u0648\u0628 orjson - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 ORJSONResponse \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f ujson - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 UJSONResponse \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f \u0645\u06cc\u062a\u0648\u0627\u0646 \u0647\u0645\u0647 \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0631\u0627 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u062f\u0633\u062a\u0648\u0631 pip install fastapi[all] \u0628\u0647 \u0635\u0648\u0631\u062a \u06cc\u06a9\u062c\u0627 \u0646\u0635\u0628 \u06a9\u0631\u062f \u0644\u0627\u06cc\u0633\u0646\u0633 \u0627\u06cc\u0646 \u067e\u0631\u0648\u0698\u0647 \u0645\u0634\u0645\u0648\u0644 \u0642\u0648\u0627\u0646\u06cc\u0646 \u0648 \u0645\u0642\u0631\u0631\u0627\u062a \u0644\u0627\u06cc\u0633\u0646\u0633 MIT \u0627\u0633\u062a \u0628\u0631\u06af\u0634\u062a \u0628\u0647 \u0628\u0627\u0644\u0627",
          "url": "https://fastapi.tiangolo.com/fa/",
          "library": "fastapi",
          "chunk_id": "fastapi_27"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/fr/",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI Table des mati\u00e8res Sponsors Opinions Typer, le FastAPI des CLI Pr\u00e9requis Installation Exemple Cr\u00e9ez Lancez V\u00e9rifiez Documentation API interactive Documentation API alternative Exemple plus pouss\u00e9 Plus loin avec la documentation API interactive Plus loin avec la documentation API alternative En r\u00e9sum\u00e9 Performance D\u00e9pendances facultatives Licence Fonctionnalit\u00e9s Apprendre Apprendre Introduction aux Types Python Concurrence et les mots-cl\u00e9s async et await Environment Variables Virtual Environments Tutoriel - Guide utilisateur - Introduction Tutoriel - Guide utilisateur - Introduction D\u00e9marrage Param\u00e8tres de chemin Param\u00e8tres de requ\u00eate Corps de la requ\u00eate Param\u00e8tres de requ\u00eate et validations de cha\u00eenes de caract\u00e8res Param\u00e8tres de chemin et validations num\u00e9riques Query Parameter Models Body - Param\u00e8tres multiples Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files T\u00e2ches d'arri\u00e8re-plan Metadata and Docs URLs Static Files Testing D\u00e9bogage Guide de l'utilisateur avanc\u00e9 Guide de l'utilisateur avanc\u00e9 Configuration avanc\u00e9e des param\u00e8tres de chemin Codes HTTP suppl\u00e9mentaires Renvoyer directement une r\u00e9ponse Custom Response - HTML, Stream, File, others R\u00e9ponses suppl\u00e9mentaires dans OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI D\u00e9ploiement D\u00e9ploiement \u00c0 propos des versions de FastAPI \u00c0 propos de HTTPS Ex\u00e9cuter un serveur manuellement - Uvicorn Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers D\u00e9ployer avec Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Obtenir de l'aide Development - Contributing G\u00e9n\u00e9ration de projets - Mod\u00e8le External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, inspiration et comparaisons Histoire, conception et avenir Test de performance Repository Management Release Notes Table des mati\u00e8res Sponsors Opinions Typer, le FastAPI des CLI Pr\u00e9requis Installation Exemple Cr\u00e9ez Lancez V\u00e9rifiez Documentation API interactive Documentation API alternative Exemple plus pouss\u00e9 Plus loin avec la documentation API interactive Plus loin avec la documentation API alternative En r\u00e9sum\u00e9 Performance D\u00e9pendances facultatives Licence FastAPI Framework FastAPI, haute performance, facile \u00e0 apprendre, rapide \u00e0 coder, pr\u00eat pour la production Documentation : https://fastapi.tiangolo.com Code Source : https://github.com/fastapi/fastapi FastAPI est un framework web moderne et rapide (haute performance) pour la cr\u00e9ation d'API avec Python, bas\u00e9 sur les annotations de type standard de Python. Les principales fonctionnalit\u00e9s sont : Rapidit\u00e9 : De tr\u00e8s hautes performances, au niveau de NodeJS et Go (gr\u00e2ce \u00e0 Starlette et Pydantic). L'un des frameworks Python les plus rapides. Rapide \u00e0 coder : Augmente la vitesse de d\u00e9veloppement des fonctionnalit\u00e9s d'environ 200  \u00e0 300 . * Moins de bugs : R\u00e9duit d'environ 40  les erreurs induites par le d\u00e9veloppeur. * Intuitif : Excellente compatibilit\u00e9 avec les IDE. Compl\u00e9tion compl\u00e8te. Moins de temps pass\u00e9 \u00e0 d\u00e9boguer. Facile : Con\u00e7u pour \u00eatre facile \u00e0 utiliser et \u00e0 apprendre. Moins de temps pass\u00e9 \u00e0 lire la documentation. Concis : Diminue la duplication de code. De nombreuses fonctionnalit\u00e9s li\u00e9es \u00e0 la d\u00e9claration de chaque param\u00e8tre. Moins de bugs. Robuste : Obtenez un code pr\u00eat pour la production. Avec une documentation interactive automatique. Bas\u00e9 sur des normes : Bas\u00e9 sur (et enti\u00e8rement compatible avec) les standards ouverts pour les APIs : OpenAPI (pr\u00e9c\u00e9demment connu sous le nom de Swagger) et JSON Schema. * estimation bas\u00e9e sur des tests d'une \u00e9quipe de d\u00e9veloppement interne, construisant des applications de production. Sponsors Other sponsors Opinions \"[...] J'utilise beaucoup FastAPI ces derniers temps. [...] Je pr\u00e9vois de l'utiliser dans mon \u00e9quipe pour tous les services de ML chez Microsoft. Certains d'entre eux seront int\u00e9gr\u00e9s dans le coeur de Windows et dans certains produits Office.\" Kabir Khan - Microsoft (ref) \"Nous avons adopt\u00e9 la biblioth\u00e8que FastAPI pour cr\u00e9er un serveur REST qui peut \u00eatre interrog\u00e9 pour obtenir des pr\u00e9dictions. [pour Ludwig]\" Piero Molino, Yaroslav Dudin et Sai Sumanth Miryala - Uber (ref) \"Netflix a le plaisir d'annoncer la sortie en open-source de notre framework d'orchestration de gestion de crise : Dispatch ! [construit avec FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Je suis tr\u00e8s enthousiaste \u00e0 propos de FastAPI. C'est un bonheur !\" Brian Okken - Auteur du podcast Python Bytes (ref) \"Honn\u00eatement, ce que vous avez construit a l'air super solide et \u00e9l\u00e9gant. A bien des \u00e9gards, c'est comme \u00e7a que je voulais que Hug soit - c'est vraiment inspirant de voir quelqu'un construire \u00e7a.\" Timothy Crosley - Cr\u00e9ateur de Hug (ref) \"Si vous cherchez \u00e0 apprendre un framework moderne pour cr\u00e9er des APIs REST, regardez FastAPI [...] C'est rapide, facile \u00e0 utiliser et \u00e0 apprendre [...]\" \"Nous sommes pass\u00e9s \u00e0 FastAPI pour nos APIs [...] Je pense que vous l'aimerez [...]\" Ines Montani - Matthew Honnibal - Fondateurs de Explosion AI - Cr\u00e9ateurs de spaCy (ref) - (ref) \"Si quelqu'un cherche \u00e0 construire une API Python de production, je recommande vivement FastAPI. Il est bien con\u00e7u, simple \u00e0 utiliser et tr\u00e8s \u00e9volutif. Il est devenu un composant cl\u00e9 dans notre strat\u00e9gie de d\u00e9veloppement API first et il est \u00e0 l'origine de nombreux automatismes et services tels que notre ing\u00e9nieur virtuel TAC.\" Deon Pillsbury - Cisco (ref) Typer, le FastAPI des CLI Si vous souhaitez construire une application CLI utilisable dans un terminal au lieu d'une API web, regardez Typer. Typer est le petit fr\u00e8re de FastAPI. Et il est destin\u00e9 \u00e0 \u00eatre le FastAPI des CLI.   Pr\u00e9requis FastAPI repose sur les \u00e9paules de g\u00e9ants : Starlette pour les parties web. Pydantic pour les parties donn\u00e9es. Installation  pip install fastapi --- 100 Vous aurez \u00e9galement besoin d'un serveur ASGI pour la production tel que Uvicorn ou Hypercorn.  pip install \"uvicorn[standard]\" --- 100 Exemple Cr\u00e9ez Cr\u00e9ez un fichier main.py avec : from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Ou utilisez async def ... Si votre code utilise async / await, utilisez async def : from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Note Si vous n'\u00eates pas familier avec cette notion, consultez la section \"Vous \u00eates press\u00e9s ?\" \u00e0 propos de async et await dans la documentation. Lancez Lancez le serveur avec :  uvicorn main:app --reload INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup. INFO: Application startup complete. \u00c0 propos de la commande uvicorn main:app --reload ... La commande uvicorn main:app fait r\u00e9f\u00e9rence \u00e0 : main : le fichier main.py (le \"module\" Python). app : l'objet cr\u00e9\u00e9 \u00e0 l'int\u00e9rieur de main.py avec la ligne app = FastAPI(). --reload : fait red\u00e9marrer le serveur apr\u00e8s des changements de code. \u00c0 n'utiliser que pour le d\u00e9veloppement. V\u00e9rifiez Ouvrez votre navigateur \u00e0 l'adresse http://127.0.0.1:8000/items/5?q=somequery. Vous obtenez alors cette r\u00e9ponse JSON : {\"item_id\": 5, \"q\": \"somequery\"} Vous venez de cr\u00e9er une API qui : Re\u00e7oit les requ\u00eates HTTP pour les chemins / et /items/{item_id}. Les deux chemins acceptent des op\u00e9rations GET (\u00e9galement connu sous le nom de m\u00e9thodes HTTP). Le chemin /items/{item_id} a un param\u00e8tre item_id qui doit \u00eatre un int. Le chemin /items/{item_id} a un param\u00e8tre de requ\u00eate optionnel q de type str. Documentation API interactive Maintenant, rendez-vous sur http://127.0.0.1:8000/docs. Vous verrez la documentation interactive automatique de l'API (fournie par Swagger UI) : Documentation API alternative Et maintenant, rendez-vous sur http://127.0.0.1:8000/redoc. Vous verrez la documentation interactive automatique de l'API (fournie par ReDoc) : Exemple plus pouss\u00e9 Maintenant, modifiez le fichier main.py pour recevoir le corps d'une requ\u00eate PUT. D\u00e9clarez ce corps en utilisant les types Python standards, gr\u00e2ce \u00e0 Pydantic. from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} Le serveur se recharge normalement automatiquement (car vous avez pens\u00e9 \u00e0 --reload dans la commande uvicorn ci-dessus). Plus loin avec la documentation API interactive Maintenant, rendez-vous sur http://127.0.0.1:8000/docs. La documentation interactive de l'API sera automatiquement mise \u00e0 jour, y compris le nouveau corps de la requ\u00eate : Cliquez sur le bouton \"Try it out\", il vous permet de renseigner les param\u00e8tres et d'interagir directement avec l'API : Cliquez ensuite sur le bouton \"Execute\", l'interface utilisateur communiquera avec votre API, enverra les param\u00e8tres, obtiendra les r\u00e9sultats et les affichera \u00e0 l'\u00e9cran : Plus loin avec la documentation API alternative Et maintenant, rendez-vous sur http://127.0.0.1:8000/redoc. La documentation alternative refl\u00e9tera \u00e9galement le nouveau param\u00e8tre de requ\u00eate et le nouveau corps : En r\u00e9sum\u00e9 En r\u00e9sum\u00e9, vous d\u00e9clarez une fois les types de param\u00e8tres, le corps de la requ\u00eate, etc. en tant que param\u00e8tres de fonction. Vous faites cela avec les types Python standard modernes. Vous n'avez pas \u00e0 apprendre une nouvelle syntaxe, les m\u00e9thodes ou les classes d'une biblioth\u00e8que sp\u00e9cifique, etc. Juste du Python standard. Par exemple, pour un int: item_id: int ou pour un mod\u00e8le Item plus complexe : item: Item ... et avec cette d\u00e9claration unique, vous obtenez : Une assistance dans votre IDE, notamment : la compl\u00e9tion. la v\u00e9rification des types. La validation des donn\u00e9es : des erreurs automatiques et claires lorsque les donn\u00e9es ne sont pas valides. une validation m\u00eame pour les objets JSON profond\u00e9ment imbriqu\u00e9s. Une conversion des donn\u00e9es d'entr\u00e9e : venant du r\u00e9seau et allant vers les donn\u00e9es et types de Python, permettant de lire : le JSON. les param\u00e8tres du chemin. les param\u00e8tres de la requ\u00eate. les cookies. les en-t\u00eates. les formulaires. les fichiers. La conversion des donn\u00e9es de sortie : conversion des donn\u00e9es et types Python en donn\u00e9es r\u00e9seau (au format JSON), permettant de convertir : les types Python (str, int, float, bool, list, etc). les objets datetime. les objets UUID. les mod\u00e8les de base de donn\u00e9es. ... et beaucoup plus. La documentation API interactive automatique, avec 2 interfaces utilisateur au choix : Swagger UI. ReDoc. Pour revenir \u00e0 l'exemple de code pr\u00e9c\u00e9dent, FastAPI permet de : Valider que item_id existe dans le chemin des requ\u00eates GET et PUT. Valider que item_id est de type int pour les requ\u00eates GET et PUT. Si ce n'est pas le cas, le client voit une erreur utile et claire. V\u00e9rifier qu'il existe un param\u00e8tre de requ\u00eate facultatif nomm\u00e9 q (comme dans http://127.0.0.1:8000/items/foo?q=somequery) pour les requ\u00eates GET. Puisque le param\u00e8tre q est d\u00e9clar\u00e9 avec = None, il est facultatif. Sans le None, il serait n\u00e9cessaire (comme l'est le corps de la requ\u00eate dans le cas du PUT). Pour les requ\u00eates PUT vers /items/{item_id}, de lire le corps en JSON : V\u00e9rifier qu'il a un attribut obligatoire name qui devrait \u00eatre un str. V\u00e9rifier qu'il a un attribut obligatoire prix qui doit \u00eatre un float. V\u00e9rifier qu'il a un attribut facultatif is_offer, qui devrait \u00eatre un bool, s'il est pr\u00e9sent. Tout cela fonctionnerait \u00e9galement pour les objets JSON profond\u00e9ment imbriqu\u00e9s. Convertir de et vers JSON automatiquement. Documenter tout avec OpenAPI, qui peut \u00eatre utilis\u00e9 par : Les syst\u00e8mes de documentation interactifs. Les syst\u00e8mes de g\u00e9n\u00e9ration automatique de code client, pour de nombreuses langues. Fournir directement 2 interfaces web de documentation interactive. Nous n'avons fait qu'effleurer la surface, mais vous avez d\u00e9j\u00e0 une id\u00e9e de la fa\u00e7on dont tout cela fonctionne. Essayez de changer la ligne contenant : return {\"item_name\": item.name, \"item_id\": item_id} ... de : ... \"item_name\": item.name ... ... vers : ... \"item_price\": item.price ... ... et voyez comment votre \u00e9diteur compl\u00e9tera automatiquement les attributs et conna\u00eetra leurs types : Pour un exemple plus complet comprenant plus de fonctionnalit\u00e9s, voir le Tutoriel - Guide utilisateur. Spoiler alert : le tutoriel - guide utilisateur inclut : D\u00e9claration de param\u00e8tres provenant d'autres endroits diff\u00e9rents comme : en-t\u00eates., cookies, champs de formulaire et fichiers. L'utilisation de contraintes de validation comme maximum_length ou regex. Un syst\u00e8me d'injection de d\u00e9pendance tr\u00e8s puissant et facile \u00e0 utiliser . S\u00e9curit\u00e9 et authentification, y compris la prise en charge de OAuth2 avec les jetons JWT et l'authentification HTTP Basic. Des techniques plus avanc\u00e9es (mais tout aussi faciles) pour d\u00e9clarer les mod\u00e8les JSON profond\u00e9ment imbriqu\u00e9s (gr\u00e2ce \u00e0 Pydantic). Int\u00e9gration de GraphQL avec Strawberry et d'autres biblioth\u00e8ques. D'obtenir de nombreuses fonctionnalit\u00e9s suppl\u00e9mentaires (gr\u00e2ce \u00e0 Starlette) comme : WebSockets de tester le code tr\u00e8s facilement avec requests et pytest CORS Cookie Sessions ... et plus encore. Performance Les benchmarks TechEmpower ind\u00e9pendants montrent que les applications FastAPI s'ex\u00e9cutant sous Uvicorn sont parmi les frameworks existants en Python les plus rapides , juste derri\u00e8re Starlette et Uvicorn (utilis\u00e9s en interne par FastAPI). (*) Pour en savoir plus, consultez la section Benchmarks. D\u00e9pendances facultatives Utilis\u00e9es par Pydantic: email-validator - pour la validation des adresses email. Utilis\u00e9es par Starlette : requests - Obligatoire si vous souhaitez utiliser TestClient. jinja2 - Obligatoire si vous souhaitez utiliser la configuration de template par d\u00e9faut. python-multipart - Obligatoire si vous souhaitez supporter le \"d\u00e9codage\" de formulaire avec request.form(). itsdangerous - Obligatoire pour la prise en charge de SessionMiddleware. pyyaml - Obligatoire pour le support SchemaGenerator de Starlette (vous n'en avez probablement pas besoin avec FastAPI). Utilis\u00e9es par FastAPI / Starlette : uvicorn - Pour le serveur qui charge et sert votre application. orjson - Obligatoire si vous voulez utiliser ORJSONResponse. ujson - Obligatoire si vous souhaitez utiliser UJSONResponse. Vous pouvez tout installer avec pip install fastapi[all]. Licence Ce projet est soumis aux termes de la licence MIT. Retour en haut de la page",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "uvicorn main:app --reload",
        "uvicorn main:app",
        "app = FastAPI()",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "email-validator",
        "python-multipart",
        "request.form()",
        "itsdangerous",
        "SessionMiddleware",
        "SchemaGenerator",
        "ORJSONResponse",
        "UJSONResponse",
        "pip install fastapi[all]"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI Table des mati\u00e8res Sponsors Opinions Typer, le FastAPI des CLI Pr\u00e9requis Installation Exemple Cr\u00e9ez Lancez V\u00e9rifiez Documentation API interactive Documentation API alternative Exemple plus pouss\u00e9 Plus loin avec la documentation API interactive Plus loin avec la documentation API alternative En r\u00e9sum\u00e9 Performance D\u00e9pendances facultatives Licence Fonctionnalit\u00e9s Apprendre Apprendre Introduction aux Types Python Concurrence et les mots-cl\u00e9s async et await Environment Variables Virtual Environments Tutoriel - Guide utilisateur - Introduction Tutoriel - Guide utilisateur - Introduction D\u00e9marrage Param\u00e8tres de chemin Param\u00e8tres de requ\u00eate Corps de la requ\u00eate Param\u00e8tres de requ\u00eate et validations de cha\u00eenes de caract\u00e8res Param\u00e8tres de chemin et validations num\u00e9riques Query Parameter Models Body - Param\u00e8tres multiples Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files T\u00e2ches d'arri\u00e8re-plan Metadata and Docs URLs Static Files Testing D\u00e9bogage Guide de l'utilisateur avanc\u00e9 Guide de l'utilisateur avanc\u00e9 Configuration avanc\u00e9e des param\u00e8tres de chemin Codes HTTP suppl\u00e9mentaires Renvoyer directement une r\u00e9ponse Custom Response - HTML, Stream, File, others R\u00e9ponses suppl\u00e9mentaires dans OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI D\u00e9ploiement D\u00e9ploiement \u00c0 propos des versions de FastAPI \u00c0 propos de HTTPS Ex\u00e9cuter un serveur manuellement - Uvicorn Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers D\u00e9ployer avec Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Obtenir de l'aide Development - Contributing G\u00e9n\u00e9ration de projets - Mod\u00e8le External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, inspiration et comparaisons Histoire, conception et avenir Test de performance Repository Management Release Notes Table des mati\u00e8res Sponsors Opinions Typer, le FastAPI des CLI Pr\u00e9requis Installation Exemple Cr\u00e9ez Lancez V\u00e9rifiez Documentation API interactive Documentation API alternative Exemple plus pouss\u00e9 Plus loin avec la documentation API interactive Plus loin avec la documentation API alternative En r\u00e9sum\u00e9 Performance D\u00e9pendances facultatives Licence FastAPI Framework FastAPI, haute performance, facile \u00e0 apprendre, rapide \u00e0 coder, pr\u00eat pour la production Documentation : https://fastapi",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com Code Source : https://github com/fastapi/fastapi FastAPI est un framework web moderne et rapide (haute performance) pour la cr\u00e9ation d'API avec Python, bas\u00e9 sur les annotations de type standard de Python Les principales fonctionnalit\u00e9s sont : Rapidit\u00e9 : De tr\u00e8s hautes performances, au niveau de NodeJS et Go (gr\u00e2ce \u00e0 Starlette et Pydantic) L'un des frameworks Python les plus rapides Rapide \u00e0 coder : Augmente la vitesse de d\u00e9veloppement des fonctionnalit\u00e9s d'environ 200  \u00e0 300",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "* Moins de bugs : R\u00e9duit d'environ 40  les erreurs induites par le d\u00e9veloppeur * Intuitif : Excellente compatibilit\u00e9 avec les IDE Compl\u00e9tion compl\u00e8te Moins de temps pass\u00e9 \u00e0 d\u00e9boguer Facile : Con\u00e7u pour \u00eatre facile \u00e0 utiliser et \u00e0 apprendre Moins de temps pass\u00e9 \u00e0 lire la documentation Concis : Diminue la duplication de code De nombreuses fonctionnalit\u00e9s li\u00e9es \u00e0 la d\u00e9claration de chaque param\u00e8tre Moins de bugs Robuste : Obtenez un code pr\u00eat pour la production",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "Avec une documentation interactive automatique Bas\u00e9 sur des normes : Bas\u00e9 sur (et enti\u00e8rement compatible avec) les standards ouverts pour les APIs : OpenAPI (pr\u00e9c\u00e9demment connu sous le nom de Swagger) et JSON Schema * estimation bas\u00e9e sur des tests d'une \u00e9quipe de d\u00e9veloppement interne, construisant des applications de production Sponsors Other sponsors Opinions \"[ ] J'utilise beaucoup FastAPI ces derniers temps [",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "] Je pr\u00e9vois de l'utiliser dans mon \u00e9quipe pour tous les services de ML chez Microsoft Certains d'entre eux seront int\u00e9gr\u00e9s dans le coeur de Windows et dans certains produits Office \" Kabir Khan - Microsoft (ref) \"Nous avons adopt\u00e9 la biblioth\u00e8que FastAPI pour cr\u00e9er un serveur REST qui peut \u00eatre interrog\u00e9 pour obtenir des pr\u00e9dictions",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "[pour Ludwig]\" Piero Molino, Yaroslav Dudin et Sai Sumanth Miryala - Uber (ref) \"Netflix a le plaisir d'annoncer la sortie en open-source de notre framework d'orchestration de gestion de crise : Dispatch [construit avec FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Je suis tr\u00e8s enthousiaste \u00e0 propos de FastAPI C'est un bonheur \" Brian Okken - Auteur du podcast Python Bytes (ref) \"Honn\u00eatement, ce que vous avez construit a l'air super solide et \u00e9l\u00e9gant",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "A bien des \u00e9gards, c'est comme \u00e7a que je voulais que Hug soit - c'est vraiment inspirant de voir quelqu'un construire \u00e7a \" Timothy Crosley - Cr\u00e9ateur de Hug (ref) \"Si vous cherchez \u00e0 apprendre un framework moderne pour cr\u00e9er des APIs REST, regardez FastAPI [ ] C'est rapide, facile \u00e0 utiliser et \u00e0 apprendre [ ]\" \"Nous sommes pass\u00e9s \u00e0 FastAPI pour nos APIs [ ] Je pense que vous l'aimerez [",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "]\" Ines Montani - Matthew Honnibal - Fondateurs de Explosion AI - Cr\u00e9ateurs de spaCy (ref) - (ref) \"Si quelqu'un cherche \u00e0 construire une API Python de production, je recommande vivement FastAPI Il est bien con\u00e7u, simple \u00e0 utiliser et tr\u00e8s \u00e9volutif Il est devenu un composant cl\u00e9 dans notre strat\u00e9gie de d\u00e9veloppement API first et il est \u00e0 l'origine de nombreux automatismes et services tels que notre ing\u00e9nieur virtuel TAC",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "\" Deon Pillsbury - Cisco (ref) Typer, le FastAPI des CLI Si vous souhaitez construire une application CLI utilisable dans un terminal au lieu d'une API web, regardez Typer Typer est le petit fr\u00e8re de FastAPI Et il est destin\u00e9 \u00e0 \u00eatre le FastAPI des CLI Pr\u00e9requis FastAPI repose sur les \u00e9paules de g\u00e9ants : Starlette pour les parties web Pydantic pour les parties donn\u00e9es",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "Installation  pip install fastapi --- 100 Vous aurez \u00e9galement besoin d'un serveur ASGI pour la production tel que Uvicorn ou Hypercorn pip install \"uvicorn[standard]\" --- 100 Exemple Cr\u00e9ez Cr\u00e9ez un fichier main py avec : from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Ou utilisez async def",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "Si votre code utilise async / await, utilisez async def : from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Note Si vous n'\u00eates pas familier avec cette notion, consultez la section \"Vous \u00eates press\u00e9s \" \u00e0 propos de async et await dans la documentation",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "Lancez Lancez le serveur avec :  uvicorn main:app --reload INFO: Uvicorn running on http://127 0 0 1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup INFO: Application startup complete \u00c0 propos de la commande uvicorn main:app --reload La commande uvicorn main:app fait r\u00e9f\u00e9rence \u00e0 : main : le fichier main py (le \"module\" Python) app : l'objet cr\u00e9\u00e9 \u00e0 l'int\u00e9rieur de main py avec la ligne app = FastAPI()",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "--reload : fait red\u00e9marrer le serveur apr\u00e8s des changements de code \u00c0 n'utiliser que pour le d\u00e9veloppement V\u00e9rifiez Ouvrez votre navigateur \u00e0 l'adresse http://127 0 0 1:8000/items/5 q=somequery Vous obtenez alors cette r\u00e9ponse JSON : {\"item_id\": 5, \"q\": \"somequery\"} Vous venez de cr\u00e9er une API qui : Re\u00e7oit les requ\u00eates HTTP pour les chemins / et /items/{item_id} Les deux chemins acceptent des op\u00e9rations GET (\u00e9galement connu sous le nom de m\u00e9thodes HTTP)",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "Le chemin /items/{item_id} a un param\u00e8tre item_id qui doit \u00eatre un int Le chemin /items/{item_id} a un param\u00e8tre de requ\u00eate optionnel q de type str Documentation API interactive Maintenant, rendez-vous sur http://127 0 0 1:8000/docs Vous verrez la documentation interactive automatique de l'API (fournie par Swagger UI) : Documentation API alternative Et maintenant, rendez-vous sur http://127 0 0 1:8000/redoc",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "Vous verrez la documentation interactive automatique de l'API (fournie par ReDoc) : Exemple plus pouss\u00e9 Maintenant, modifiez le fichier main py pour recevoir le corps d'une requ\u00eate PUT D\u00e9clarez ce corps en utilisant les types Python standards, gr\u00e2ce \u00e0 Pydantic from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item name, \"item_id\": item_id} Le serveur se recharge normalement automatiquement (car vous avez pens\u00e9 \u00e0 --reload dans la commande uvicorn ci-dessus) Plus loin avec la documentation API interactive Maintenant, rendez-vous sur http://127 0 0 1:8000/docs",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "La documentation interactive de l'API sera automatiquement mise \u00e0 jour, y compris le nouveau corps de la requ\u00eate : Cliquez sur le bouton \"Try it out\", il vous permet de renseigner les param\u00e8tres et d'interagir directement avec l'API : Cliquez ensuite sur le bouton \"Execute\", l'interface utilisateur communiquera avec votre API, enverra les param\u00e8tres, obtiendra les r\u00e9sultats et les affichera \u00e0 l'\u00e9cran : Plus loin avec la documentation API alternative Et maintenant, rendez-vous sur http://127 0 0",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "1:8000/redoc La documentation alternative refl\u00e9tera \u00e9galement le nouveau param\u00e8tre de requ\u00eate et le nouveau corps : En r\u00e9sum\u00e9 En r\u00e9sum\u00e9, vous d\u00e9clarez une fois les types de param\u00e8tres, le corps de la requ\u00eate, etc en tant que param\u00e8tres de fonction Vous faites cela avec les types Python standard modernes Vous n'avez pas \u00e0 apprendre une nouvelle syntaxe, les m\u00e9thodes ou les classes d'une biblioth\u00e8que sp\u00e9cifique, etc Juste du Python standard",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "Par exemple, pour un int: item_id: int ou pour un mod\u00e8le Item plus complexe : item: Item et avec cette d\u00e9claration unique, vous obtenez : Une assistance dans votre IDE, notamment : la compl\u00e9tion la v\u00e9rification des types La validation des donn\u00e9es : des erreurs automatiques et claires lorsque les donn\u00e9es ne sont pas valides une validation m\u00eame pour les objets JSON profond\u00e9ment imbriqu\u00e9s",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "Une conversion des donn\u00e9es d'entr\u00e9e : venant du r\u00e9seau et allant vers les donn\u00e9es et types de Python, permettant de lire : le JSON les param\u00e8tres du chemin les param\u00e8tres de la requ\u00eate les cookies les en-t\u00eates les formulaires les fichiers La conversion des donn\u00e9es de sortie : conversion des donn\u00e9es et types Python en donn\u00e9es r\u00e9seau (au format JSON), permettant de convertir : les types Python (str, int, float, bool, list, etc) les objets datetime les objets UUID les mod\u00e8les de base de donn\u00e9es",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "et beaucoup plus La documentation API interactive automatique, avec 2 interfaces utilisateur au choix : Swagger UI ReDoc Pour revenir \u00e0 l'exemple de code pr\u00e9c\u00e9dent, FastAPI permet de : Valider que item_id existe dans le chemin des requ\u00eates GET et PUT Valider que item_id est de type int pour les requ\u00eates GET et PUT Si ce n'est pas le cas, le client voit une erreur utile et claire V\u00e9rifier qu'il existe un param\u00e8tre de requ\u00eate facultatif nomm\u00e9 q (comme dans http://127 0 0 1:8000/items/foo",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        },
        {
          "content": "q=somequery) pour les requ\u00eates GET Puisque le param\u00e8tre q est d\u00e9clar\u00e9 avec = None, il est facultatif Sans le None, il serait n\u00e9cessaire (comme l'est le corps de la requ\u00eate dans le cas du PUT) Pour les requ\u00eates PUT vers /items/{item_id}, de lire le corps en JSON : V\u00e9rifier qu'il a un attribut obligatoire name qui devrait \u00eatre un str V\u00e9rifier qu'il a un attribut obligatoire prix qui doit \u00eatre un float V\u00e9rifier qu'il a un attribut facultatif is_offer, qui devrait \u00eatre un bool, s'il est pr\u00e9sent",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_22"
        },
        {
          "content": "Tout cela fonctionnerait \u00e9galement pour les objets JSON profond\u00e9ment imbriqu\u00e9s Convertir de et vers JSON automatiquement Documenter tout avec OpenAPI, qui peut \u00eatre utilis\u00e9 par : Les syst\u00e8mes de documentation interactifs Les syst\u00e8mes de g\u00e9n\u00e9ration automatique de code client, pour de nombreuses langues Fournir directement 2 interfaces web de documentation interactive Nous n'avons fait qu'effleurer la surface, mais vous avez d\u00e9j\u00e0 une id\u00e9e de la fa\u00e7on dont tout cela fonctionne",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_23"
        },
        {
          "content": "Essayez de changer la ligne contenant : return {\"item_name\": item name, \"item_id\": item_id} de : \"item_name\": item name vers : \"item_price\": item price et voyez comment votre \u00e9diteur compl\u00e9tera automatiquement les attributs et conna\u00eetra leurs types : Pour un exemple plus complet comprenant plus de fonctionnalit\u00e9s, voir le Tutoriel - Guide utilisateur Spoiler alert : le tutoriel - guide utilisateur inclut : D\u00e9claration de param\u00e8tres provenant d'autres endroits diff\u00e9rents comme : en-t\u00eates",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_24"
        },
        {
          "content": ", cookies, champs de formulaire et fichiers L'utilisation de contraintes de validation comme maximum_length ou regex Un syst\u00e8me d'injection de d\u00e9pendance tr\u00e8s puissant et facile \u00e0 utiliser S\u00e9curit\u00e9 et authentification, y compris la prise en charge de OAuth2 avec les jetons JWT et l'authentification HTTP Basic Des techniques plus avanc\u00e9es (mais tout aussi faciles) pour d\u00e9clarer les mod\u00e8les JSON profond\u00e9ment imbriqu\u00e9s (gr\u00e2ce \u00e0 Pydantic)",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_25"
        },
        {
          "content": "Int\u00e9gration de GraphQL avec Strawberry et d'autres biblioth\u00e8ques D'obtenir de nombreuses fonctionnalit\u00e9s suppl\u00e9mentaires (gr\u00e2ce \u00e0 Starlette) comme : WebSockets de tester le code tr\u00e8s facilement avec requests et pytest CORS Cookie Sessions et plus encore",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_26"
        },
        {
          "content": "Performance Les benchmarks TechEmpower ind\u00e9pendants montrent que les applications FastAPI s'ex\u00e9cutant sous Uvicorn sont parmi les frameworks existants en Python les plus rapides , juste derri\u00e8re Starlette et Uvicorn (utilis\u00e9s en interne par FastAPI) (*) Pour en savoir plus, consultez la section Benchmarks D\u00e9pendances facultatives Utilis\u00e9es par Pydantic: email-validator - pour la validation des adresses email Utilis\u00e9es par Starlette : requests - Obligatoire si vous souhaitez utiliser TestClient",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_27"
        },
        {
          "content": "jinja2 - Obligatoire si vous souhaitez utiliser la configuration de template par d\u00e9faut python-multipart - Obligatoire si vous souhaitez supporter le \"d\u00e9codage\" de formulaire avec request form() itsdangerous - Obligatoire pour la prise en charge de SessionMiddleware pyyaml - Obligatoire pour le support SchemaGenerator de Starlette (vous n'en avez probablement pas besoin avec FastAPI) Utilis\u00e9es par FastAPI / Starlette : uvicorn - Pour le serveur qui charge et sert votre application",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_28"
        },
        {
          "content": "orjson - Obligatoire si vous voulez utiliser ORJSONResponse ujson - Obligatoire si vous souhaitez utiliser UJSONResponse Vous pouvez tout installer avec pip install fastapi[all] Licence Ce projet est soumis aux termes de la licence MIT Retour en haut de la page",
          "url": "https://fastapi.tiangolo.com/fr/",
          "library": "fastapi",
          "chunk_id": "fastapi_29"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/newsletter/#fastapi-and-friends-newsletter",
      "title": "FastAPI and friends newsletter - FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI Features Learn Learn Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes FastAPI Resources FastAPI and friends newsletter Back to top",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI Features Learn Learn Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/newsletter/#fastapi-and-friends-newsletter",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes FastAPI Resources FastAPI and friends newsletter Back to top",
          "url": "https://fastapi.tiangolo.com/newsletter/#fastapi-and-friends-newsletter",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI M\u00fcnd\u0259ricat Sponsorlar R\u0259yl\u0259r Typer, CLI-lar\u0131n FastAPI-\u0131 T\u0259l\u0259bl\u0259r Qura\u015fd\u0131rma N\u00fcmun\u0259 Kodu yaradaq Kodu i\u015f\u0259 salaq \u0130ndi yoxlayaq \u0130nteraktiv API S\u0259n\u0259dl\u0259ri Alternativ API s\u0259n\u0259dl\u0259ri N\u00fcmun\u0259ni Yenil\u0259y\u0259k \u0130nteraktiv API s\u0259n\u0259dl\u0259rind\u0259ki d\u0259yi\u015fikliy\u0259 baxaq Alternativ API S\u0259n\u0259dl\u0259rind\u0259ki D\u0259yi\u015fikliy\u0259 Baxaq X\u00fclas\u0259 Performans M\u0259cburi Olmayan T\u0259l\u0259bl\u0259r Lisenziya Features \u00d6yr\u0259n \u00d6yr\u0259n Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes M\u00fcnd\u0259ricat Sponsorlar R\u0259yl\u0259r Typer, CLI-lar\u0131n FastAPI-\u0131 T\u0259l\u0259bl\u0259r Qura\u015fd\u0131rma N\u00fcmun\u0259 Kodu yaradaq Kodu i\u015f\u0259 salaq \u0130ndi yoxlayaq \u0130nteraktiv API S\u0259n\u0259dl\u0259ri Alternativ API s\u0259n\u0259dl\u0259ri N\u00fcmun\u0259ni Yenil\u0259y\u0259k \u0130nteraktiv API s\u0259n\u0259dl\u0259rind\u0259ki d\u0259yi\u015fikliy\u0259 baxaq Alternativ API S\u0259n\u0259dl\u0259rind\u0259ki D\u0259yi\u015fikliy\u0259 Baxaq X\u00fclas\u0259 Performans M\u0259cburi Olmayan T\u0259l\u0259bl\u0259r Lisenziya FastAPI FastAPI framework, y\u00fcks\u0259k m\u0259shuldarl\u0131, \u00f6yr\u0259nm\u0259si asan, \u00e7evik kodlama, istifad\u0259y\u0259 haz\u0131rd\u0131r S\u0259n\u0259dl\u0259r: https://fastapi.tiangolo.com Qaynaq Kodu: https://github.com/fastapi/fastapi FastAPI Python il\u0259 API yaratmaq \u00fc\u00e7\u00fcn standart Python tip m\u0259sl\u0259h\u0259tl\u0259rin\u0259 \u0259saslanan, m\u00fcasir, s\u00fcr\u0259tli (y\u00fcks\u0259k performansl\u0131) framework-d\u00fcr. \u018fsas x\u00fcsusiyy\u0259tl\u0259ri bunlard\u0131r: S\u00fcr\u0259tli: \u00c7ox y\u00fcks\u0259k performans, NodeJS v\u0259 Go s\u0259viyy\u0259sind\u0259 (Starlette v\u0259 Pydantic-\u0259 t\u0259\u015f\u0259kk\u00fcrl\u0259r). \u018fn s\u00fcr\u0259tli Python frameworkl\u0259rind\u0259n biridir. \u00c7evik kodlama: Funksiyanall\u0131qlar\u0131 inki\u015faf etdirm\u0259k s\u00fcr\u0259tini t\u0259xmin\u0259n 200-d\u0259n 300-\u0259 q\u0259d\u0259r art\u0131r\u0131n. * Daha az x\u0259ta: \u0130nsan (developer) t\u0259r\u0259find\u0259n t\u00f6r\u0259dil\u0259n s\u0259hvl\u0259rin t\u0259xmin\u0259n 40 -ni azald\u0131n. * \u0130ntuitiv: \u018fla redaktor d\u0259st\u0259yi. H\u0259r yerd\u0259 otomatik tamamlama. X\u0259talar\u0131 m\u00fc\u0259yy\u0259nl\u0259\u015fdirm\u0259y\u0259 daha az vaxt s\u0259rf ed\u0259c\u0259ksiniz. Asan: \u0130stifad\u0259si v\u0259 \u00f6yr\u0259nilm\u0259si asan olmas\u0131 \u00fc\u00e7\u00fcn n\u0259z\u0259rd\u0259 tutulmu\u015fdur. S\u0259n\u0259dl\u0259ri oxumaq \u00fc\u00e7\u00fcn daha az vaxt ay\u0131racaqs\u0131n\u0131z. Q\u0131sa: Kod t\u0259krarlanmas\u0131n\u0131 minimuma endirin. H\u0259r bir parametr t\u0259rifind\u0259 bird\u0259n \u00e7ox x\u00fcsusiyy\u0259t il\u0259 v\u0259 daha az s\u0259hvl\u0259 qar\u015f\u0131la\u015facaqs\u0131n\u0131z. G\u00fccl\u00fc: Avtomatik v\u0259 interaktiv s\u0259n\u0259dl\u0259rl\u0259 birlikd\u0259 istifad\u0259y\u0259 haz\u0131r kod \u0259ld\u0259 ed\u0259 bil\u0259rsiniz. Standartlara \u0259saslanan: API-lar \u00fc\u00e7\u00fcn a\u00e7\u0131q standartlara \u0259saslan\u0131r (v\u0259 tam uy\u011fun g\u0259lir): OpenAPI (\u0259vv\u0259lki ad\u0131 il\u0259 Swagger) v\u0259 JSON Schema. * Bu fikirl\u0259r daxili development komandas\u0131n\u0131n haz\u0131rlad\u0131qlar\u0131 m\u0259hsullar\u0131n s\u0131naqlar\u0131na \u0259saslan\u0131r. Sponsorlar ` Dig\u0259r sponsorlar R\u0259yl\u0259r \"[...] Son g\u00fcnl\u0259rd\u0259 FastAPI-\u0131 \u00e7ox istifad\u0259 edir\u0259m. [...] \u018fslind\u0259 onu komandam\u0131n b\u00fct\u00fcn Microsoftda ML sevisl\u0259rind\u0259 istifad\u0259 etm\u0259yi planlay\u0131ram. Onlar\u0131n b\u0259zil\u0259ri windows-un \u0259sas m\u0259hsuluna v\u0259 b\u0259zi Office m\u0259hsullar\u0131na inteqrasiya olunurlar.\" Kabir Khan - Microsoft (ref) \"FastAPI kitabxanas\u0131n\u0131 Proqnozlar \u0259ld\u0259 etm\u0259k \u00fc\u00e7\u00fcn sor\u011fulana bil\u0259n REST serverini yaratmaqda istifad\u0259 etdik.\" Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref) \"Netflix b\u00f6hran idar\u0259\u00e7iliyi orkestrl\u0259\u015fm\u0259 framework-n\u00fcn a\u00e7\u0131q qaynaql\u0131 burax\u0131l\u0131\u015f\u0131n\u0131 elan etm\u0259kd\u0259n m\u0259mnundur: Dispatch! [FastAPI il\u0259 quruldu]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"FastAPI \u00fc\u00e7\u00fcn h\u0259y\u0259canl\u0131yam. \u00c7ox \u0259yl\u0259nc\u0259lidir!\" Brian Okken - Python Bytes podcast host (ref) \"D\u00fcz\u00fcn\u00fc des\u0259m, sizin qurdu\u011funuz \u015fey h\u0259qiq\u0259t\u0259n m\u00f6hk\u0259m v\u0259 pe\u015f\u0259kar g\u00f6r\u00fcn\u00fcr. Bir \u00e7ox c\u0259h\u0259td\u0259n Hug-un olmas\u0131n\u0131 ist\u0259diyim kimdir - kimins\u0259 bel\u0259 bir \u015fey qurdu\u011funu g\u00f6rm\u0259k h\u0259qiq\u0259t\u0259n ruhland\u0131r\u0131c\u0131d\u0131r.\" Timothy Crosley - Hug creator (ref) \"\u018fg\u0259r REST API-l\u0259r yaratmaq \u00fc\u00e7\u00fcn m\u00fcasir framework \u00f6yr\u0259nm\u0259k ist\u0259yirsinizs\u0259, FastAPI-a bax\u0131n [...] S\u00fcr\u0259tli, istifad\u0259si v\u0259 \u00f6yr\u0259nm\u0259si asand\u0131r. [...]\" \"API xidm\u0259tl\u0259rimizi FastAPI-a k\u00f6\u00e7\u00fcrd\u00fck [...] Sizin d\u0259 b\u0259y\u0259n\u0259c\u0259yinizi d\u00fc\u015f\u00fcn\u00fcr\u00fck.\" Ines Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref) \"Python il\u0259 istifad\u0259y\u0259 haz\u0131r API qurmaq ist\u0259y\u0259n h\u0259r k\u0259s\u0259 FastAPI-\u0131 t\u00f6vsiy\u0259 edir\u0259m. M\u00f6ht\u0259\u015f\u0259m \u015f\u0259kild\u0259 dizayn edilmi\u015f, istifad\u0259si asan v\u0259 y\u00fcks\u0259k d\u0259r\u0259c\u0259d\u0259 geni\u015fl\u0259n\u0259 bil\u0259n-dir, API \u0259sasl\u0131 inki\u015faf strategiyam\u0131z\u0131n \u0259sas komponentin\u0259 \u00e7evrilib v\u0259 Virtual TAC Engineer kimi bir \u00e7ox avtomatla\u015fd\u0131rma v\u0259 servisl\u0259ri idar\u0259 edir.\" Deon Pillsbury - Cisco (ref) Typer, CLI-lar\u0131n FastAPI-\u0131 \u018fg\u0259r siz veb API \u0259v\u0259zin\u0259 terminalda istifad\u0259 edil\u0259c\u0259k CLI proqram\u0131 qurursunuzsa, Typer-a baxa bil\u0259rsiniz. Typer FastAPI-\u0131n ki\u00e7ik qarda\u015f\u0131d\u0131r. V\u0259 o, CLI-l\u0259rin FastAPI-\u0131 olmaq \u00fc\u00e7\u00fcn n\u0259z\u0259rd\u0259 tutulub.   T\u0259l\u0259bl\u0259r FastAPI n\u0259h\u0259ngl\u0259rin \u00e7iyinl\u0259rind\u0259 dayan\u0131r: Web t\u0259r\u0259fi \u00fc\u00e7\u00fcn Starlette. Data t\u0259r\u0259fi \u00fc\u00e7\u00fcn Pydantic. Qura\u015fd\u0131rma  pip install fastapi --- 100 T\u0259tbiqimizi \u0259l\u00e7atan etm\u0259k \u00fc\u00e7\u00fcn biz\u0259 Uvicorn v\u0259 ya Hypercorn kimi ASGI server laz\u0131md\u0131r.  pip install \"uvicorn[standard]\" --- 100 N\u00fcmun\u0259 Kodu yaradaq main.py adl\u0131 fayl yaradaq v\u0259 ona a\u015fa\u011f\u0131dak\u0131 kodu yerl\u0259\u015fdir\u0259k: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} V\u0259 ya async def... \u018fg\u0259r kodunuzda async v\u0259 ya await vard\u0131rsa async def istifad\u0259 ed\u0259 bil\u0259rik: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Qeyd: \u018fg\u0259r bu m\u00f6vzu haqq\u0131nda m\u0259lumat\u0131n\u0131z yoxdursa async v\u0259 await s\u0259n\u0259dind\u0259ki \"T\u0259l\u0259sirs\u0259n?\" b\u00f6lm\u0259sin\u0259 baxa bil\u0259rsiniz. Kodu i\u015f\u0259 salaq Serveri a\u015fa\u011f\u0131dak\u0131 \u0259mr il\u0259 i\u015f\u0259 salaq:  uvicorn main:app --reload INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup. INFO: Application startup complete. uvicorn main:app --reload \u0259mri haqq\u0131nda... uvicorn main:app \u0259mri a\u015fa\u011f\u0131dak\u0131lara instinad edir: main: main.py fayl\u0131 (y\u0259ni Python \"modulu\"). app: main.py fayl\u0131nda app = FastAPI() s\u0259trind\u0259 yaratd\u0131\u011f\u0131m\u0131z FastAPI obyektidir. --reload: kod d\u0259yi\u015fikliyind\u0259n sonra avtomatik olaraq serveri yenid\u0259n i\u015f\u0259 sal\u0131r. Bu parametrd\u0259n yaln\u0131z development m\u0259rh\u0259l\u0259sind\u0259 istifad\u0259 etm\u0259liyik. \u0130ndi yoxlayaq Bu linki brauzerimizd\u0259 a\u00e7aq http://127.0.0.1:8000/items/5?q=somequery. A\u015fa\u011f\u0131dak\u0131 kimi bir JSON cavab\u0131 g\u00f6r\u0259c\u0259ksiniz: {\"item_id\": 5, \"q\": \"somequery\"} Siz art\u0131q bir API yaratm\u0131s\u0131n\u0131z, hans\u0131 ki: / v\u0259 /items/{item_id} yollar\u0131nda HTTP sor\u011fular\u0131n\u0131 q\u0259bul edir. H\u0259r iki yolda GET \u0259m\u0259liyyatlar\u0131n\u0131 (h\u0259m\u00e7inin HTTP metodlar\u0131 kimi bilinir) apar\u0131r. /items/{item_id} yolu item_id adl\u0131 int qiym\u0259ti almal\u0131 olan yol parametrin\u0259 sahibdir. /items/{item_id} yolunun q adl\u0131 yol parametri var v\u0259 bu parametr ist\u0259y\u0259 ba\u011fl\u0131 olsa da, str qiym\u0259tini almal\u0131d\u0131r. \u0130nteraktiv API S\u0259n\u0259dl\u0259ri \u0130ndi http://127.0.0.1:8000/docs \u00fcnvan\u0131na daxil olun. Avtomatik interaktiv API s\u0259n\u0259dl\u0259rini g\u00f6r\u0259c\u0259ksiniz (Swagger UI t\u0259r\u0259find\u0259n t\u0259min edilir): Alternativ API s\u0259n\u0259dl\u0259ri \u0130ndi is\u0259 http://127.0.0.1:8000/redoc \u00fcnvan\u0131na daxil olun. ReDoc t\u0259r\u0259find\u0259n t\u0259qdim edil\u0259n avtomatik s\u0259n\u0259dl\u0259ri g\u00f6r\u0259c\u0259ksiniz: N\u00fcmun\u0259ni Yenil\u0259y\u0259k \u0130ndi g\u0259lin main.py fayl\u0131n\u0131 PUT sor\u011fusu il\u0259 birlikd\u0259 g\u00f6vd\u0259 q\u0259bul ed\u0259c\u0259k \u015f\u0259kild\u0259 d\u0259yi\u015fdir\u0259k. Pydantic say\u0259sind\u0259 standart Python tipl\u0259rind\u0259n istifad\u0259 ed\u0259r\u0259k g\u00f6vd\u0259ni m\u00fc\u0259yy\u0259n ed\u0259k. from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} Server avtomatik olaraq yenid\u0259n i\u015f\u0259 sal\u0131nmal\u0131 idi (\u00e7\u00fcnki biz yuxar\u0131da uvicorn \u0259mri il\u0259 --reload parametrind\u0259n istifad\u0259 etmi\u015fik). \u0130nteraktiv API s\u0259n\u0259dl\u0259rind\u0259ki d\u0259yi\u015fikliy\u0259 baxaq Yenid\u0259n http://127.0.0.1:8000/docs \u00fcnvan\u0131na daxil olun. \u0130nteraktiv API s\u0259n\u0259dl\u0259ri yeni g\u00f6vd\u0259 d\u0259 daxil olmaq il\u0259 avtomatik olaraq yenil\u0259n\u0259c\u0259k: \"Try it out\" d\u00fcym\u0259sini klikl\u0259yin, bu, parametrl\u0259ri doldurma\u011fa v\u0259 API il\u0259 birba\u015fa \u0259laq\u0259 saxlama\u011fa imkan verir: Sonra \"Execute\" d\u00fcym\u0259sini klikl\u0259yin, istifad\u0259\u00e7i interfeysi API il\u0259 \u0259laq\u0259 quracaq, parametrl\u0259ri g\u00f6nd\u0259r\u0259c\u0259k, n\u0259tic\u0259l\u0259ri \u0259ld\u0259 ed\u0259c\u0259k v\u0259 onlar\u0131 ekranda g\u00f6st\u0259r\u0259c\u0259k: Alternativ API S\u0259n\u0259dl\u0259rind\u0259ki D\u0259yi\u015fikliy\u0259 Baxaq \u0130ndi is\u0259 yenid\u0259n http://127.0.0.1:8000/redoc \u00fcnvan\u0131na daxil olun. Alternativ s\u0259n\u0259dl\u0259r h\u0259m d\u0259 yeni sor\u011fu parametri v\u0259 g\u00f6vd\u0259sini \u0259ks etdir\u0259c\u0259k: X\u00fclas\u0259 \u00dcmumil\u0259\u015fdirs\u0259k, parametrl\u0259r, g\u00f6vd\u0259 v\u0259 s. Biz m\u0259lumat n\u00f6vl\u0259rini bir d\u0259f\u0259 funksiya parametrl\u0259ri kimi t\u0259yin edirik. Bunu standart m\u00fcasir Python tipl\u0259ri il\u0259 edirsiniz. Yeni sintaksis, m\u00fc\u0259yy\u0259n bir kitabxanan\u0131n metodlar\u0131n\u0131 v\u0259 ya sinifl\u0259rini v\u0259 s. \u00f6yr\u0259nm\u0259k m\u0259cburiyy\u0259tind\u0259 deyilsiniz. Sad\u0259c\u0259 standart Python. M\u0259s\u0259l\u0259n, int \u00fc\u00e7\u00fcn: item_id: int v\u0259 ya daha m\u00fcr\u0259kk\u0259b Item modeli \u00fc\u00e7\u00fcn: item: Item ...v\u0259 yaln\u0131z parametr tipini t\u0259yin etm\u0259kl\u0259 bunlar\u0131 \u0259ld\u0259 edirsiniz: Redaktor d\u0259st\u0259yi il\u0259: Avtomatik tamamlama. Tip yoxlanmas\u0131. M\u0259lumatlar\u0131n T\u0259sdiql\u0259nm\u0259si: M\u0259lumat etibars\u0131z olduqda avtomatik olaraq ayd\u0131n x\u0259talar g\u00f6st\u0259rir. H\u0259tta \u00e7ox d\u0259rin JSON obyektl\u0259rind\u0259 bel\u0259 do\u011frulama apar\u0131r. Daxil olan m\u0259lumatlar\u0131 \u00e7evirm\u0259k \u00fc\u00e7\u00fcn a\u015fa\u011f\u0131dak\u0131 m\u0259lumat n\u00f6vl\u0259rind\u0259n istifad\u0259 edilir: JSON. Yol parametrl\u0259ri. Sor\u011fu parametrl\u0259ri. \u00c7\u0259r\u0259zl\u0259r. Ba\u015fl\u0131qlaq. Formalar. Fayllar. Daxil olan m\u0259lumatlar\u0131 \u00e7evirm\u0259k \u00fc\u00e7\u00fcn a\u015fa\u011f\u0131dak\u0131 m\u0259lumat n\u00f6vl\u0259rind\u0259n istifad\u0259 edilir (JSON olaraq): Python tipl\u0259rinin (str, int, float, bool, list, v\u0259 s) \u00e7evrilm\u0259si. datetime obyektl\u0259ri. UUID obyektl\u0259ri. Veril\u0259nl\u0259r bazas\u0131 modell\u0259ri. v\u0259 daha \u00e7oxu... 2 alternativ istifad\u0259\u00e7i interfeysi daxil olmaqla avtomatik interaktiv API s\u0259n\u0259dl\u0259rini t\u0259min edir: Swagger UI. ReDoc. G\u0259lin \u0259vv\u0259lki n\u00fcmun\u0259y\u0259 qay\u0131daq v\u0259 FastAPI-nin n\u0259l\u0259r ed\u0259c\u0259yin\u0259 n\u0259z\u0259r salaq: GET v\u0259 PUT sor\u011fular\u0131 \u00fc\u00e7\u00fcn item_id-nin yolda olub-olmad\u0131\u011f\u0131n\u0131 yoxlayacaq. item_id-nin GET v\u0259 PUT sor\u011fular\u0131 \u00fc\u00e7\u00fcn n\u00f6v\u00fcn\u00fcn int oldu\u011funu yoxlayacaq. \u018fg\u0259r int deyils\u0259, s\u0259b\u0259bini g\u00f6st\u0259r\u0259n bir x\u0259ta mesaj\u0131 g\u00f6st\u0259r\u0259c\u0259kdir. m\u0259cburi olmayan q parametrinin GET (http://127.0.0.1:8000/items/foo?q=somequery burdak\u0131 kimi) sor\u011fusu i\u00e7\u0259risind\u0259 olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq. q parametrini = None il\u0259 yaratd\u0131\u011f\u0131m\u0131z \u00fc\u00e7\u00fcn, m\u0259cburi olmayan parametr olacaq. \u018fg\u0259r None olmasayd\u0131, bu m\u0259cburi parametr olard\u0131 (PUT metodunun g\u00f6vd\u0259sind\u0259 oldu\u011fu kimi). PUT sor\u011fusu \u00fc\u00e7\u00fcn, /items/{item_id} g\u00f6vd\u0259sini JSON olaraq oxuyacaq: name ad\u0131nda m\u0259cburi bir parametr olub olmad\u0131\u011f\u0131n\u0131 v\u0259 \u0259g\u0259r varsa, tipinin str olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq. price ad\u0131nda m\u0259cburi bir parametr olub olmad\u0131\u011f\u0131n\u0131 v\u0259 \u0259g\u0259r varsa, tipinin float olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq. is_offer ad\u0131nda m\u0259cburi olmayan bir parametr olub olmad\u0131\u011f\u0131n\u0131 v\u0259 \u0259g\u0259r varsa, tipinin float olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq. B\u00fct\u00fcn bunlar \u0259n d\u0259rin JSON obyektl\u0259rind\u0259 bel\u0259 i\u015fl\u0259y\u0259c\u0259k. M\u0259lumatlar\u0131n JSON-a v\u0259 JSON-un Python obyektin\u0259 \u00e7evrilm\u0259si avtomatik h\u0259yata ke\u00e7iril\u0259c\u0259k. H\u0259r \u015feyi OpenAPI il\u0259 uy\u011fun olacaq \u015f\u0259kild\u0259 avtomatik olaraq s\u0259n\u0259dl\u0259\u015fdir\u0259c\u0259k v\u0259 onlar\u0131 a\u015fa\u011f\u0131dak\u0131 kimi istifad\u0259 ed\u0259 bil\u0259c\u0259k: \u0130nteraktiv s\u0259n\u0259dl\u0259\u015fm\u0259 sisteml\u0259ri. Bir \u00e7ox proqramla\u015fd\u0131rma dill\u0259ri \u00fc\u00e7\u00fcn avtomatla\u015fd\u0131r\u0131lm\u0131\u015f m\u00fc\u015ft\u0259ri kodu yaratma sisteml\u0259ri. 2 interaktiv s\u0259n\u0259dl\u0259\u015fm\u0259 veb interfeysini birba\u015fa t\u0259min ed\u0259c\u0259k. Yeni ba\u015flam\u0131\u015f\u0131q, amma siz art\u0131q i\u015fin m\u0259ntiqini ba\u015fa d\u00fc\u015fm\u00fcs\u00fcn\u00fcz. \u0130ndi a\u015fa\u011f\u0131dak\u0131 s\u0259tri d\u0259yi\u015fdirm\u0259y\u0259 \u00e7al\u0131\u015f\u0131n: return {\"item_name\": item.name, \"item_id\": item_id} ...bundan: ... \"item_name\": item.name ... ...buna: ... \"item_price\": item.price ... ...v\u0259 redaktorun m\u0259lumat tipl\u0259rini bildiyini v\u0259 avtomatik tamalad\u0131\u011f\u0131n\u0131 g\u00f6r\u0259c\u0259ksiniz: Daha \u00e7ox funksiyaya malik daha dol\u011fun n\u00fcmun\u0259 \u00fc\u00e7\u00fcn \u00d6yr\u0259dici - \u0130stifad\u0259\u00e7i T\u0259limat\u0131 s\u0259hif\u0259sin\u0259 baxa bil\u0259rsiniz. Spoiler x\u0259b\u0259rdarl\u0131\u011f\u0131: \u00d6yr\u0259dici - istifad\u0259\u00e7i t\u0259limat\u0131na bunlar daxildir: Parametrl\u0259rin, ba\u015fl\u0131qlar, \u00e7\u0259r\u0259zl\u0259r, forma sah\u0259l\u0259ri v\u0259 fayllar olaraq m\u00fc\u0259yy\u0259n edilm\u0259si. maximum_length v\u0259 ya regex kimi do\u011frulama m\u0259hdudiyy\u0259tl\u0259rinin nec\u0259 t\u0259yin edil\u0259c\u0259yi. \u00c7ox g\u00fccl\u00fc v\u0259 istifad\u0259si asan Dependency Injection sistemi. T\u0259hl\u00fck\u0259sizlik v\u0259 autentifikasiya, JWT tokenl\u0259ri il\u0259 OAuth2 d\u0259st\u0259yi v\u0259 HTTP Basic autentifikasiyas\u0131. \u00e7ox d\u0259rin JSON modell\u0259rini m\u00fc\u0259yy\u0259n etm\u0259k \u00fc\u00e7\u00fcn daha ir\u0259li s\u0259viyy\u0259 (lakin eyni d\u0259r\u0259c\u0259d\u0259 asan) \u00fcsullar (Pydantic say\u0259sind\u0259). Strawberry v\u0259 dig\u0259r kitabxanalar il\u0259 GraphQL inteqrasiyas\u0131. Dig\u0259r \u0259lav\u0259 x\u00fcsusiyy\u0259tl\u0259r (Starlette say\u0259sind\u0259): WebSockets HTTPX v\u0259 pytest say\u0259sind\u0259 \u00e7ox asan testl\u0259r CORS Cookie Sessions ...v\u0259 daha \u00e7oxu. Performans M\u00fcst\u0259qil TechEmpower meyarlar\u0131 g\u00f6st\u0259rir ki, Uvicorn \u00fcz\u0259rind\u0259 i\u015fl\u0259y\u0259n FastAPI proqramlar\u0131 \u0259n s\u00fcr\u0259tli Python kitabxanalar\u0131ndan biridir, yaln\u0131z Starlette v\u0259 Uvicorn-un \u00f6z\u00fcnd\u0259n yava\u015fd\u0131r, ki FastAPI bunlar\u0131n \u00fcz\u0259rin\u0259 qurulmu\u015f bir framework-d\u00fcr. (*) \u018ftrafl\u0131 m\u0259lumat \u00fc\u00e7\u00fcn bu b\u00f6lm\u0259y\u0259 n\u0259z\u0259r sal\u0131n M\u00fcqayis\u0259l\u0259r. M\u0259cburi Olmayan T\u0259l\u0259bl\u0259r Pydantic t\u0259r\u0259find\u0259n istifad\u0259 olunanlar: email-validator - e-po\u00e7tun yoxlan\u0131lmas\u0131 \u00fc\u00e7\u00fcn. pydantic-settings - parametrl\u0259rin idar\u0259 edilm\u0259si \u00fc\u00e7\u00fcn. pydantic-extra-types - Pydantic il\u0259 istifad\u0259 edil\u0259 bil\u0259n \u0259lav\u0259 tipl\u0259r \u00fc\u00e7\u00fcn. Starlette t\u0259r\u0259find\u0259n istifad\u0259 olunanlar: httpx - \u018fg\u0259r TestClient strukturundan istifad\u0259 ed\u0259c\u0259ksinizs\u0259, t\u0259l\u0259b olunur. jinja2 - Standart \u015fablon konfiqurasiyas\u0131ndan istifad\u0259 etm\u0259k ist\u0259yirsinizs\u0259, t\u0259l\u0259b olunur. python-multipart - request.form() il\u0259 forma \"\u00e7evirm\u0259\" d\u0259st\u0259yind\u0259n istifad\u0259 etm\u0259k ist\u0259yirsinizs\u0259, t\u0259l\u0259b olunur. itsdangerous - SessionMiddleware d\u0259st\u0259yi \u00fc\u00e7\u00fcn t\u0259l\u0259b olunur. pyyaml - SchemaGenerator d\u0259st\u0259yi \u00fc\u00e7\u00fcn t\u0259l\u0259b olunur (\u00c7ox g\u00fcman ki, FastAPI istifad\u0259 ed\u0259rk\u0259n buna ehtiyac\u0131n\u0131z olmayacaq). ujson - UJSONResponse istifad\u0259 etm\u0259k ist\u0259yirsinizs\u0259, t\u0259l\u0259b olunur. H\u0259m FastAPI, h\u0259m d\u0259 Starlette t\u0259r\u0259find\u0259n istifad\u0259 olunur: uvicorn - Yaratd\u0131\u011f\u0131m\u0131z proqram\u0131 servis ed\u0259c\u0259k veb server kimi f\u0259aliyy\u0259t g\u00f6st\u0259rir. orjson - ORJSONResponse istifad\u0259 ed\u0259c\u0259ksinizs\u0259 t\u0259l\u0259b olunur. B\u00fct\u00fcn bunlar\u0131 pip install fastapi[all] il\u0259 qura\u015fd\u0131ra bil\u0259rsiniz. Lisenziya Bu layih\u0259 MIT lisenziyas\u0131n\u0131n \u015f\u0259rtl\u0259rin\u0259 \u0259sas\u0259n lisenziyala\u015fd\u0131r\u0131l\u0131b. Yuxar\u0131ya qay\u0131tmaq",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "uvicorn main:app --reload",
        "uvicorn main:app",
        "app = FastAPI()",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "email-validator",
        "pydantic-settings",
        "pydantic-extra-types",
        "python-multipart",
        "request.form()",
        "itsdangerous",
        "SessionMiddleware",
        "SchemaGenerator",
        "UJSONResponse",
        "ORJSONResponse",
        "pip install fastapi[all]"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI M\u00fcnd\u0259ricat Sponsorlar R\u0259yl\u0259r Typer, CLI-lar\u0131n FastAPI-\u0131 T\u0259l\u0259bl\u0259r Qura\u015fd\u0131rma N\u00fcmun\u0259 Kodu yaradaq Kodu i\u015f\u0259 salaq \u0130ndi yoxlayaq \u0130nteraktiv API S\u0259n\u0259dl\u0259ri Alternativ API s\u0259n\u0259dl\u0259ri N\u00fcmun\u0259ni Yenil\u0259y\u0259k \u0130nteraktiv API s\u0259n\u0259dl\u0259rind\u0259ki d\u0259yi\u015fikliy\u0259 baxaq Alternativ API S\u0259n\u0259dl\u0259rind\u0259ki D\u0259yi\u015fikliy\u0259 Baxaq X\u00fclas\u0259 Performans M\u0259cburi Olmayan T\u0259l\u0259bl\u0259r Lisenziya Features \u00d6yr\u0259n \u00d6yr\u0259n Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes M\u00fcnd\u0259ricat Sponsorlar R\u0259yl\u0259r Typer, CLI-lar\u0131n FastAPI-\u0131 T\u0259l\u0259bl\u0259r Qura\u015fd\u0131rma N\u00fcmun\u0259 Kodu yaradaq Kodu i\u015f\u0259 salaq \u0130ndi yoxlayaq \u0130nteraktiv API S\u0259n\u0259dl\u0259ri Alternativ API s\u0259n\u0259dl\u0259ri N\u00fcmun\u0259ni Yenil\u0259y\u0259k \u0130nteraktiv API s\u0259n\u0259dl\u0259rind\u0259ki d\u0259yi\u015fikliy\u0259 baxaq Alternativ API S\u0259n\u0259dl\u0259rind\u0259ki D\u0259yi\u015fikliy\u0259 Baxaq X\u00fclas\u0259 Performans M\u0259cburi Olmayan T\u0259l\u0259bl\u0259r Lisenziya FastAPI FastAPI framework, y\u00fcks\u0259k m\u0259shuldarl\u0131, \u00f6yr\u0259nm\u0259si asan, \u00e7evik kodlama, istifad\u0259y\u0259 haz\u0131rd\u0131r S\u0259n\u0259dl\u0259r: https://fastapi",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com Qaynaq Kodu: https://github com/fastapi/fastapi FastAPI Python il\u0259 API yaratmaq \u00fc\u00e7\u00fcn standart Python tip m\u0259sl\u0259h\u0259tl\u0259rin\u0259 \u0259saslanan, m\u00fcasir, s\u00fcr\u0259tli (y\u00fcks\u0259k performansl\u0131) framework-d\u00fcr \u018fsas x\u00fcsusiyy\u0259tl\u0259ri bunlard\u0131r: S\u00fcr\u0259tli: \u00c7ox y\u00fcks\u0259k performans, NodeJS v\u0259 Go s\u0259viyy\u0259sind\u0259 (Starlette v\u0259 Pydantic-\u0259 t\u0259\u015f\u0259kk\u00fcrl\u0259r) \u018fn s\u00fcr\u0259tli Python frameworkl\u0259rind\u0259n biridir \u00c7evik kodlama: Funksiyanall\u0131qlar\u0131 inki\u015faf etdirm\u0259k s\u00fcr\u0259tini t\u0259xmin\u0259n 200-d\u0259n 300-\u0259 q\u0259d\u0259r art\u0131r\u0131n",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "* Daha az x\u0259ta: \u0130nsan (developer) t\u0259r\u0259find\u0259n t\u00f6r\u0259dil\u0259n s\u0259hvl\u0259rin t\u0259xmin\u0259n 40 -ni azald\u0131n * \u0130ntuitiv: \u018fla redaktor d\u0259st\u0259yi H\u0259r yerd\u0259 otomatik tamamlama X\u0259talar\u0131 m\u00fc\u0259yy\u0259nl\u0259\u015fdirm\u0259y\u0259 daha az vaxt s\u0259rf ed\u0259c\u0259ksiniz Asan: \u0130stifad\u0259si v\u0259 \u00f6yr\u0259nilm\u0259si asan olmas\u0131 \u00fc\u00e7\u00fcn n\u0259z\u0259rd\u0259 tutulmu\u015fdur S\u0259n\u0259dl\u0259ri oxumaq \u00fc\u00e7\u00fcn daha az vaxt ay\u0131racaqs\u0131n\u0131z Q\u0131sa: Kod t\u0259krarlanmas\u0131n\u0131 minimuma endirin H\u0259r bir parametr t\u0259rifind\u0259 bird\u0259n \u00e7ox x\u00fcsusiyy\u0259t il\u0259 v\u0259 daha az s\u0259hvl\u0259 qar\u015f\u0131la\u015facaqs\u0131n\u0131z",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "G\u00fccl\u00fc: Avtomatik v\u0259 interaktiv s\u0259n\u0259dl\u0259rl\u0259 birlikd\u0259 istifad\u0259y\u0259 haz\u0131r kod \u0259ld\u0259 ed\u0259 bil\u0259rsiniz Standartlara \u0259saslanan: API-lar \u00fc\u00e7\u00fcn a\u00e7\u0131q standartlara \u0259saslan\u0131r (v\u0259 tam uy\u011fun g\u0259lir): OpenAPI (\u0259vv\u0259lki ad\u0131 il\u0259 Swagger) v\u0259 JSON Schema * Bu fikirl\u0259r daxili development komandas\u0131n\u0131n haz\u0131rlad\u0131qlar\u0131 m\u0259hsullar\u0131n s\u0131naqlar\u0131na \u0259saslan\u0131r Sponsorlar ` Dig\u0259r sponsorlar R\u0259yl\u0259r \"[ ] Son g\u00fcnl\u0259rd\u0259 FastAPI-\u0131 \u00e7ox istifad\u0259 edir\u0259m [ ] \u018fslind\u0259 onu komandam\u0131n b\u00fct\u00fcn Microsoftda ML sevisl\u0259rind\u0259 istifad\u0259 etm\u0259yi planlay\u0131ram",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "Onlar\u0131n b\u0259zil\u0259ri windows-un \u0259sas m\u0259hsuluna v\u0259 b\u0259zi Office m\u0259hsullar\u0131na inteqrasiya olunurlar \" Kabir Khan - Microsoft (ref) \"FastAPI kitabxanas\u0131n\u0131 Proqnozlar \u0259ld\u0259 etm\u0259k \u00fc\u00e7\u00fcn sor\u011fulana bil\u0259n REST serverini yaratmaqda istifad\u0259 etdik \" Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref) \"Netflix b\u00f6hran idar\u0259\u00e7iliyi orkestrl\u0259\u015fm\u0259 framework-n\u00fcn a\u00e7\u0131q qaynaql\u0131 burax\u0131l\u0131\u015f\u0131n\u0131 elan etm\u0259kd\u0259n m\u0259mnundur: Dispatch",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "[FastAPI il\u0259 quruldu]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"FastAPI \u00fc\u00e7\u00fcn h\u0259y\u0259canl\u0131yam \u00c7ox \u0259yl\u0259nc\u0259lidir \" Brian Okken - Python Bytes podcast host (ref) \"D\u00fcz\u00fcn\u00fc des\u0259m, sizin qurdu\u011funuz \u015fey h\u0259qiq\u0259t\u0259n m\u00f6hk\u0259m v\u0259 pe\u015f\u0259kar g\u00f6r\u00fcn\u00fcr Bir \u00e7ox c\u0259h\u0259td\u0259n Hug-un olmas\u0131n\u0131 ist\u0259diyim kimdir - kimins\u0259 bel\u0259 bir \u015fey qurdu\u011funu g\u00f6rm\u0259k h\u0259qiq\u0259t\u0259n ruhland\u0131r\u0131c\u0131d\u0131r \" Timothy Crosley - Hug creator (ref) \"\u018fg\u0259r REST API-l\u0259r yaratmaq \u00fc\u00e7\u00fcn m\u00fcasir framework \u00f6yr\u0259nm\u0259k ist\u0259yirsinizs\u0259, FastAPI-a bax\u0131n [",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "] S\u00fcr\u0259tli, istifad\u0259si v\u0259 \u00f6yr\u0259nm\u0259si asand\u0131r [ ]\" \"API xidm\u0259tl\u0259rimizi FastAPI-a k\u00f6\u00e7\u00fcrd\u00fck [ ] Sizin d\u0259 b\u0259y\u0259n\u0259c\u0259yinizi d\u00fc\u015f\u00fcn\u00fcr\u00fck \" Ines Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref) \"Python il\u0259 istifad\u0259y\u0259 haz\u0131r API qurmaq ist\u0259y\u0259n h\u0259r k\u0259s\u0259 FastAPI-\u0131 t\u00f6vsiy\u0259 edir\u0259m",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "M\u00f6ht\u0259\u015f\u0259m \u015f\u0259kild\u0259 dizayn edilmi\u015f, istifad\u0259si asan v\u0259 y\u00fcks\u0259k d\u0259r\u0259c\u0259d\u0259 geni\u015fl\u0259n\u0259 bil\u0259n-dir, API \u0259sasl\u0131 inki\u015faf strategiyam\u0131z\u0131n \u0259sas komponentin\u0259 \u00e7evrilib v\u0259 Virtual TAC Engineer kimi bir \u00e7ox avtomatla\u015fd\u0131rma v\u0259 servisl\u0259ri idar\u0259 edir \" Deon Pillsbury - Cisco (ref) Typer, CLI-lar\u0131n FastAPI-\u0131 \u018fg\u0259r siz veb API \u0259v\u0259zin\u0259 terminalda istifad\u0259 edil\u0259c\u0259k CLI proqram\u0131 qurursunuzsa, Typer-a baxa bil\u0259rsiniz Typer FastAPI-\u0131n ki\u00e7ik qarda\u015f\u0131d\u0131r V\u0259 o, CLI-l\u0259rin FastAPI-\u0131 olmaq \u00fc\u00e7\u00fcn n\u0259z\u0259rd\u0259 tutulub",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "T\u0259l\u0259bl\u0259r FastAPI n\u0259h\u0259ngl\u0259rin \u00e7iyinl\u0259rind\u0259 dayan\u0131r: Web t\u0259r\u0259fi \u00fc\u00e7\u00fcn Starlette Data t\u0259r\u0259fi \u00fc\u00e7\u00fcn Pydantic Qura\u015fd\u0131rma  pip install fastapi --- 100 T\u0259tbiqimizi \u0259l\u00e7atan etm\u0259k \u00fc\u00e7\u00fcn biz\u0259 Uvicorn v\u0259 ya Hypercorn kimi ASGI server laz\u0131md\u0131r pip install \"uvicorn[standard]\" --- 100 N\u00fcmun\u0259 Kodu yaradaq main py adl\u0131 fayl yaradaq v\u0259 ona a\u015fa\u011f\u0131dak\u0131 kodu yerl\u0259\u015fdir\u0259k: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} V\u0259 ya async def \u018fg\u0259r kodunuzda async v\u0259 ya await vard\u0131rsa async def istifad\u0259 ed\u0259 bil\u0259rik: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Qeyd: \u018fg\u0259r bu m\u00f6vzu haqq\u0131nda m\u0259lumat\u0131n\u0131z yoxdursa async v\u0259 await s\u0259n\u0259dind\u0259ki \"T\u0259l\u0259sirs\u0259n \" b\u00f6lm\u0259sin\u0259 baxa bil\u0259rsiniz Kodu i\u015f\u0259 salaq Serveri a\u015fa\u011f\u0131dak\u0131 \u0259mr il\u0259 i\u015f\u0259 salaq:  uvicorn main:app --reload INFO: Uvicorn running on http://127 0 0",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup INFO: Application startup complete uvicorn main:app --reload \u0259mri haqq\u0131nda uvicorn main:app \u0259mri a\u015fa\u011f\u0131dak\u0131lara instinad edir: main: main py fayl\u0131 (y\u0259ni Python \"modulu\") app: main py fayl\u0131nda app = FastAPI() s\u0259trind\u0259 yaratd\u0131\u011f\u0131m\u0131z FastAPI obyektidir --reload: kod d\u0259yi\u015fikliyind\u0259n sonra avtomatik olaraq serveri yenid\u0259n i\u015f\u0259 sal\u0131r",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "Bu parametrd\u0259n yaln\u0131z development m\u0259rh\u0259l\u0259sind\u0259 istifad\u0259 etm\u0259liyik \u0130ndi yoxlayaq Bu linki brauzerimizd\u0259 a\u00e7aq http://127 0 0 1:8000/items/5 q=somequery A\u015fa\u011f\u0131dak\u0131 kimi bir JSON cavab\u0131 g\u00f6r\u0259c\u0259ksiniz: {\"item_id\": 5, \"q\": \"somequery\"} Siz art\u0131q bir API yaratm\u0131s\u0131n\u0131z, hans\u0131 ki: / v\u0259 /items/{item_id} yollar\u0131nda HTTP sor\u011fular\u0131n\u0131 q\u0259bul edir H\u0259r iki yolda GET \u0259m\u0259liyyatlar\u0131n\u0131 (h\u0259m\u00e7inin HTTP metodlar\u0131 kimi bilinir) apar\u0131r /items/{item_id} yolu item_id adl\u0131 int qiym\u0259ti almal\u0131 olan yol parametrin\u0259 sahibdir",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "/items/{item_id} yolunun q adl\u0131 yol parametri var v\u0259 bu parametr ist\u0259y\u0259 ba\u011fl\u0131 olsa da, str qiym\u0259tini almal\u0131d\u0131r \u0130nteraktiv API S\u0259n\u0259dl\u0259ri \u0130ndi http://127 0 0 1:8000/docs \u00fcnvan\u0131na daxil olun Avtomatik interaktiv API s\u0259n\u0259dl\u0259rini g\u00f6r\u0259c\u0259ksiniz (Swagger UI t\u0259r\u0259find\u0259n t\u0259min edilir): Alternativ API s\u0259n\u0259dl\u0259ri \u0130ndi is\u0259 http://127 0 0 1:8000/redoc \u00fcnvan\u0131na daxil olun ReDoc t\u0259r\u0259find\u0259n t\u0259qdim edil\u0259n avtomatik s\u0259n\u0259dl\u0259ri g\u00f6r\u0259c\u0259ksiniz: N\u00fcmun\u0259ni Yenil\u0259y\u0259k \u0130ndi g\u0259lin main",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "py fayl\u0131n\u0131 PUT sor\u011fusu il\u0259 birlikd\u0259 g\u00f6vd\u0259 q\u0259bul ed\u0259c\u0259k \u015f\u0259kild\u0259 d\u0259yi\u015fdir\u0259k Pydantic say\u0259sind\u0259 standart Python tipl\u0259rind\u0259n istifad\u0259 ed\u0259r\u0259k g\u00f6vd\u0259ni m\u00fc\u0259yy\u0259n ed\u0259k from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item name, \"item_id\": item_id} Server avtomatik olaraq yenid\u0259n i\u015f\u0259 sal\u0131nmal\u0131 idi (\u00e7\u00fcnki biz yuxar\u0131da uvicorn \u0259mri il\u0259 --reload parametrind\u0259n istifad\u0259 etmi\u015fik) \u0130nteraktiv API s\u0259n\u0259dl\u0259rind\u0259ki d\u0259yi\u015fikliy\u0259 baxaq Yenid\u0259n http://127 0 0 1:8000/docs \u00fcnvan\u0131na daxil olun",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "\u0130nteraktiv API s\u0259n\u0259dl\u0259ri yeni g\u00f6vd\u0259 d\u0259 daxil olmaq il\u0259 avtomatik olaraq yenil\u0259n\u0259c\u0259k: \"Try it out\" d\u00fcym\u0259sini klikl\u0259yin, bu, parametrl\u0259ri doldurma\u011fa v\u0259 API il\u0259 birba\u015fa \u0259laq\u0259 saxlama\u011fa imkan verir: Sonra \"Execute\" d\u00fcym\u0259sini klikl\u0259yin, istifad\u0259\u00e7i interfeysi API il\u0259 \u0259laq\u0259 quracaq, parametrl\u0259ri g\u00f6nd\u0259r\u0259c\u0259k, n\u0259tic\u0259l\u0259ri \u0259ld\u0259 ed\u0259c\u0259k v\u0259 onlar\u0131 ekranda g\u00f6st\u0259r\u0259c\u0259k: Alternativ API S\u0259n\u0259dl\u0259rind\u0259ki D\u0259yi\u015fikliy\u0259 Baxaq \u0130ndi is\u0259 yenid\u0259n http://127 0 0 1:8000/redoc \u00fcnvan\u0131na daxil olun",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "Alternativ s\u0259n\u0259dl\u0259r h\u0259m d\u0259 yeni sor\u011fu parametri v\u0259 g\u00f6vd\u0259sini \u0259ks etdir\u0259c\u0259k: X\u00fclas\u0259 \u00dcmumil\u0259\u015fdirs\u0259k, parametrl\u0259r, g\u00f6vd\u0259 v\u0259 s Biz m\u0259lumat n\u00f6vl\u0259rini bir d\u0259f\u0259 funksiya parametrl\u0259ri kimi t\u0259yin edirik Bunu standart m\u00fcasir Python tipl\u0259ri il\u0259 edirsiniz Yeni sintaksis, m\u00fc\u0259yy\u0259n bir kitabxanan\u0131n metodlar\u0131n\u0131 v\u0259 ya sinifl\u0259rini v\u0259 s \u00f6yr\u0259nm\u0259k m\u0259cburiyy\u0259tind\u0259 deyilsiniz Sad\u0259c\u0259 standart Python M\u0259s\u0259l\u0259n, int \u00fc\u00e7\u00fcn: item_id: int v\u0259 ya daha m\u00fcr\u0259kk\u0259b Item modeli \u00fc\u00e7\u00fcn: item: Item",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "v\u0259 yaln\u0131z parametr tipini t\u0259yin etm\u0259kl\u0259 bunlar\u0131 \u0259ld\u0259 edirsiniz: Redaktor d\u0259st\u0259yi il\u0259: Avtomatik tamamlama Tip yoxlanmas\u0131 M\u0259lumatlar\u0131n T\u0259sdiql\u0259nm\u0259si: M\u0259lumat etibars\u0131z olduqda avtomatik olaraq ayd\u0131n x\u0259talar g\u00f6st\u0259rir H\u0259tta \u00e7ox d\u0259rin JSON obyektl\u0259rind\u0259 bel\u0259 do\u011frulama apar\u0131r Daxil olan m\u0259lumatlar\u0131 \u00e7evirm\u0259k \u00fc\u00e7\u00fcn a\u015fa\u011f\u0131dak\u0131 m\u0259lumat n\u00f6vl\u0259rind\u0259n istifad\u0259 edilir: JSON Yol parametrl\u0259ri Sor\u011fu parametrl\u0259ri \u00c7\u0259r\u0259zl\u0259r Ba\u015fl\u0131qlaq Formalar Fayllar",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "Daxil olan m\u0259lumatlar\u0131 \u00e7evirm\u0259k \u00fc\u00e7\u00fcn a\u015fa\u011f\u0131dak\u0131 m\u0259lumat n\u00f6vl\u0259rind\u0259n istifad\u0259 edilir (JSON olaraq): Python tipl\u0259rinin (str, int, float, bool, list, v\u0259 s) \u00e7evrilm\u0259si datetime obyektl\u0259ri UUID obyektl\u0259ri Veril\u0259nl\u0259r bazas\u0131 modell\u0259ri v\u0259 daha \u00e7oxu 2 alternativ istifad\u0259\u00e7i interfeysi daxil olmaqla avtomatik interaktiv API s\u0259n\u0259dl\u0259rini t\u0259min edir: Swagger UI ReDoc G\u0259lin \u0259vv\u0259lki n\u00fcmun\u0259y\u0259 qay\u0131daq v\u0259 FastAPI-nin n\u0259l\u0259r ed\u0259c\u0259yin\u0259 n\u0259z\u0259r salaq: GET v\u0259 PUT sor\u011fular\u0131 \u00fc\u00e7\u00fcn item_id-nin yolda olub-olmad\u0131\u011f\u0131n\u0131 yoxlayacaq",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "item_id-nin GET v\u0259 PUT sor\u011fular\u0131 \u00fc\u00e7\u00fcn n\u00f6v\u00fcn\u00fcn int oldu\u011funu yoxlayacaq \u018fg\u0259r int deyils\u0259, s\u0259b\u0259bini g\u00f6st\u0259r\u0259n bir x\u0259ta mesaj\u0131 g\u00f6st\u0259r\u0259c\u0259kdir m\u0259cburi olmayan q parametrinin GET (http://127 0 0 1:8000/items/foo q=somequery burdak\u0131 kimi) sor\u011fusu i\u00e7\u0259risind\u0259 olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq q parametrini = None il\u0259 yaratd\u0131\u011f\u0131m\u0131z \u00fc\u00e7\u00fcn, m\u0259cburi olmayan parametr olacaq \u018fg\u0259r None olmasayd\u0131, bu m\u0259cburi parametr olard\u0131 (PUT metodunun g\u00f6vd\u0259sind\u0259 oldu\u011fu kimi)",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        },
        {
          "content": "PUT sor\u011fusu \u00fc\u00e7\u00fcn, /items/{item_id} g\u00f6vd\u0259sini JSON olaraq oxuyacaq: name ad\u0131nda m\u0259cburi bir parametr olub olmad\u0131\u011f\u0131n\u0131 v\u0259 \u0259g\u0259r varsa, tipinin str olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq price ad\u0131nda m\u0259cburi bir parametr olub olmad\u0131\u011f\u0131n\u0131 v\u0259 \u0259g\u0259r varsa, tipinin float olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq is_offer ad\u0131nda m\u0259cburi olmayan bir parametr olub olmad\u0131\u011f\u0131n\u0131 v\u0259 \u0259g\u0259r varsa, tipinin float olub olmad\u0131\u011f\u0131n\u0131 yoxlayacaq B\u00fct\u00fcn bunlar \u0259n d\u0259rin JSON obyektl\u0259rind\u0259 bel\u0259 i\u015fl\u0259y\u0259c\u0259k",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_22"
        },
        {
          "content": "M\u0259lumatlar\u0131n JSON-a v\u0259 JSON-un Python obyektin\u0259 \u00e7evrilm\u0259si avtomatik h\u0259yata ke\u00e7iril\u0259c\u0259k H\u0259r \u015feyi OpenAPI il\u0259 uy\u011fun olacaq \u015f\u0259kild\u0259 avtomatik olaraq s\u0259n\u0259dl\u0259\u015fdir\u0259c\u0259k v\u0259 onlar\u0131 a\u015fa\u011f\u0131dak\u0131 kimi istifad\u0259 ed\u0259 bil\u0259c\u0259k: \u0130nteraktiv s\u0259n\u0259dl\u0259\u015fm\u0259 sisteml\u0259ri Bir \u00e7ox proqramla\u015fd\u0131rma dill\u0259ri \u00fc\u00e7\u00fcn avtomatla\u015fd\u0131r\u0131lm\u0131\u015f m\u00fc\u015ft\u0259ri kodu yaratma sisteml\u0259ri 2 interaktiv s\u0259n\u0259dl\u0259\u015fm\u0259 veb interfeysini birba\u015fa t\u0259min ed\u0259c\u0259k Yeni ba\u015flam\u0131\u015f\u0131q, amma siz art\u0131q i\u015fin m\u0259ntiqini ba\u015fa d\u00fc\u015fm\u00fcs\u00fcn\u00fcz",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_23"
        },
        {
          "content": "\u0130ndi a\u015fa\u011f\u0131dak\u0131 s\u0259tri d\u0259yi\u015fdirm\u0259y\u0259 \u00e7al\u0131\u015f\u0131n: return {\"item_name\": item name, \"item_id\": item_id} bundan: \"item_name\": item name buna: \"item_price\": item price v\u0259 redaktorun m\u0259lumat tipl\u0259rini bildiyini v\u0259 avtomatik tamalad\u0131\u011f\u0131n\u0131 g\u00f6r\u0259c\u0259ksiniz: Daha \u00e7ox funksiyaya malik daha dol\u011fun n\u00fcmun\u0259 \u00fc\u00e7\u00fcn \u00d6yr\u0259dici - \u0130stifad\u0259\u00e7i T\u0259limat\u0131 s\u0259hif\u0259sin\u0259 baxa bil\u0259rsiniz",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_24"
        },
        {
          "content": "Spoiler x\u0259b\u0259rdarl\u0131\u011f\u0131: \u00d6yr\u0259dici - istifad\u0259\u00e7i t\u0259limat\u0131na bunlar daxildir: Parametrl\u0259rin, ba\u015fl\u0131qlar, \u00e7\u0259r\u0259zl\u0259r, forma sah\u0259l\u0259ri v\u0259 fayllar olaraq m\u00fc\u0259yy\u0259n edilm\u0259si maximum_length v\u0259 ya regex kimi do\u011frulama m\u0259hdudiyy\u0259tl\u0259rinin nec\u0259 t\u0259yin edil\u0259c\u0259yi \u00c7ox g\u00fccl\u00fc v\u0259 istifad\u0259si asan Dependency Injection sistemi T\u0259hl\u00fck\u0259sizlik v\u0259 autentifikasiya, JWT tokenl\u0259ri il\u0259 OAuth2 d\u0259st\u0259yi v\u0259 HTTP Basic autentifikasiyas\u0131",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_25"
        },
        {
          "content": "\u00e7ox d\u0259rin JSON modell\u0259rini m\u00fc\u0259yy\u0259n etm\u0259k \u00fc\u00e7\u00fcn daha ir\u0259li s\u0259viyy\u0259 (lakin eyni d\u0259r\u0259c\u0259d\u0259 asan) \u00fcsullar (Pydantic say\u0259sind\u0259) Strawberry v\u0259 dig\u0259r kitabxanalar il\u0259 GraphQL inteqrasiyas\u0131 Dig\u0259r \u0259lav\u0259 x\u00fcsusiyy\u0259tl\u0259r (Starlette say\u0259sind\u0259): WebSockets HTTPX v\u0259 pytest say\u0259sind\u0259 \u00e7ox asan testl\u0259r CORS Cookie Sessions v\u0259 daha \u00e7oxu",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_26"
        },
        {
          "content": "Performans M\u00fcst\u0259qil TechEmpower meyarlar\u0131 g\u00f6st\u0259rir ki, Uvicorn \u00fcz\u0259rind\u0259 i\u015fl\u0259y\u0259n FastAPI proqramlar\u0131 \u0259n s\u00fcr\u0259tli Python kitabxanalar\u0131ndan biridir, yaln\u0131z Starlette v\u0259 Uvicorn-un \u00f6z\u00fcnd\u0259n yava\u015fd\u0131r, ki FastAPI bunlar\u0131n \u00fcz\u0259rin\u0259 qurulmu\u015f bir framework-d\u00fcr (*) \u018ftrafl\u0131 m\u0259lumat \u00fc\u00e7\u00fcn bu b\u00f6lm\u0259y\u0259 n\u0259z\u0259r sal\u0131n M\u00fcqayis\u0259l\u0259r M\u0259cburi Olmayan T\u0259l\u0259bl\u0259r Pydantic t\u0259r\u0259find\u0259n istifad\u0259 olunanlar: email-validator - e-po\u00e7tun yoxlan\u0131lmas\u0131 \u00fc\u00e7\u00fcn pydantic-settings - parametrl\u0259rin idar\u0259 edilm\u0259si \u00fc\u00e7\u00fcn",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_27"
        },
        {
          "content": "pydantic-extra-types - Pydantic il\u0259 istifad\u0259 edil\u0259 bil\u0259n \u0259lav\u0259 tipl\u0259r \u00fc\u00e7\u00fcn Starlette t\u0259r\u0259find\u0259n istifad\u0259 olunanlar: httpx - \u018fg\u0259r TestClient strukturundan istifad\u0259 ed\u0259c\u0259ksinizs\u0259, t\u0259l\u0259b olunur jinja2 - Standart \u015fablon konfiqurasiyas\u0131ndan istifad\u0259 etm\u0259k ist\u0259yirsinizs\u0259, t\u0259l\u0259b olunur python-multipart - request form() il\u0259 forma \"\u00e7evirm\u0259\" d\u0259st\u0259yind\u0259n istifad\u0259 etm\u0259k ist\u0259yirsinizs\u0259, t\u0259l\u0259b olunur itsdangerous - SessionMiddleware d\u0259st\u0259yi \u00fc\u00e7\u00fcn t\u0259l\u0259b olunur",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_28"
        },
        {
          "content": "pyyaml - SchemaGenerator d\u0259st\u0259yi \u00fc\u00e7\u00fcn t\u0259l\u0259b olunur (\u00c7ox g\u00fcman ki, FastAPI istifad\u0259 ed\u0259rk\u0259n buna ehtiyac\u0131n\u0131z olmayacaq) ujson - UJSONResponse istifad\u0259 etm\u0259k ist\u0259yirsinizs\u0259, t\u0259l\u0259b olunur H\u0259m FastAPI, h\u0259m d\u0259 Starlette t\u0259r\u0259find\u0259n istifad\u0259 olunur: uvicorn - Yaratd\u0131\u011f\u0131m\u0131z proqram\u0131 servis ed\u0259c\u0259k veb server kimi f\u0259aliyy\u0259t g\u00f6st\u0259rir orjson - ORJSONResponse istifad\u0259 ed\u0259c\u0259ksinizs\u0259 t\u0259l\u0259b olunur B\u00fct\u00fcn bunlar\u0131 pip install fastapi[all] il\u0259 qura\u015fd\u0131ra bil\u0259rsiniz",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_29"
        },
        {
          "content": "Lisenziya Bu layih\u0259 MIT lisenziyas\u0131n\u0131n \u015f\u0259rtl\u0259rin\u0259 \u0259sas\u0259n lisenziyala\u015fd\u0131r\u0131l\u0131b Yuxar\u0131ya qay\u0131tmaq",
          "url": "https://fastapi.tiangolo.com/az/#sponsorlar",
          "library": "fastapi",
          "chunk_id": "fastapi_30"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/bn/#_1",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI \u09b8\u099a \u09a4\u09b2\u0995 \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u09ae\u09a4\u09ae\u09a4 \u09b8\u09ae\u09b9 Typer, CLI \u098f\u09b0 \u099c\u09a8\u09af FastAPI \u09aa\u09b0\u09af\u099c\u09a8\u09af\u09a4 \u0997\u09b2 \u0987\u09a8\u09b8\u099f\u09b2\u09b6\u09a8 \u09aa\u09b0\u0995\u09b0\u09df \u0989\u09a6\u09b9\u09b0\u09a3 \u09a4\u09b0 \u098f\u099f \u099a\u09b2\u09a8 \u098f\u099f \u099a\u0995 \u0995\u09b0\u09a8 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa \u0986\u09aa\u0997\u09b0\u09a1 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a8\u09a8\u09a4\u0995\u09b0\u09a3 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0986\u09aa\u0997\u09b0\u09a1 \u09b8\u0995\u09b7\u09aa\u09a4\u0995\u09b0\u09a3 \u0995\u09b0\u09ae\u0995\u09b7\u09ae\u09a4 \u0990\u099a\u099b\u0995 \u09a8\u09b0\u09ad\u09b0\u09b6\u09b2\u09a4 \u09b2\u0987\u09b8\u09a8\u09b8 Features \u09b6\u0996\u09a8 \u09b6\u0996\u09a8 \u09aa\u0987\u09a5\u09a8 \u098f\u09b0 \u099f\u0987\u09aa\u09b8 \u09aa\u09b0\u099a\u09a4 Concurrency and async / await \u098f\u09a8\u09ad\u09af\u09b0\u09a8\u09ae\u09a8\u099f \u09ad\u09b0\u09af\u09ac\u09b2\u09b8 Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes \u09b8\u099a \u09a4\u09b2\u0995 \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u09ae\u09a4\u09ae\u09a4 \u09b8\u09ae\u09b9 Typer, CLI \u098f\u09b0 \u099c\u09a8\u09af FastAPI \u09aa\u09b0\u09af\u099c\u09a8\u09af\u09a4 \u0997\u09b2 \u0987\u09a8\u09b8\u099f\u09b2\u09b6\u09a8 \u09aa\u09b0\u0995\u09b0\u09df \u0989\u09a6\u09b9\u09b0\u09a3 \u09a4\u09b0 \u098f\u099f \u099a\u09b2\u09a8 \u098f\u099f \u099a\u0995 \u0995\u09b0\u09a8 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa \u0986\u09aa\u0997\u09b0\u09a1 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a8\u09a8\u09a4\u0995\u09b0\u09a3 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0986\u09aa\u0997\u09b0\u09a1 \u09b8\u0995\u09b7\u09aa\u09a4\u0995\u09b0\u09a3 \u0995\u09b0\u09ae\u0995\u09b7\u09ae\u09a4 \u0990\u099a\u099b\u0995 \u09a8\u09b0\u09ad\u09b0\u09b6\u09b2\u09a4 \u09b2\u0987\u09b8\u09a8\u09b8 FastAPI FastAPI \u0989\u099a\u099a\u0995\u09b7\u09ae\u09a4 \u09b8\u09ae\u09aa\u09a8\u09a8, \u09b8\u09b9\u099c \u09b6\u0996\u09b0 \u098f\u09ac \u09a6\u09b0\u09a4 \u0995\u09a1 \u0995\u09b0 \u09aa\u09b0\u09a1\u0995\u09b6\u09a8\u09b0 \u099c\u09a8\u09af \u09ab\u09b0\u09ae\u0993\u09df\u09b0\u0995 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5: https://fastapi.tiangolo.com \u09b8\u09b0\u09b8 \u0995\u09a1: https://github.com/fastapi/fastapi FastAPI \u098f\u0995\u099f \u0986\u09a7\u09a8\u0995, \u09a6\u09b0\u09a4 ( \u09ac\u09b6 \u0995\u09b7\u09ae\u09a4 ) \u09b8\u09ae\u09aa\u09a8\u09a8, Python 3.6+ \u09a6\u09df API \u09a4\u09b0\u09b0 \u099c\u09a8\u09af \u09b8\u099f\u09af\u09a8\u09a1\u09b0\u09a1 \u09aa\u0987\u09a5\u09a8 \u099f\u0987\u09aa \u0987\u0999\u0997\u09a4 \u09ad\u09a4\u09a4\u0995 \u0993\u09af\u09ac \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995 \u098f\u09b0 \u09ae\u09b2 \u09ac\u09b6\u09b7\u099f\u09af \u0997\u09b2 \u09b9\u09b2 \u0997\u09a4: \u098f\u099f NodeJS \u098f\u09ac Go \u098f\u09b0 \u09ae\u09a4 \u0995\u09b0\u09af\u0995\u09b7\u09ae\u09a4 \u09b8\u09ae\u09aa\u09a8\u09a8 (Starlette \u098f\u09ac Pydantic \u098f\u09b0 \u09b8\u09b9\u09af\u09af) \u09aa\u0987\u09a5\u09a8 \u098f\u09b0 \u09a6\u09b0\u09a4\u09a4\u09ae \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995 \u0997\u09b2\u09b0 \u09ae\u09a7\u09af \u098f\u099f \u098f\u0995\u099f \u09a6\u09b0\u09a4 \u0995\u09a1 \u0995\u09b0:\u09ac\u09b6\u09b7\u099f\u09af \u09a4\u09b0\u09b0 \u0997\u09a4 \u09e8\u09e6\u09e6 \u09a5\u0995 \u09e9\u09e6\u09e6 \u09ac\u09a6\u09a7 \u0995\u09b0\u09f7 * \u09b8\u09ac\u09b2\u09aa bugs: \u09ae\u09a8\u09ac (\u09a1\u09ad\u09b2\u09aa\u09b0) \u09b8\u09b7\u099f \u09a4\u09b0\u099f\u09b0 \u09aa\u09b0\u09af \u09ea\u09e6 \u09b9\u09b0\u09b8 \u0995\u09b0 * \u09b8\u09ac\u099c\u099e\u09a4: \u09a6\u09b0\u09a6\u09a8\u09a4 \u098f\u09a1\u099f\u09b0 \u09b8\u09b9\u09af\u09af Completion \u09a8\u09ae\u0993 \u09aa\u09b0\u099a\u09a4 \u09a6\u09b0\u09a4 \u09a1\u09ac\u0997 \u0995\u09b0 \u09af\u09df \u09b8\u09b9\u099c: \u098f\u099f \u098f\u09ae\u09a8 \u09ad\u09ac \u09b8\u099c\u09a8 \u09b9\u09df\u099b \u09af\u09a8 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09aa\u09dc \u09b8\u09b9\u099c \u09b6\u0996 \u098f\u09ac \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09af\u09df \u09b8\u0995\u09b7\u09aa\u09a4: \u0995\u09a1 \u09aa\u09a8\u09b0\u09ac\u09a4\u09a4 \u0995\u09ae\u09a8\u09b0 \u09aa\u09b6\u09aa\u09b6, bug \u0995\u09ae\u09df \u098f\u09ac \u09aa\u09b0\u09a4\u099f \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0998\u09b7\u09a3 \u09a5\u0995 \u098f\u0995\u09a7\u0995 \u09ab\u099a\u09b0 \u09aa\u0993\u09df \u09af\u09df  \u099c\u09b0\u09b2: \u09b8\u09ac\u09af\u0995\u09b0\u09af \u09ad\u09ac \u09a4\u09b0 \u0995\u09b0\u09df\u09b6\u09b2 \u09a8\u09b0\u09a6\u09b6\u09a8 \u09a8\u09a5 (documentation) \u09b8\u09b9 \u0989\u09ce\u09aa\u09a6\u09a8 \u0989\u09aa\u09af\u0997 (Production-ready) \u0995\u09a1 \u09aa\u0993\u09df \u09af\u09df \u09ae\u09a8-\u09ad\u09a4\u09a4\u0995: \u098f\u09b0 \u09ad\u09a4\u09a4 OpenAPI (\u09af \u09aa\u09b0\u09ac Swagger \u09a8\u09ae \u09aa\u09b0\u099a\u09a4 \u099b\u09b2) \u098f\u09ac JSON Schema \u098f\u09b0 \u0986\u09a6\u09b0\u09b6\u09b0 \u09ae\u09a8\u09b0 \u0993\u09aa\u09b0 * \u0989\u09ce\u09aa\u09a6\u09a8\u09ae\u0996 \u098f\u09aa\u09b2\u0995\u09b6\u09a8 \u09ac\u09a8\u09a8\u09b0 \u098f\u0995 \u09a6\u09b2 \u09a1\u09ad\u09b2\u09aa\u09b0 \u098f\u09b0 \u09ae\u09a4\u09ae\u09a4 \u09ad\u09a4\u09a4\u0995 \u09ab\u09b2\u09ab\u09b2 \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u0985\u09a8\u09af\u09a8\u09af \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u09ae\u09a4\u09ae\u09a4 \u09b8\u09ae\u09b9 \"\u0986\u09ae \u0986\u099c\u0995\u09b2 FastAPI \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u099b [...] \u0986\u09ae\u09b0 \u09ad\u09ac\u099b \u09ae\u0987\u0995\u09b0\u09b8\u09ab\u099f ML \u09b8\u09b0\u09ad\u09b8 \u098f \u09b8\u0995\u09b2 \u09a6\u09b2\u09b0 \u099c\u09a8\u09af \u098f\u099f \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09ac \u09af\u09b0 \u09ae\u09a7\u09af \u0995\u099b \u09aa\u09a3\u09af Windows \u098f \u09b8\u09af\u09af\u09a8 \u09b9\u09df \u098f\u09ac \u0995\u099b Office \u098f\u09b0 \u09b8\u09a5 \u09b8\u09af\u09af\u09a8 \u09b9\u099a\u099b\" \u0995\u09ac\u09b0 \u0996\u09a8 - \u09ae\u0987\u0995\u09b0\u09b8\u09ab\u099f (ref) \"\u0986\u09ae\u09b0 FastAPI \u09b2\u0987\u09ac\u09b0\u09b0 \u0997\u09b0\u09b9\u09a3 \u0995\u09b0\u099b \u098f\u0995\u099f REST \u09b8\u09b0\u09ad\u09b0 \u09a4\u09b0 \u0995\u09b0\u09a4, \u09af \u09ad\u09ac\u09b7\u09af\u09a6\u09ac\u09a3 \u09aa\u0993\u09af\u09b0 \u099c\u09a8\u09af \u0995\u09df\u09b0 \u0995\u09b0 \u09af\u09a4 \u09aa\u09b0 [\u09b2\u09a1\u0989\u0987\u0997\u09b0 \u099c\u09a8\u09af]\" \u09aa\u09af\u09b0 \u09ae\u09b2\u09a8, \u0987\u09af\u09b0\u09b8\u09b2\u09ad \u09a6\u09a6\u09a8, \u098f\u09ac \u09b8\u0987 \u09b8\u09ae\u09a8\u09a5 \u09ae\u09b0\u09af\u09b2 - \u0989\u09ac\u09b0 (ref) \"Netflix \u0986\u09ae\u09a6\u09b0 \u0995\u09b0\u0987\u09b8\u09b8 \u09ae\u09af\u09a8\u099c\u09ae\u09a8\u099f \u0985\u09b0\u0995\u09b8\u099f\u09b0\u09b6\u09a8 \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995: \u09a1\u09b8\u09aa\u09af\u099a \u098f\u09b0 \u0993\u09aa\u09a8 \u09b8\u09b0\u09b8 \u09b0\u09b2\u099c \u0998\u09b7\u09a3 \u0995\u09b0\u09a4 \u09aa\u09b0 \u0986\u09a8\u09a8\u09a6\u09a4! [\u09af\u0995\u09a8 FastAPI \u09a6\u09af \u09a8\u09b0\u09ae\u09a4]\" \u0995\u09ad\u09a8 \u0997\u09b2\u09b8\u09a8, \u09ae\u09b0\u0995 \u09ad\u09b2\u09a8\u09ad, \u09ab\u09b0\u09b8\u099f \u09ae\u09a8\u09b8\u09a8 - \u09a8\u099f\u09ab\u09b2\u0995\u09b8 (ref) \"\u0986\u09ae FastAPI \u09a8\u09af \u099a\u09a6\u09b0 \u09b8\u09ae\u09a8 \u0989\u09ce\u09b8\u09b9\u09a4 \u098f\u099f \u0996\u09ac\u0987 \u09ae\u099c\u09b0!\" \u09ac\u09b0\u09af\u09a8 \u0993\u0995\u09a8 - \u09aa\u0987\u09a5\u09a8 \u09ac\u0987\u099f\u09b8 \u09aa\u09a1\u0995\u09b8\u099f \u09b9\u09b8\u099f (ref) \"_\u09b8\u09a4\u09af\u0987, \u0986\u09aa\u09a8 \u09af \u09a4\u09b0 \u0995\u09b0\u099b\u09a8 \u09a4 \u0996\u09ac \u09ae\u099c\u09ac\u09a4 \u098f\u09ac \u09aa\u09b0\u09aa\u09b0\u09a8\u09f7 \u0985\u09a8\u0995 \u0989\u09aa\u09af, \u0986\u09ae \u09af Hug \u098f \u0995\u09b0\u09a4 \u099a\u09df\u099b\u09b2\u09ae - \u09a4 \u0995\u0989\u0995 \u09a4\u09b0 \u0995\u09b0\u09a4 \u09a6\u0996 \u0986\u09ae \u09b8\u09a4\u09af\u0987 \u0985\u09a8\u09aa\u09b0\u09a8\u09a4\u09f7_\" \u099f\u09ae\u09a5 \u0995\u09b0\u09b8\u09b2 - Hug \u09b8\u09b0\u09b7\u099f (ref) \"\u0986\u09aa\u09a8 \u09af\u09a6 REST API \u09a4\u09b0\u09b0 \u099c\u09a8\u09af \u098f\u0995\u099f \u0986\u09a7\u09a8\u0995 \u09ab\u09b0\u09ae\u0993\u09df\u09b0\u0995 \u09b6\u0996\u09a4 \u099a\u09a8, \u09a4\u09b9\u09b2 FastAPI \u09a6\u0996\u09a8 [...] \u098f\u099f \u09a6\u09b0\u09a4, \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09b8\u09b9\u099c \u098f\u09ac \u09b6\u0996\u09a4\u0993 \u09b8\u09b9\u099c [...]_\" \"\u0986\u09ae\u09b0 \u0986\u09ae\u09a6\u09b0 APIs [...] \u098f\u09b0 \u099c\u09a8\u09af FastAPI- \u09a4 \u098f\u09b8\u099b [...] \u0986\u09ae \u09ae\u09a8 \u0995\u09b0 \u0986\u09aa\u09a8\u0993 \u098f\u099f \u09aa\u099b\u09a8\u09a6 \u0995\u09b0\u09ac\u09a8 [...]\" \u0987\u09a8\u09b8 \u09ae\u09a8\u099f\u09a8 - \u09ae\u09af\u09a5\u0989 \u09b9\u09a8\u09ac\u09b2 - Explosion AI \u09aa\u09b0\u09a4\u09b7\u09a0\u09a4 - spaCy \u09b8\u09b0\u09b7\u099f (ref) - (ref) Typer, CLI \u098f\u09b0 \u099c\u09a8\u09af FastAPI \u0986\u09aa\u09a8 \u09af\u09a6 CLI \u0985\u09af\u09aa \u09ac\u09a8\u09a4 \u099a\u09a8, \u09af \u0995\u09a8 \u0993\u09df\u09ac API \u098f\u09b0 \u09aa\u09b0\u09ac\u09b0\u09a4 \u099f\u09b0\u09ae\u09a8\u09b2 \u09ac\u09af\u09ac\u09b9\u09b0 \u09b9\u09ac, \u09a4\u09b9\u09b2 \u09a6\u0996\u09a8Typer. \u099f\u0987\u09aa\u09b0 \u09b9\u09b2 FastAPI \u098f\u09b0 \u099b\u099f \u09ad\u0987\u09df\u09b0 \u09ae\u09a4 \u098f\u09ac \u098f\u099f\u09b0 \u0989\u09a6\u09a6\u09b6\u09af \u099b\u09b2 CLIs \u098f\u09b0 FastAPI \u09b9\u0993\u09df   \u09aa\u09b0\u09af\u099c\u09a8\u09af\u09a4 \u0997\u09b2 Python 3.7+ FastAPI \u0995\u099b \u09a6\u09a8\u09ac\u09a6\u09b0 \u0995\u09a7 \u09a6\u09a1\u09af \u0986\u099b: Starlette \u0993\u09af\u09ac \u0985\u09b6\u09b0 \u099c\u09a8\u09af. Pydantic \u09a1\u099f \u0985\u09b6\u0997\u09b2\u09b0 \u099c\u09a8\u09af. \u0987\u09a8\u09b8\u099f\u09b2\u09b6\u09a8 \u09aa\u09b0\u0995\u09b0\u09df  pip install fastapi --- 100 \u0986\u09aa\u09a8\u09b0 \u098f\u0995\u099f ASGI \u09b8\u09b0\u09ad\u09b0\u09b0\u0993 \u09aa\u09b0\u09af\u099c\u09a8 \u09b9\u09ac, \u09aa\u09b0\u09a1\u0995\u09b6\u09a8\u09b0 \u099c\u09a8\u09af Uvicorn \u0985\u09a5\u09ac Hypercorn.  pip install \"uvicorn[standard]\" --- 100 \u0989\u09a6\u09b9\u09b0\u09a3 \u09a4\u09b0 main.py \u09a8\u09ae \u098f\u0995\u099f \u09ab\u0987\u09b2 \u09a4\u09b0 \u0995\u09b0\u09a8: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} \u0985\u09a5\u09ac \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a8 async def... \u09af\u09a6 \u0986\u09aa\u09a8\u09b0 \u0995\u09a1 async / await, \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09a4\u09b9\u09b2 async def \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a8: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} \u099f\u0995: \u0986\u09aa\u09a8 \u09af\u09a6 \u09a8 \u099c\u09a8\u09a8, \"\u09a4\u09a1\u09b9\u09a1?\" \u09ac\u09ad\u0997\u099f \u09a6\u0996\u09a8 async \u098f\u09ac await \u09a8\u09a5\u09b0 \u09ae\u09a7\u09af \u09a6\u0996\u09a8 . \u098f\u099f \u099a\u09b2\u09a8 \u09b8\u09b0\u09ad\u09b0 \u099a\u09b2 \u0995\u09b0\u09a8:  uvicorn main:app --reload INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup. INFO: Application startup complete. \u09a8\u09b0\u09a6\u09b6\u09a8 \u09b8\u09ae\u09aa\u09b0\u0995 uvicorn main:app --reload... uvicorn main:app \u09a8\u09b0\u09a6\u09b6\u09a8\u099f \u09a6\u09ac\u09b0 \u09ac\u099d\u09af: main: \u09ab\u0987\u09b2 main.py (\u09aa\u0987\u09a5\u09a8 \"\u09ae\u09a1\u0989\u09b2\") app: app = FastAPI() \u09b2\u0987\u09a8 \u09a6\u09af main.py \u098f\u09b0 \u09ad\u09a4\u09b0 \u09a4\u09b0 \u0995\u09b0 \u0985\u09ac\u099c\u0995\u099f --reload: \u0995\u09a1 \u09aa\u09b0\u09ac\u09b0\u09a4\u09a8\u09b0 \u09aa\u09b0 \u09b8\u09b0\u09ad\u09b0 \u09aa\u09a8\u09b0\u09af \u099a\u09b2 \u0995\u09b0\u09a8 \u098f\u099f \u09b6\u09a7\u09ae\u09a4\u09b0 \u09a1\u09ad\u09b2\u09aa\u09ae\u09a8\u099f \u098f\u09b0 \u09b8\u09ae\u09df \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a8 \u098f\u099f \u099a\u0995 \u0995\u09b0\u09a8 \u0986\u09aa\u09a8\u09b0 \u09ac\u09b0\u0989\u099c\u09b0 \u0996\u09b2\u09a8 http://127.0.0.1:8000/items/5?q=somequery \u098f \u0986\u09aa\u09a8 JSON \u09b0\u09b8\u09aa\u09a8\u09b8 \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8: {\"item_id\": 5, \"q\": \"somequery\"} \u0986\u09aa\u09a8 \u0987\u09a4\u09ae\u09a7\u09af \u098f\u0995\u099f API \u09a4\u09b0 \u0995\u09b0\u099b\u09a8 \u09af: / \u098f\u09ac /items/{item_id} paths \u098f HTTP \u0985\u09a8\u09b0\u09a7 \u0997\u09b0\u09b9\u09a3 \u0995\u09b0 \u0989\u09ad\u09af path\u0987 GET \u0985\u09aa\u09b0\u09b6\u09a8 \u09a8\u09af ( \u09af HTTP methods \u09a8\u09ae\u0993 \u09aa\u09b0\u099a\u09a4) path /items/{item_id}-\u098f \u098f\u0995\u099f path \u09aa\u09af\u09b0\u09ae\u099f\u09b0 item_id \u0986\u099b \u09af \u0995\u09a8 int \u09b9\u09a4 \u09b9\u09ac path /items/{item_id}-\u098f\u09b0 \u098f\u0995\u099f \u0990\u099a\u099b\u0995 str query \u09aa\u09af\u09b0\u09ae\u099f\u09b0 q \u0986\u099b \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u098f\u0996\u09a8 \u09af\u09a8 http://127.0.0.1:8000/docs. \u0986\u09aa\u09a8 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u09ad\u09ac \u09aa\u09b0\u09b8\u09a4\u09a4 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8 (Swagger UI \u09aa\u09b0\u09a6\u09a4\u09a4): \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u098f\u09ac \u098f\u0996\u09a8 http://127.0.0.1:8000/redoc \u098f \u09af\u09a8. \u0986\u09aa\u09a8 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u09ad\u09ac \u09aa\u09b0\u09b8\u09a4\u09a4 \u09ac\u0995\u09b2\u09aa \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8 (ReDoc \u09aa\u09b0\u09a6\u09a4\u09a4): \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa \u0986\u09aa\u0997\u09b0\u09a1 \u098f\u0996\u09a8 main.py \u09ab\u0987\u09b2\u099f \u09aa\u09b0\u09ac\u09b0\u09a4\u09a8 \u0995\u09b0\u09a8 \u09af\u09a8 \u098f\u099f PUT \u09b0\u0995\u09df\u09b8\u099f \u09a5\u0995 \u09ac\u09a1 \u09aa\u09a4 \u09aa\u09b0 Python \u09b8\u099f\u09af\u09a8\u09a1\u09b0\u09a1 \u09b2\u0987\u09ac\u09b0\u09b0, Pydantic \u098f\u09b0 \u09b8\u09b9\u09af\u09af \u09ac\u09a1 \u0998\u09b7\u09a3 \u0995\u09b0\u09a8 from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} \u09b8\u09b0\u09ad\u09b0\u099f \u09b8\u09ac\u09af\u0995\u09b0\u09af\u09ad\u09ac \u09aa\u09a8\u09b0\u09af \u09b2\u09a1 \u09b9\u0993\u09af \u0989\u099a\u09a4 (\u0995\u09b0\u09a3 \u0986\u09aa\u09a8 \u0989\u09aa\u09b0\u09b0 uvicorn \u0995\u09ae\u09a8\u09a1 --reload \u09af\u0997 \u0995\u09b0\u099b\u09a8) \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a8\u09a8\u09a4\u0995\u09b0\u09a3 \u098f\u0996\u09a8 http://127.0.0.1:8000/docs \u098f\u09a1\u09a1\u09b0\u09b8 \u09af\u09a8. \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5\u099f \u09b8\u09ac\u09af\u0995\u09b0\u09af\u09ad\u09ac \u0989\u09a8\u09a8\u09a4 \u09b9\u09af \u09af\u09ac, \u09a8\u09a4\u09a8 \u09ac\u09a1 \u09b8\u09b9: \"Try it out\" \u09ac\u099f\u09a8 \u099a\u09aa\u09a8, \u098f\u099f \u0986\u09aa\u09a8\u0995 \u09aa\u09b0\u09ae\u099f\u09b0\u0997\u09b2 \u09aa\u09b0\u09a3 \u0995\u09b0\u09a4 \u098f\u09ac API \u098f\u09b0 \u09b8\u09a5 \u09b8\u09b0\u09b8\u09b0 \u0995\u09b0\u09df-\u0995\u09b2\u09aa \u0995\u09b0\u09a4 \u09a6\u09ac: \u09a4\u09b0\u09aa\u09b0 \"Execute\" \u09ac\u099f\u09a8 \u099a\u09aa\u09a8, \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0987\u09a8\u099f\u09b0\u09ab\u09b8 \u0986\u09aa\u09a8\u09b0 API \u098f\u09b0 \u09b8\u09a5 \u09af\u0997\u09af\u0997 \u0995\u09b0\u09ac, \u09aa\u09b0\u09ae\u099f\u09b0 \u09aa\u09a0\u09ac, \u09ab\u09b2\u09ab\u09b2\u0997\u09b2 \u09aa\u09ac \u098f\u09ac \u09b8\u0997\u09b2 \u09aa\u09b0\u09b0\u09a6\u09df \u09a6\u0996\u09ac: \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0986\u09aa\u0997\u09b0\u09a1 \u098f\u09ac \u098f\u0996\u09a8 http://127.0.0.1:8000/redoc \u098f \u09af\u09a8 \u09ac\u0995\u09b2\u09aa \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5\u09a4\u0993 \u09a8\u09a4\u09a8 \u0995\u09df\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u098f\u09ac \u09ac\u09a1 \u09aa\u09b0\u09a4\u09ab\u09b2\u09a4 \u09b9\u09ac: \u09b8\u0995\u09b7\u09aa\u09a4\u0995\u09b0\u09a3 \u09b8\u0995\u09b7\u09aa, \u0986\u09aa\u09a8 \u09b6\u09a7 \u098f\u0995\u09ac\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0\u09b0 \u09a7\u09b0\u09a8, \u09ac\u09a1 \u0987\u09a4\u09af\u09a6 \u09ab\u09b6\u09a8 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u09b9\u09b8\u09ac \u0998\u09b7\u09a3 \u0995\u09b0\u09a8 \u0986\u09aa\u09a8 \u09b8\u099f \u0986\u09a7\u09a8\u0995 \u09aa\u0987\u09a5\u09a8\u09b0 \u09b8\u09a5 \u0995\u09b0\u09a8 \u0986\u09aa\u09a8\u0995 \u09a8\u09a4\u09a8 \u0995\u09b0 \u09a8\u09b0\u09a6\u09b7\u099f \u0995\u09a8 \u09b2\u0987\u09ac\u09b0\u09b0\u09b0 \u09ac\u0995\u09af \u0997\u09a0\u09a8, \u09ab\u09b6\u09a8 \u09ac \u0995\u09b2\u09b8 \u0995\u099b\u0987 \u09b6\u0996\u09a4 \u09b9\u099a\u099b \u09a8 \u09b6\u09a7\u0987 \u0986\u09a7\u09a8\u0995 Python 3.6+ \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa, int \u098f\u09b0 \u099c\u09a8\u09af: item_id: int \u0985\u09a5\u09ac \u0986\u09b0\u0993 \u099c\u099f\u09b2 Item \u09ae\u09a1\u09b2\u09b0 \u099c\u09a8\u09af: item: Item ...\u098f\u09ac \u09b8\u0987 \u098f\u0995\u0987 \u0998\u09b7\u09a3\u09b0 \u09b8\u09a5 \u0986\u09aa\u09a8 \u09aa\u09ac\u09a8: \u098f\u09a1\u099f\u09b0 \u09b8\u09b9\u09af\u09af, \u09af\u09ae\u09a8 \u09b8\u09ae\u09aa\u09a4 \u09a7\u09b0\u09a3 \u09af\u099a\u0987 \u09a4\u09a5\u09af \u09af\u099a\u0987\u0995\u09b0\u09a3: \u09a1\u099f \u0985\u09ac\u09a7 \u09b9\u09b2 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u098f\u09ac \u09aa\u09b0\u09b7\u0995\u09b0 \u09a4\u09b0\u099f\u09b0 \u09a8\u09b0\u09a6\u09b6\u09a8 \u098f\u09ae\u09a8\u0995 \u0997\u09ad\u09b0\u09ad\u09ac \u09a8\u09b8\u099f \u0995\u09b0 JSON \u0985\u09ac\u099c\u0995\u099f\u09b0 \u099c\u09a8\u09af \u09ac\u09a7\u09a4 \u09aa\u09b0\u09b0\u09a4 \u09a4\u09a5\u09af \u09b0\u09aa\u09a8\u09a4\u09b0: \u09af \u09a8\u099f\u0993\u09df\u09b0\u0995 \u09a5\u0995 \u09aa\u0987\u09a5\u09a8\u09b0 \u09a4\u09a5\u09af \u098f\u09ac \u09a7\u09b0\u09a8 \u0986\u09b8, \u098f\u09ac \u09b8\u0996\u09a8 \u09a5\u0995 \u09aa\u09dc: JSON \u09aa\u09a5 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0995\u09df\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0995\u0995\u099c \u09b9\u09a1\u09b0 \u09ab\u09b0\u09ae \u09ab\u0987\u09b2 \u0986\u0989\u099f\u09aa\u099f \u09a1\u099f\u09b0 \u09b0\u09aa\u09a8\u09a4\u09b0: \u09aa\u0987\u09a5\u09a8 \u09a1\u099f \u098f\u09ac \u099f\u0987\u09aa \u09a5\u0995 \u09a8\u099f\u0993\u09af\u09b0\u0995 \u09a1\u099f\u09a4 \u09b0\u09aa\u09a8\u09a4\u09b0 \u0995\u09b0 (JSON \u09b9\u09b8\u09ac): -\u09aa\u0987\u09a5\u09a8 \u099f\u0987\u09aa \u09b0\u09aa\u09a8\u09a4\u09b0 \u0995\u09b0\u09a8 (str, int, float, bool, list, \u0987\u09a4\u09af\u09a6) datetime \u0985\u09ac\u099c\u0995\u099f UUID obje\u0985\u09ac\u099c\u0995\u099fcts \u09a1\u099f\u09ac\u09b8 \u09ae\u09a1\u09b2 ...\u098f\u09ac \u0986\u09b0 \u0985\u09a8\u0995 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5, 2\u099f \u09ac\u0995\u09b2\u09aa \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0987\u09a8\u099f\u09b0\u09ab\u09b8 \u09b8\u09b9: \u09b8\u09af\u0997\u09b0 \u0987\u0989 \u0986\u0987 (Swagger UI) \u09b0\u09a1\u0995 (ReDoc) \u09aa\u09b0\u09ac\u09ac\u09b0\u09a4 \u0995\u09a1 \u0989\u09a6\u09b9\u09b0\u09a3 \u09ab\u09b0 \u0986\u09b8 \u09af\u0995, FastAPI \u09af \u0995\u09b0\u09ac: GET \u098f\u09ac PUT \u0985\u09a8\u09b0\u09a7\u09b0 \u099c\u09a8\u09af \u09aa\u09a5 item_id \u0986\u099b \u0995\u09a8 \u09a4 \u09af\u099a\u0987 \u0995\u09b0\u09ac GET \u098f\u09ac PUT \u0985\u09a8\u09b0\u09a7\u09b0 \u099c\u09a8\u09af item_id \u099f\u0987\u09aa int \u098f\u09b0 \u09b9\u09a4 \u09b9\u09ac \u09a4 \u09af\u099a\u0987 \u0995\u09b0\u09ac \u09af\u09a6 \u09a8 \u09b9\u09af \u09a4\u09ac \u0995\u09b2\u09af\u09a8\u099f \u098f\u0995\u099f \u0989\u09aa\u09af\u0995\u09a4, \u09aa\u09b0\u09b7\u0995\u09b0 \u09a4\u09b0\u099f \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8 GET \u0985\u09a8\u09b0\u09a7\u09b0 \u099c\u09a8\u09af \u098f\u0995\u099f \u0990\u099a\u099b\u0995 \u0995\u09af\u09af\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u09a8\u09ae\u0995 q (\u09af\u09ae\u09a8 http://127.0.0.1:8000/items/foo?q=somequery) \u0986\u099b \u0995 \u09a4 \u099a\u0995 \u0995\u09b0\u09ac \u09af\u09b9\u09a4 q \u09aa\u09af\u09b0\u09ae\u099f\u09b0\u099f = None \u09a6\u09af \u0998\u09b7\u09a3 \u0995\u09b0 \u09b9\u09af\u099b, \u09a4\u0987 \u098f\u099f \u0990\u099a\u099b\u0995 None \u099b\u09a1 \u098f\u099f \u09aa\u09b0\u09af\u099c\u09a8\u09af \u09b9\u09a4 (\u09af\u09ae\u09a8 PUT \u098f\u09b0 \u0995\u09b7\u09a4\u09b0 \u09b9\u09df\u099b) /items/{item_id} \u098f\u09b0 \u099c\u09a8\u09af PUT \u0985\u09a8\u09b0\u09a7\u09b0 \u09ac\u09a1 JSON \u09b9\u09b8\u09ac \u09aa\u09a1\u09a8: \u09b2\u0995\u09b7 \u0995\u09b0\u09a8, name \u098f\u0995\u099f \u09aa\u09b0\u09af\u099c\u09a8\u09af \u0985\u09af\u099f\u09b0\u09ac\u0989\u099f \u09b9\u09b8\u09ac \u09ac\u09ac\u099a\u09a8 \u0995\u09b0\u099b \u098f\u09ac \u098f\u099f str \u09b9\u09a4 \u09b9\u09ac \u09b2\u0995\u09b7 \u0995\u09b0\u09a8 \u098f\u0996\u09a8, price \u0985\u09af\u099f\u09b0\u09ac\u0989\u099f\u099f \u0986\u09ac\u09b6\u09af\u0995 \u098f\u09ac \u098f\u099f float \u09b9\u09a4 \u09b9\u09ac \u09b2\u0995\u09b7 \u0995\u09b0\u09a8 is_offer \u098f\u0995\u099f \u0990\u099a\u099b\u0995 \u0985\u09af\u099f\u09b0\u09ac\u0989\u099f \u098f\u09ac \u098f\u099f bool \u09b9\u09a4 \u09b9\u09ac \u09af\u09a6 \u0989\u09aa\u09b8\u09a5\u09a4 \u09a5\u0995 \u098f\u0987 \u09b8\u09ac\u099f \u0997\u09ad\u09b0\u09ad\u09ac \u0985\u09ac\u09b8\u09a5\u09a8\u09b0\u09a4 JSON \u0985\u09ac\u099c\u0995\u099f\u0997\u09b2\u09a4\u0993 \u0995\u099c \u0995\u09b0\u09ac \u09b8\u09ac\u09af\u0995\u09b0\u09af\u09ad\u09ac JSON \u09b9\u09a4 \u098f\u09ac JSON \u09a5\u0995 \u0995\u09a8\u09ad\u09b0\u099f \u0995\u09b0\u09a8 OpenAPI \u09a6\u09af \u09b8\u09ac\u0995\u099b \u09a1\u0995\u09ae\u09a8\u099f \u0995\u09b0\u09a8, \u09af \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09af\u09a4 \u09aa\u09b0: \u0995\u09b0\u09df\u09b6\u09b2 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0985\u09a8\u0995 \u09ad\u09b7\u09b0 \u099c\u09a8\u09af \u09b8\u09ac\u09af\u0995\u09b0\u09af \u0995\u09b2\u09af\u09a8\u099f \u0995\u09a1 \u09a4\u09b0\u09b0 \u09ac\u09af\u09ac\u09b8\u09a5 \u09b8\u09b0\u09b8\u09b0 2\u099f \u0995\u09b0\u09df\u09b6\u09b2 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0993\u09af\u09ac \u09aa\u09b7\u09a0 \u09aa\u09b0\u09a6\u09a8 \u0995\u09b0 \u09b9\u09df\u099b \u0986\u09ae\u09b0 \u098f\u09a4\u0995\u09b7\u09a8 \u09b6\u09a7 \u098f\u09b0 \u09aa\u09b7\u09a0 \u09a4\u09b0 \u0995\u09b0\u099b, \u0995\u09a8\u09a4 \u0986\u09aa\u09a8 \u0987\u09a4\u09ae\u09a7\u09af\u0987 \u098f\u099f \u0995\u09ad\u09ac \u0995\u099c \u0995\u09b0 \u09a4\u09b0 \u09a7\u09b0\u09a3\u0993 \u09aa\u09df \u0997\u09df\u099b\u09a8 \u09a8\u09ae\u09a8\u0995\u09a4 \u09b2\u0987\u09a8 \u0997\u09b2 \u09aa\u09b0\u09ac\u09b0\u09a4\u09a8 \u0995\u09b0\u09b0 \u099a\u09b7\u099f \u0995\u09b0\u09a8: return {\"item_name\": item.name, \"item_id\": item_id} ...\u09aa\u09b0\u09ac: ... \"item_name\": item.name ... ...\u09aa\u09b0\u09ac\u09b0\u09a4\u09a4: ... \"item_price\": item.price ... ...\u098f\u09ac \u09a6\u0996\u09a8 \u0995\u09ad\u09ac \u0986\u09aa\u09a8\u09b0 \u098f\u09a1\u099f\u09b0 \u0989\u09aa\u09a6\u09a8\u0997\u09b2\u0995 \u09b8\u09df\u0995\u09b0\u09df\u09ad\u09ac-\u09b8\u09ae\u09aa\u09a8\u09a8 \u0995\u09b0\u09ac \u098f\u09ac \u09a4\u09a6\u09b0 \u09a7\u09b0\u09a8 \u099c\u09a8\u09a4 \u09aa\u09b0\u09ac: \u0986\u09b0\u0993 \u09ac\u09b6\u09b7\u099f\u09af \u09b8\u09ae\u09aa\u09a8\u09a8 \u0989\u09a6\u09b9\u09b0\u09a3\u09b0 \u099c\u09a8\u09af, \u09a6\u0996\u09a8 \u099f\u0989\u099f\u09b0\u09df\u09b2 - \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0997\u0987\u09a1. \u09b8\u09aa\u09df\u09b2\u09b0 \u09b8\u09a4\u09b0\u0995\u09a4: \u099f\u0989\u099f\u09b0\u09df\u09b2 - \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0997\u0987\u09a1 \u09a8\u09ae\u09a8\u0995\u09a4 \u09ac\u09b7\u09df\u0997\u09b2 \u0985\u09a8\u09a4\u09b0\u09ad\u0995\u09a4 \u0995\u09b0: \u09b9\u09a1\u09b0, \u0995\u0995\u099c, \u09ab\u09b0\u09ae \u09ab\u09b2\u09a1 \u098f\u09ac \u09ab\u0987\u09b2\u0997\u09b2 \u098f\u09ae\u09a8 \u0985\u09a8\u09af\u09a8\u09af \u099c\u09df\u0997 \u09a5\u0995 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0998\u09b7\u09a3 \u0995\u09b0 maximum_length \u09ac regex \u098f\u09b0 \u09ae\u09a4 \u09af\u099a\u0987\u0995\u09b0\u09a3 \u09ac\u09a7\u09ae\u0995\u09a4 \u09b8\u099f \u0995\u09b0 \u09b9\u09af \u0995\u09ad\u09ac, \u09a4 \u09a8\u09df \u0986\u09b2\u099a\u09a8 \u0995\u09b0 \u09b9\u09ac \u098f\u0995\u099f \u0996\u09ac \u09b6\u0995\u09a4\u09b6\u09b2 \u098f\u09ac \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09b8\u09b9\u099c \u09a1\u09aa\u09a8\u09a1\u09a8\u09b8 \u0987\u09a8\u099c\u0995\u09b6\u09a8 \u09aa\u09a6\u09a7\u09a4 OAuth2 \u098f\u09ac JWT \u099f\u0995\u09a8 \u098f\u09ac HTTP Basic auth \u09b8\u09b9 \u09a8\u09b0\u09aa\u09a4\u09a4 \u098f\u09ac \u0985\u09a8\u09ae\u09a6\u09a8\u09aa\u09b0\u09aa\u09a4 \u09b8\u09ae\u09aa\u09b0\u0995\u09a4 \u09ac\u09b7\u09df\u09b8\u09ae\u09b9\u09b0 \u0989\u09aa\u09b0 \u0997\u09ad\u09b0\u09ad\u09ac \u0985\u09ac\u09b8\u09a5\u09a8\u09b0\u09a4 JSON \u09ae\u09a1\u09b2 \u0998\u09b7\u09a3 \u0995\u09b0\u09b0 \u099c\u09a8\u09af \u0986\u09b0\u0993 \u0989\u09a8\u09a8\u09a4 (\u0995\u09a8\u09a4 \u09b8\u09ae\u09a8 \u09b8\u09b9\u099c) \u0995\u09b6\u09b2 (Pydantic \u0995 \u09a7\u09a8\u09af\u09ac\u09a6) \u0986\u09b0 \u0985\u09a4\u09b0\u0995\u09a4 \u09ac\u09b6\u09b7\u099f\u09af (\u09b8\u099f\u09b0\u09b2\u099f\u0995 \u09a7\u09a8\u09af\u09ac\u09a6) \u09b9\u09b8\u09ac: WebSockets GraphQL HTTPX \u098f\u09ac pytest \u09ad\u09a4\u09a4\u0995 \u0985\u09a4\u09af\u09a8\u09a4 \u09b8\u09b9\u099c \u09aa\u09b0\u0995\u09b7 CORS Cookie Sessions ...\u098f\u09ac \u0986\u09b0 \u0995\u09b0\u09ae\u0995\u09b7\u09ae\u09a4 \u09b8\u09ac\u09a7\u09a8 TechEmpower Benchmarks \u09a6\u0996\u09af \u09af FastAPI \u0985\u09af\u09aa\u09b2\u0995\u09b6\u09a8\u0997\u09b2 Uvicorn-\u098f\u09b0 \u0985\u09a7\u09a8 \u099a\u09b2\u09ae\u09a8 \u09a6\u09b0\u09a4\u09a4\u09ae\u09aa\u0987\u09a5\u09a8 \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995\u0997\u09b2\u09b0 \u09ae\u09a7\u09af \u098f\u0995\u099f, \u09b6\u09a7\u09ae\u09a4\u09b0 Starlette \u098f\u09ac Uvicorn-\u098f\u09b0 \u09aa\u09b0 (FastAPI \u09a6\u09ac\u09b0 \u0985\u09ad\u09af\u09a8\u09a4\u09b0\u09a3\u09ad\u09ac \u09ac\u09af\u09ac\u09b9\u09a4) (*) \u098f\u099f \u09b8\u09ae\u09aa\u09b0\u0995 \u0986\u09b0\u0993 \u09ac\u099d\u09a4, \u09a6\u0996\u09a8 Benchmarks. \u0990\u099a\u099b\u0995 \u09a8\u09b0\u09ad\u09b0\u09b6\u09b2\u09a4 Pydantic \u09a6\u09ac\u09b0 \u09ac\u09af\u09ac\u09b9\u09a4: email-validator - \u0987\u09ae\u09b2 \u09af\u099a\u0987\u0995\u09b0\u09a3\u09b0 \u099c\u09a8\u09af \u09b8\u099f\u09b0\u09b2\u099f \u09a6\u09ac\u09b0 \u09ac\u09af\u09ac\u09b9\u09a4: httpx - \u0986\u09aa\u09a8 \u09af\u09a6 TestClient \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u09a8 \u09a4\u09b9\u09b2 \u0986\u09ac\u09b6\u09af\u0995 jinja2 - \u0986\u09aa\u09a8 \u09af\u09a6 \u09aa\u09b0\u09a6\u09a4\u09a4 \u099f\u09ae\u09aa\u09b2\u099f \u09b0\u09aa\u09b0\u0996 \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u09a8 \u09a4\u09b9\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 python-multipart - \u0986\u09aa\u09a8 \u09af\u09a6 \u09ab\u09b0\u09ae \u09b8\u09b9\u09af\u09a4 \u0995\u09b0\u09a4 \u099a\u09a8 \u09a4\u09b9\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 \"parsing\", request.form() \u09b8\u09b9 itsdangerous - SessionMiddleware \u09b8\u09b9\u09af\u09a4\u09b0 \u099c\u09a8\u09af \u09aa\u09b0\u09af\u099c\u09a8 pyyaml - \u09b8\u099f\u09b0\u09b2\u099f\u09b0 SchemaGenerator \u09b8\u09aa\u09b0\u099f \u098f\u09b0 \u099c\u09a8\u09af \u09aa\u09b0\u09df\u099c\u09a8 (\u0986\u09aa\u09a8\u09b0 \u09b8\u09ae\u09ad\u09ac\u09a4 FastAPI \u09aa\u09b0\u09af\u099c\u09a8 \u09a8\u0987) graphene - GraphQLApp \u09b8\u09b9\u09af\u09a4\u09b0 \u099c\u09a8\u09af \u09aa\u09b0\u09df\u099c\u09a8 FastAPI / Starlette \u09a6\u09ac\u09b0 \u09ac\u09af\u09ac\u09b9\u09a4: uvicorn - \u09b8\u09b0\u09ad\u09b0\u09b0 \u099c\u09a8\u09af \u09af \u0986\u09aa\u09a8\u09b0 \u0985\u09af\u09aa\u09b2\u0995\u09b6\u09a8 \u09b2\u09a1 \u0995\u09b0 \u098f\u09ac \u09aa\u09b0\u09ac\u09b6\u09a8 \u0995\u09b0 orjson - \u0986\u09aa\u09a8 ORJSONResponse \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u0987\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 ujson - \u0986\u09aa\u09a8 UJSONResponse \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u0987\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 \u0986\u09aa\u09a8 \u098f\u0987 \u09b8\u09ac \u0987\u09a8\u09b8\u099f\u09b2 \u0995\u09b0\u09a4 \u09aa\u09b0\u09a8 pip install fastapi[all] \u09a6\u09df. \u09b2\u0987\u09b8\u09a8\u09b8 \u098f\u0987 \u09aa\u09b0\u099c\u0995\u099f MIT \u09b2\u0987\u09b8\u09a8\u09b8 \u09a8\u09a4\u09ae\u09b2\u09b0 \u0985\u09a7\u09a8 \u09b6\u09b0\u09a4\u09df\u09a4 \u0989\u09aa\u09b0 \u09ab\u09b0 \u09af\u0993",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "uvicorn main:app --reload",
        "uvicorn main:app",
        "app = FastAPI()",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "email-validator",
        "python-multipart",
        "request.form()",
        "itsdangerous",
        "SessionMiddleware",
        "ORJSONResponse",
        "UJSONResponse",
        "pip install fastapi[all]"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI \u09b8\u099a \u09a4\u09b2\u0995 \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u09ae\u09a4\u09ae\u09a4 \u09b8\u09ae\u09b9 Typer, CLI \u098f\u09b0 \u099c\u09a8\u09af FastAPI \u09aa\u09b0\u09af\u099c\u09a8\u09af\u09a4 \u0997\u09b2 \u0987\u09a8\u09b8\u099f\u09b2\u09b6\u09a8 \u09aa\u09b0\u0995\u09b0\u09df \u0989\u09a6\u09b9\u09b0\u09a3 \u09a4\u09b0 \u098f\u099f \u099a\u09b2\u09a8 \u098f\u099f \u099a\u0995 \u0995\u09b0\u09a8 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa \u0986\u09aa\u0997\u09b0\u09a1 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a8\u09a8\u09a4\u0995\u09b0\u09a3 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0986\u09aa\u0997\u09b0\u09a1 \u09b8\u0995\u09b7\u09aa\u09a4\u0995\u09b0\u09a3 \u0995\u09b0\u09ae\u0995\u09b7\u09ae\u09a4 \u0990\u099a\u099b\u0995 \u09a8\u09b0\u09ad\u09b0\u09b6\u09b2\u09a4 \u09b2\u0987\u09b8\u09a8\u09b8 Features \u09b6\u0996\u09a8 \u09b6\u0996\u09a8 \u09aa\u0987\u09a5\u09a8 \u098f\u09b0 \u099f\u0987\u09aa\u09b8 \u09aa\u09b0\u099a\u09a4 Concurrency and async / await \u098f\u09a8\u09ad\u09af\u09b0\u09a8\u09ae\u09a8\u099f \u09ad\u09b0\u09af\u09ac\u09b2\u09b8 Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes \u09b8\u099a \u09a4\u09b2\u0995 \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u09ae\u09a4\u09ae\u09a4 \u09b8\u09ae\u09b9 Typer, CLI \u098f\u09b0 \u099c\u09a8\u09af FastAPI \u09aa\u09b0\u09af\u099c\u09a8\u09af\u09a4 \u0997\u09b2 \u0987\u09a8\u09b8\u099f\u09b2\u09b6\u09a8 \u09aa\u09b0\u0995\u09b0\u09df \u0989\u09a6\u09b9\u09b0\u09a3 \u09a4\u09b0 \u098f\u099f \u099a\u09b2\u09a8 \u098f\u099f \u099a\u0995 \u0995\u09b0\u09a8 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa \u0986\u09aa\u0997\u09b0\u09a1 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a8\u09a8\u09a4\u0995\u09b0\u09a3 \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0986\u09aa\u0997\u09b0\u09a1 \u09b8\u0995\u09b7\u09aa\u09a4\u0995\u09b0\u09a3 \u0995\u09b0\u09ae\u0995\u09b7\u09ae\u09a4 \u0990\u099a\u099b\u0995 \u09a8\u09b0\u09ad\u09b0\u09b6\u09b2\u09a4 \u09b2\u0987\u09b8\u09a8\u09b8 FastAPI FastAPI \u0989\u099a\u099a\u0995\u09b7\u09ae\u09a4 \u09b8\u09ae\u09aa\u09a8\u09a8, \u09b8\u09b9\u099c \u09b6\u0996\u09b0 \u098f\u09ac \u09a6\u09b0\u09a4 \u0995\u09a1 \u0995\u09b0 \u09aa\u09b0\u09a1\u0995\u09b6\u09a8\u09b0 \u099c\u09a8\u09af \u09ab\u09b0\u09ae\u0993\u09df\u09b0\u0995 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5: https://fastapi",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com \u09b8\u09b0\u09b8 \u0995\u09a1: https://github com/fastapi/fastapi FastAPI \u098f\u0995\u099f \u0986\u09a7\u09a8\u0995, \u09a6\u09b0\u09a4 ( \u09ac\u09b6 \u0995\u09b7\u09ae\u09a4 ) \u09b8\u09ae\u09aa\u09a8\u09a8, Python 3",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "6+ \u09a6\u09df API \u09a4\u09b0\u09b0 \u099c\u09a8\u09af \u09b8\u099f\u09af\u09a8\u09a1\u09b0\u09a1 \u09aa\u0987\u09a5\u09a8 \u099f\u0987\u09aa \u0987\u0999\u0997\u09a4 \u09ad\u09a4\u09a4\u0995 \u0993\u09af\u09ac \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995 \u098f\u09b0 \u09ae\u09b2 \u09ac\u09b6\u09b7\u099f\u09af \u0997\u09b2 \u09b9\u09b2 \u0997\u09a4: \u098f\u099f NodeJS \u098f\u09ac Go \u098f\u09b0 \u09ae\u09a4 \u0995\u09b0\u09af\u0995\u09b7\u09ae\u09a4 \u09b8\u09ae\u09aa\u09a8\u09a8 (Starlette \u098f\u09ac Pydantic \u098f\u09b0 \u09b8\u09b9\u09af\u09af) \u09aa\u0987\u09a5\u09a8 \u098f\u09b0 \u09a6\u09b0\u09a4\u09a4\u09ae \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995 \u0997\u09b2\u09b0 \u09ae\u09a7\u09af \u098f\u099f \u098f\u0995\u099f \u09a6\u09b0\u09a4 \u0995\u09a1 \u0995\u09b0:\u09ac\u09b6\u09b7\u099f\u09af \u09a4\u09b0\u09b0 \u0997\u09a4 \u09e8\u09e6\u09e6 \u09a5\u0995 \u09e9\u09e6\u09e6 \u09ac\u09a6\u09a7 \u0995\u09b0\u09f7 * \u09b8\u09ac\u09b2\u09aa bugs: \u09ae\u09a8\u09ac (\u09a1\u09ad\u09b2\u09aa\u09b0) \u09b8\u09b7\u099f \u09a4\u09b0\u099f\u09b0 \u09aa\u09b0\u09af \u09ea\u09e6 \u09b9\u09b0\u09b8 \u0995\u09b0 * \u09b8\u09ac\u099c\u099e\u09a4: \u09a6\u09b0\u09a6\u09a8\u09a4 \u098f\u09a1\u099f\u09b0 \u09b8\u09b9\u09af\u09af Completion \u09a8\u09ae\u0993 \u09aa\u09b0\u099a\u09a4 \u09a6\u09b0\u09a4 \u09a1\u09ac\u0997 \u0995\u09b0 \u09af\u09df \u09b8\u09b9\u099c: \u098f\u099f \u098f\u09ae\u09a8 \u09ad\u09ac \u09b8\u099c\u09a8 \u09b9\u09df\u099b \u09af\u09a8 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09aa\u09dc \u09b8\u09b9\u099c \u09b6\u0996 \u098f\u09ac \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09af\u09df \u09b8\u0995\u09b7\u09aa\u09a4: \u0995\u09a1 \u09aa\u09a8\u09b0\u09ac\u09a4\u09a4 \u0995\u09ae\u09a8\u09b0 \u09aa\u09b6\u09aa\u09b6, bug \u0995\u09ae\u09df \u098f\u09ac \u09aa\u09b0\u09a4\u099f \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0998\u09b7\u09a3 \u09a5\u0995 \u098f\u0995\u09a7\u0995 \u09ab\u099a\u09b0 \u09aa\u0993\u09df \u09af\u09df  \u099c\u09b0\u09b2: \u09b8\u09ac\u09af\u0995\u09b0\u09af \u09ad\u09ac \u09a4\u09b0 \u0995\u09b0\u09df\u09b6\u09b2 \u09a8\u09b0\u09a6\u09b6\u09a8 \u09a8\u09a5 (documentation) \u09b8\u09b9 \u0989\u09ce\u09aa\u09a6\u09a8 \u0989\u09aa\u09af\u0997 (Production-ready) \u0995\u09a1 \u09aa\u0993\u09df \u09af\u09df \u09ae\u09a8-\u09ad\u09a4\u09a4\u0995: \u098f\u09b0 \u09ad\u09a4\u09a4 OpenAPI (\u09af \u09aa\u09b0\u09ac Swagger \u09a8\u09ae \u09aa\u09b0\u099a\u09a4 \u099b\u09b2) \u098f\u09ac JSON Schema \u098f\u09b0 \u0986\u09a6\u09b0\u09b6\u09b0 \u09ae\u09a8\u09b0 \u0993\u09aa\u09b0 * \u0989\u09ce\u09aa\u09a6\u09a8\u09ae\u0996 \u098f\u09aa\u09b2\u0995\u09b6\u09a8 \u09ac\u09a8\u09a8\u09b0 \u098f\u0995 \u09a6\u09b2 \u09a1\u09ad\u09b2\u09aa\u09b0 \u098f\u09b0 \u09ae\u09a4\u09ae\u09a4 \u09ad\u09a4\u09a4\u0995 \u09ab\u09b2\u09ab\u09b2 \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u0985\u09a8\u09af\u09a8\u09af \u09b8\u09aa\u09a8\u09b8\u09b0 \u0997\u09a3 \u09ae\u09a4\u09ae\u09a4 \u09b8\u09ae\u09b9 \"\u0986\u09ae \u0986\u099c\u0995\u09b2 FastAPI \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u099b [",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "] \u0986\u09ae\u09b0 \u09ad\u09ac\u099b \u09ae\u0987\u0995\u09b0\u09b8\u09ab\u099f ML \u09b8\u09b0\u09ad\u09b8 \u098f \u09b8\u0995\u09b2 \u09a6\u09b2\u09b0 \u099c\u09a8\u09af \u098f\u099f \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09ac \u09af\u09b0 \u09ae\u09a7\u09af \u0995\u099b \u09aa\u09a3\u09af Windows \u098f \u09b8\u09af\u09af\u09a8 \u09b9\u09df \u098f\u09ac \u0995\u099b Office \u098f\u09b0 \u09b8\u09a5 \u09b8\u09af\u09af\u09a8 \u09b9\u099a\u099b\" \u0995\u09ac\u09b0 \u0996\u09a8 - \u09ae\u0987\u0995\u09b0\u09b8\u09ab\u099f (ref) \"\u0986\u09ae\u09b0 FastAPI \u09b2\u0987\u09ac\u09b0\u09b0 \u0997\u09b0\u09b9\u09a3 \u0995\u09b0\u099b \u098f\u0995\u099f REST \u09b8\u09b0\u09ad\u09b0 \u09a4\u09b0 \u0995\u09b0\u09a4, \u09af \u09ad\u09ac\u09b7\u09af\u09a6\u09ac\u09a3 \u09aa\u0993\u09af\u09b0 \u099c\u09a8\u09af \u0995\u09df\u09b0 \u0995\u09b0 \u09af\u09a4 \u09aa\u09b0 [\u09b2\u09a1\u0989\u0987\u0997\u09b0 \u099c\u09a8\u09af]\" \u09aa\u09af\u09b0 \u09ae\u09b2\u09a8, \u0987\u09af\u09b0\u09b8\u09b2\u09ad \u09a6\u09a6\u09a8, \u098f\u09ac \u09b8\u0987 \u09b8\u09ae\u09a8\u09a5 \u09ae\u09b0\u09af\u09b2 - \u0989\u09ac\u09b0 (ref) \"Netflix \u0986\u09ae\u09a6\u09b0 \u0995\u09b0\u0987\u09b8\u09b8 \u09ae\u09af\u09a8\u099c\u09ae\u09a8\u099f \u0985\u09b0\u0995\u09b8\u099f\u09b0\u09b6\u09a8 \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995: \u09a1\u09b8\u09aa\u09af\u099a \u098f\u09b0 \u0993\u09aa\u09a8 \u09b8\u09b0\u09b8 \u09b0\u09b2\u099c \u0998\u09b7\u09a3 \u0995\u09b0\u09a4 \u09aa\u09b0 \u0986\u09a8\u09a8\u09a6\u09a4 [\u09af\u0995\u09a8 FastAPI \u09a6\u09af \u09a8\u09b0\u09ae\u09a4]\" \u0995\u09ad\u09a8 \u0997\u09b2\u09b8\u09a8, \u09ae\u09b0\u0995 \u09ad\u09b2\u09a8\u09ad, \u09ab\u09b0\u09b8\u099f \u09ae\u09a8\u09b8\u09a8 - \u09a8\u099f\u09ab\u09b2\u0995\u09b8 (ref) \"\u0986\u09ae FastAPI \u09a8\u09af \u099a\u09a6\u09b0 \u09b8\u09ae\u09a8 \u0989\u09ce\u09b8\u09b9\u09a4 \u098f\u099f \u0996\u09ac\u0987 \u09ae\u099c\u09b0",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "\" \u09ac\u09b0\u09af\u09a8 \u0993\u0995\u09a8 - \u09aa\u0987\u09a5\u09a8 \u09ac\u0987\u099f\u09b8 \u09aa\u09a1\u0995\u09b8\u099f \u09b9\u09b8\u099f (ref) \"_\u09b8\u09a4\u09af\u0987, \u0986\u09aa\u09a8 \u09af \u09a4\u09b0 \u0995\u09b0\u099b\u09a8 \u09a4 \u0996\u09ac \u09ae\u099c\u09ac\u09a4 \u098f\u09ac \u09aa\u09b0\u09aa\u09b0\u09a8\u09f7 \u0985\u09a8\u0995 \u0989\u09aa\u09af, \u0986\u09ae \u09af Hug \u098f \u0995\u09b0\u09a4 \u099a\u09df\u099b\u09b2\u09ae - \u09a4 \u0995\u0989\u0995 \u09a4\u09b0 \u0995\u09b0\u09a4 \u09a6\u0996 \u0986\u09ae \u09b8\u09a4\u09af\u0987 \u0985\u09a8\u09aa\u09b0\u09a8\u09a4\u09f7_\" \u099f\u09ae\u09a5 \u0995\u09b0\u09b8\u09b2 - Hug \u09b8\u09b0\u09b7\u099f (ref) \"\u0986\u09aa\u09a8 \u09af\u09a6 REST API \u09a4\u09b0\u09b0 \u099c\u09a8\u09af \u098f\u0995\u099f \u0986\u09a7\u09a8\u0995 \u09ab\u09b0\u09ae\u0993\u09df\u09b0\u0995 \u09b6\u0996\u09a4 \u099a\u09a8, \u09a4\u09b9\u09b2 FastAPI \u09a6\u0996\u09a8 [ ] \u098f\u099f \u09a6\u09b0\u09a4, \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09b8\u09b9\u099c \u098f\u09ac \u09b6\u0996\u09a4\u0993 \u09b8\u09b9\u099c [ ]_\" \"\u0986\u09ae\u09b0 \u0986\u09ae\u09a6\u09b0 APIs [ ] \u098f\u09b0 \u099c\u09a8\u09af FastAPI- \u09a4 \u098f\u09b8\u099b [ ] \u0986\u09ae \u09ae\u09a8 \u0995\u09b0 \u0986\u09aa\u09a8\u0993 \u098f\u099f \u09aa\u099b\u09a8\u09a6 \u0995\u09b0\u09ac\u09a8 [",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "]\" \u0987\u09a8\u09b8 \u09ae\u09a8\u099f\u09a8 - \u09ae\u09af\u09a5\u0989 \u09b9\u09a8\u09ac\u09b2 - Explosion AI \u09aa\u09b0\u09a4\u09b7\u09a0\u09a4 - spaCy \u09b8\u09b0\u09b7\u099f (ref) - (ref) Typer, CLI \u098f\u09b0 \u099c\u09a8\u09af FastAPI \u0986\u09aa\u09a8 \u09af\u09a6 CLI \u0985\u09af\u09aa \u09ac\u09a8\u09a4 \u099a\u09a8, \u09af \u0995\u09a8 \u0993\u09df\u09ac API \u098f\u09b0 \u09aa\u09b0\u09ac\u09b0\u09a4 \u099f\u09b0\u09ae\u09a8\u09b2 \u09ac\u09af\u09ac\u09b9\u09b0 \u09b9\u09ac, \u09a4\u09b9\u09b2 \u09a6\u0996\u09a8Typer \u099f\u0987\u09aa\u09b0 \u09b9\u09b2 FastAPI \u098f\u09b0 \u099b\u099f \u09ad\u0987\u09df\u09b0 \u09ae\u09a4 \u098f\u09ac \u098f\u099f\u09b0 \u0989\u09a6\u09a6\u09b6\u09af \u099b\u09b2 CLIs \u098f\u09b0 FastAPI \u09b9\u0993\u09df   \u09aa\u09b0\u09af\u099c\u09a8\u09af\u09a4 \u0997\u09b2 Python 3 7+ FastAPI \u0995\u099b \u09a6\u09a8\u09ac\u09a6\u09b0 \u0995\u09a7 \u09a6\u09a1\u09af \u0986\u099b: Starlette \u0993\u09af\u09ac \u0985\u09b6\u09b0 \u099c\u09a8\u09af Pydantic \u09a1\u099f \u0985\u09b6\u0997\u09b2\u09b0 \u099c\u09a8\u09af \u0987\u09a8\u09b8\u099f\u09b2\u09b6\u09a8 \u09aa\u09b0\u0995\u09b0\u09df  pip install fastapi --- 100 \u0986\u09aa\u09a8\u09b0 \u098f\u0995\u099f ASGI \u09b8\u09b0\u09ad\u09b0\u09b0\u0993 \u09aa\u09b0\u09af\u099c\u09a8 \u09b9\u09ac, \u09aa\u09b0\u09a1\u0995\u09b6\u09a8\u09b0 \u099c\u09a8\u09af Uvicorn \u0985\u09a5\u09ac Hypercorn pip install \"uvicorn[standard]\" --- 100 \u0989\u09a6\u09b9\u09b0\u09a3 \u09a4\u09b0 main",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "py \u09a8\u09ae \u098f\u0995\u099f \u09ab\u0987\u09b2 \u09a4\u09b0 \u0995\u09b0\u09a8: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} \u0985\u09a5\u09ac \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a8 async def \u09af\u09a6 \u0986\u09aa\u09a8\u09b0 \u0995\u09a1 async / await, \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09a4\u09b9\u09b2 async def \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a8: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} \u099f\u0995: \u0986\u09aa\u09a8 \u09af\u09a6 \u09a8 \u099c\u09a8\u09a8, \"\u09a4\u09a1\u09b9\u09a1 \" \u09ac\u09ad\u0997\u099f \u09a6\u0996\u09a8 async \u098f\u09ac await \u09a8\u09a5\u09b0 \u09ae\u09a7\u09af \u09a6\u0996\u09a8 \u098f\u099f \u099a\u09b2\u09a8 \u09b8\u09b0\u09ad\u09b0 \u099a\u09b2 \u0995\u09b0\u09a8:  uvicorn main:app --reload INFO: Uvicorn running on http://127 0 0 1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup INFO: Application startup complete \u09a8\u09b0\u09a6\u09b6\u09a8 \u09b8\u09ae\u09aa\u09b0\u0995 uvicorn main:app --reload",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "uvicorn main:app \u09a8\u09b0\u09a6\u09b6\u09a8\u099f \u09a6\u09ac\u09b0 \u09ac\u099d\u09af: main: \u09ab\u0987\u09b2 main py (\u09aa\u0987\u09a5\u09a8 \"\u09ae\u09a1\u0989\u09b2\") app: app = FastAPI() \u09b2\u0987\u09a8 \u09a6\u09af main py \u098f\u09b0 \u09ad\u09a4\u09b0 \u09a4\u09b0 \u0995\u09b0 \u0985\u09ac\u099c\u0995\u099f --reload: \u0995\u09a1 \u09aa\u09b0\u09ac\u09b0\u09a4\u09a8\u09b0 \u09aa\u09b0 \u09b8\u09b0\u09ad\u09b0 \u09aa\u09a8\u09b0\u09af \u099a\u09b2 \u0995\u09b0\u09a8 \u098f\u099f \u09b6\u09a7\u09ae\u09a4\u09b0 \u09a1\u09ad\u09b2\u09aa\u09ae\u09a8\u099f \u098f\u09b0 \u09b8\u09ae\u09df \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a8 \u098f\u099f \u099a\u0995 \u0995\u09b0\u09a8 \u0986\u09aa\u09a8\u09b0 \u09ac\u09b0\u0989\u099c\u09b0 \u0996\u09b2\u09a8 http://127 0 0 1:8000/items/5",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "q=somequery \u098f \u0986\u09aa\u09a8 JSON \u09b0\u09b8\u09aa\u09a8\u09b8 \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8: {\"item_id\": 5, \"q\": \"somequery\"} \u0986\u09aa\u09a8 \u0987\u09a4\u09ae\u09a7\u09af \u098f\u0995\u099f API \u09a4\u09b0 \u0995\u09b0\u099b\u09a8 \u09af: / \u098f\u09ac /items/{item_id} paths \u098f HTTP \u0985\u09a8\u09b0\u09a7 \u0997\u09b0\u09b9\u09a3 \u0995\u09b0 \u0989\u09ad\u09af path\u0987 GET \u0985\u09aa\u09b0\u09b6\u09a8 \u09a8\u09af ( \u09af HTTP methods \u09a8\u09ae\u0993 \u09aa\u09b0\u099a\u09a4) path /items/{item_id}-\u098f \u098f\u0995\u099f path \u09aa\u09af\u09b0\u09ae\u099f\u09b0 item_id \u0986\u099b \u09af \u0995\u09a8 int \u09b9\u09a4 \u09b9\u09ac path /items/{item_id}-\u098f\u09b0 \u098f\u0995\u099f \u0990\u099a\u099b\u0995 str query \u09aa\u09af\u09b0\u09ae\u099f\u09b0 q \u0986\u099b \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u098f\u0996\u09a8 \u09af\u09a8 http://127 0 0 1:8000/docs \u0986\u09aa\u09a8 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u09ad\u09ac \u09aa\u09b0\u09b8\u09a4\u09a4 \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8 (Swagger UI \u09aa\u09b0\u09a6\u09a4\u09a4): \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u098f\u09ac \u098f\u0996\u09a8 http://127 0 0 1:8000/redoc \u098f \u09af\u09a8",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "\u0986\u09aa\u09a8 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u09ad\u09ac \u09aa\u09b0\u09b8\u09a4\u09a4 \u09ac\u0995\u09b2\u09aa \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8 (ReDoc \u09aa\u09b0\u09a6\u09a4\u09a4): \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa \u0986\u09aa\u0997\u09b0\u09a1 \u098f\u0996\u09a8 main py \u09ab\u0987\u09b2\u099f \u09aa\u09b0\u09ac\u09b0\u09a4\u09a8 \u0995\u09b0\u09a8 \u09af\u09a8 \u098f\u099f PUT \u09b0\u0995\u09df\u09b8\u099f \u09a5\u0995 \u09ac\u09a1 \u09aa\u09a4 \u09aa\u09b0 Python \u09b8\u099f\u09af\u09a8\u09a1\u09b0\u09a1 \u09b2\u0987\u09ac\u09b0\u09b0, Pydantic \u098f\u09b0 \u09b8\u09b9\u09af\u09af \u09ac\u09a1 \u0998\u09b7\u09a3 \u0995\u09b0\u09a8 from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item name, \"item_id\": item_id} \u09b8\u09b0\u09ad\u09b0\u099f \u09b8\u09ac\u09af\u0995\u09b0\u09af\u09ad\u09ac \u09aa\u09a8\u09b0\u09af \u09b2\u09a1 \u09b9\u0993\u09af \u0989\u099a\u09a4 (\u0995\u09b0\u09a3 \u0986\u09aa\u09a8 \u0989\u09aa\u09b0\u09b0 uvicorn \u0995\u09ae\u09a8\u09a1 --reload \u09af\u0997 \u0995\u09b0\u099b\u09a8) \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0989\u09a8\u09a8\u09a4\u0995\u09b0\u09a3 \u098f\u0996\u09a8 http://127 0 0 1:8000/docs \u098f\u09a1\u09a1\u09b0\u09b8 \u09af\u09a8",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "\u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5\u099f \u09b8\u09ac\u09af\u0995\u09b0\u09af\u09ad\u09ac \u0989\u09a8\u09a8\u09a4 \u09b9\u09af \u09af\u09ac, \u09a8\u09a4\u09a8 \u09ac\u09a1 \u09b8\u09b9: \"Try it out\" \u09ac\u099f\u09a8 \u099a\u09aa\u09a8, \u098f\u099f \u0986\u09aa\u09a8\u0995 \u09aa\u09b0\u09ae\u099f\u09b0\u0997\u09b2 \u09aa\u09b0\u09a3 \u0995\u09b0\u09a4 \u098f\u09ac API \u098f\u09b0 \u09b8\u09a5 \u09b8\u09b0\u09b8\u09b0 \u0995\u09b0\u09df-\u0995\u09b2\u09aa \u0995\u09b0\u09a4 \u09a6\u09ac: \u09a4\u09b0\u09aa\u09b0 \"Execute\" \u09ac\u099f\u09a8 \u099a\u09aa\u09a8, \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0987\u09a8\u099f\u09b0\u09ab\u09b8 \u0986\u09aa\u09a8\u09b0 API \u098f\u09b0 \u09b8\u09a5 \u09af\u0997\u09af\u0997 \u0995\u09b0\u09ac, \u09aa\u09b0\u09ae\u099f\u09b0 \u09aa\u09a0\u09ac, \u09ab\u09b2\u09ab\u09b2\u0997\u09b2 \u09aa\u09ac \u098f\u09ac \u09b8\u0997\u09b2 \u09aa\u09b0\u09b0\u09a6\u09df \u09a6\u0996\u09ac: \u09ac\u0995\u09b2\u09aa API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0986\u09aa\u0997\u09b0\u09a1 \u098f\u09ac \u098f\u0996\u09a8 http://127 0 0",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "1:8000/redoc \u098f \u09af\u09a8 \u09ac\u0995\u09b2\u09aa \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5\u09a4\u0993 \u09a8\u09a4\u09a8 \u0995\u09df\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u098f\u09ac \u09ac\u09a1 \u09aa\u09b0\u09a4\u09ab\u09b2\u09a4 \u09b9\u09ac: \u09b8\u0995\u09b7\u09aa\u09a4\u0995\u09b0\u09a3 \u09b8\u0995\u09b7\u09aa, \u0986\u09aa\u09a8 \u09b6\u09a7 \u098f\u0995\u09ac\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0\u09b0 \u09a7\u09b0\u09a8, \u09ac\u09a1 \u0987\u09a4\u09af\u09a6 \u09ab\u09b6\u09a8 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u09b9\u09b8\u09ac \u0998\u09b7\u09a3 \u0995\u09b0\u09a8 \u0986\u09aa\u09a8 \u09b8\u099f \u0986\u09a7\u09a8\u0995 \u09aa\u0987\u09a5\u09a8\u09b0 \u09b8\u09a5 \u0995\u09b0\u09a8 \u0986\u09aa\u09a8\u0995 \u09a8\u09a4\u09a8 \u0995\u09b0 \u09a8\u09b0\u09a6\u09b7\u099f \u0995\u09a8 \u09b2\u0987\u09ac\u09b0\u09b0\u09b0 \u09ac\u0995\u09af \u0997\u09a0\u09a8, \u09ab\u09b6\u09a8 \u09ac \u0995\u09b2\u09b8 \u0995\u099b\u0987 \u09b6\u0996\u09a4 \u09b9\u099a\u099b \u09a8 \u09b6\u09a7\u0987 \u0986\u09a7\u09a8\u0995 Python 3 6+ \u0989\u09a6\u09b9\u09b0\u09a3\u09b8\u09ac\u09b0\u09aa, int \u098f\u09b0 \u099c\u09a8\u09af: item_id: int \u0985\u09a5\u09ac \u0986\u09b0\u0993 \u099c\u099f\u09b2 Item \u09ae\u09a1\u09b2\u09b0 \u099c\u09a8\u09af: item: Item",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "\u098f\u09ac \u09b8\u0987 \u098f\u0995\u0987 \u0998\u09b7\u09a3\u09b0 \u09b8\u09a5 \u0986\u09aa\u09a8 \u09aa\u09ac\u09a8: \u098f\u09a1\u099f\u09b0 \u09b8\u09b9\u09af\u09af, \u09af\u09ae\u09a8 \u09b8\u09ae\u09aa\u09a4 \u09a7\u09b0\u09a3 \u09af\u099a\u0987 \u09a4\u09a5\u09af \u09af\u099a\u0987\u0995\u09b0\u09a3: \u09a1\u099f \u0985\u09ac\u09a7 \u09b9\u09b2 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u098f\u09ac \u09aa\u09b0\u09b7\u0995\u09b0 \u09a4\u09b0\u099f\u09b0 \u09a8\u09b0\u09a6\u09b6\u09a8 \u098f\u09ae\u09a8\u0995 \u0997\u09ad\u09b0\u09ad\u09ac \u09a8\u09b8\u099f \u0995\u09b0 JSON \u0985\u09ac\u099c\u0995\u099f\u09b0 \u099c\u09a8\u09af \u09ac\u09a7\u09a4 \u09aa\u09b0\u09b0\u09a4 \u09a4\u09a5\u09af \u09b0\u09aa\u09a8\u09a4\u09b0: \u09af \u09a8\u099f\u0993\u09df\u09b0\u0995 \u09a5\u0995 \u09aa\u0987\u09a5\u09a8\u09b0 \u09a4\u09a5\u09af \u098f\u09ac \u09a7\u09b0\u09a8 \u0986\u09b8, \u098f\u09ac \u09b8\u0996\u09a8 \u09a5\u0995 \u09aa\u09dc: JSON \u09aa\u09a5 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0995\u09df\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0995\u0995\u099c \u09b9\u09a1\u09b0 \u09ab\u09b0\u09ae \u09ab\u0987\u09b2 \u0986\u0989\u099f\u09aa\u099f \u09a1\u099f\u09b0 \u09b0\u09aa\u09a8\u09a4\u09b0: \u09aa\u0987\u09a5\u09a8 \u09a1\u099f \u098f\u09ac \u099f\u0987\u09aa \u09a5\u0995 \u09a8\u099f\u0993\u09af\u09b0\u0995 \u09a1\u099f\u09a4 \u09b0\u09aa\u09a8\u09a4\u09b0 \u0995\u09b0 (JSON \u09b9\u09b8\u09ac): -\u09aa\u0987\u09a5\u09a8 \u099f\u0987\u09aa \u09b0\u09aa\u09a8\u09a4\u09b0 \u0995\u09b0\u09a8 (str, int, float, bool, list, \u0987\u09a4\u09af\u09a6) datetime \u0985\u09ac\u099c\u0995\u099f UUID obje\u0985\u09ac\u099c\u0995\u099fcts \u09a1\u099f\u09ac\u09b8 \u09ae\u09a1\u09b2",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "\u098f\u09ac \u0986\u09b0 \u0985\u09a8\u0995 \u09b8\u09ac\u09af\u0995\u09b0\u09af \u0995\u09b0\u09df\u09b6\u09b2 API \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5, 2\u099f \u09ac\u0995\u09b2\u09aa \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0987\u09a8\u099f\u09b0\u09ab\u09b8 \u09b8\u09b9: \u09b8\u09af\u0997\u09b0 \u0987\u0989 \u0986\u0987 (Swagger UI) \u09b0\u09a1\u0995 (ReDoc) \u09aa\u09b0\u09ac\u09ac\u09b0\u09a4 \u0995\u09a1 \u0989\u09a6\u09b9\u09b0\u09a3 \u09ab\u09b0 \u0986\u09b8 \u09af\u0995, FastAPI \u09af \u0995\u09b0\u09ac: GET \u098f\u09ac PUT \u0985\u09a8\u09b0\u09a7\u09b0 \u099c\u09a8\u09af \u09aa\u09a5 item_id \u0986\u099b \u0995\u09a8 \u09a4 \u09af\u099a\u0987 \u0995\u09b0\u09ac GET \u098f\u09ac PUT \u0985\u09a8\u09b0\u09a7\u09b0 \u099c\u09a8\u09af item_id \u099f\u0987\u09aa int \u098f\u09b0 \u09b9\u09a4 \u09b9\u09ac \u09a4 \u09af\u099a\u0987 \u0995\u09b0\u09ac \u09af\u09a6 \u09a8 \u09b9\u09af \u09a4\u09ac \u0995\u09b2\u09af\u09a8\u099f \u098f\u0995\u099f \u0989\u09aa\u09af\u0995\u09a4, \u09aa\u09b0\u09b7\u0995\u09b0 \u09a4\u09b0\u099f \u09a6\u0996\u09a4 \u09aa\u09ac\u09a8 GET \u0985\u09a8\u09b0\u09a7\u09b0 \u099c\u09a8\u09af \u098f\u0995\u099f \u0990\u099a\u099b\u0995 \u0995\u09af\u09af\u09b0 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u09a8\u09ae\u0995 q (\u09af\u09ae\u09a8 http://127 0 0 1:8000/items/foo",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "q=somequery) \u0986\u099b \u0995 \u09a4 \u099a\u0995 \u0995\u09b0\u09ac \u09af\u09b9\u09a4 q \u09aa\u09af\u09b0\u09ae\u099f\u09b0\u099f = None \u09a6\u09af \u0998\u09b7\u09a3 \u0995\u09b0 \u09b9\u09af\u099b, \u09a4\u0987 \u098f\u099f \u0990\u099a\u099b\u0995 None \u099b\u09a1 \u098f\u099f \u09aa\u09b0\u09af\u099c\u09a8\u09af \u09b9\u09a4 (\u09af\u09ae\u09a8 PUT \u098f\u09b0 \u0995\u09b7\u09a4\u09b0 \u09b9\u09df\u099b) /items/{item_id} \u098f\u09b0 \u099c\u09a8\u09af PUT \u0985\u09a8\u09b0\u09a7\u09b0 \u09ac\u09a1 JSON \u09b9\u09b8\u09ac \u09aa\u09a1\u09a8: \u09b2\u0995\u09b7 \u0995\u09b0\u09a8, name \u098f\u0995\u099f \u09aa\u09b0\u09af\u099c\u09a8\u09af \u0985\u09af\u099f\u09b0\u09ac\u0989\u099f \u09b9\u09b8\u09ac \u09ac\u09ac\u099a\u09a8 \u0995\u09b0\u099b \u098f\u09ac \u098f\u099f str \u09b9\u09a4 \u09b9\u09ac \u09b2\u0995\u09b7 \u0995\u09b0\u09a8 \u098f\u0996\u09a8, price \u0985\u09af\u099f\u09b0\u09ac\u0989\u099f\u099f \u0986\u09ac\u09b6\u09af\u0995 \u098f\u09ac \u098f\u099f float \u09b9\u09a4 \u09b9\u09ac \u09b2\u0995\u09b7 \u0995\u09b0\u09a8 is_offer \u098f\u0995\u099f \u0990\u099a\u099b\u0995 \u0985\u09af\u099f\u09b0\u09ac\u0989\u099f \u098f\u09ac \u098f\u099f bool \u09b9\u09a4 \u09b9\u09ac \u09af\u09a6 \u0989\u09aa\u09b8\u09a5\u09a4 \u09a5\u0995 \u098f\u0987 \u09b8\u09ac\u099f \u0997\u09ad\u09b0\u09ad\u09ac \u0985\u09ac\u09b8\u09a5\u09a8\u09b0\u09a4 JSON \u0985\u09ac\u099c\u0995\u099f\u0997\u09b2\u09a4\u0993 \u0995\u099c \u0995\u09b0\u09ac \u09b8\u09ac\u09af\u0995\u09b0\u09af\u09ad\u09ac JSON \u09b9\u09a4 \u098f\u09ac JSON \u09a5\u0995 \u0995\u09a8\u09ad\u09b0\u099f \u0995\u09b0\u09a8 OpenAPI \u09a6\u09af \u09b8\u09ac\u0995\u099b \u09a1\u0995\u09ae\u09a8\u099f \u0995\u09b0\u09a8, \u09af \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09af\u09a4 \u09aa\u09b0: \u0995\u09b0\u09df\u09b6\u09b2 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0985\u09a8\u0995 \u09ad\u09b7\u09b0 \u099c\u09a8\u09af \u09b8\u09ac\u09af\u0995\u09b0\u09af \u0995\u09b2\u09af\u09a8\u099f \u0995\u09a1 \u09a4\u09b0\u09b0 \u09ac\u09af\u09ac\u09b8\u09a5 \u09b8\u09b0\u09b8\u09b0 2\u099f \u0995\u09b0\u09df\u09b6\u09b2 \u09a8\u09b0\u09a6\u09b6\u0995 \u09a8\u09a5 \u0993\u09af\u09ac \u09aa\u09b7\u09a0 \u09aa\u09b0\u09a6\u09a8 \u0995\u09b0 \u09b9\u09df\u099b \u0986\u09ae\u09b0 \u098f\u09a4\u0995\u09b7\u09a8 \u09b6\u09a7 \u098f\u09b0 \u09aa\u09b7\u09a0 \u09a4\u09b0 \u0995\u09b0\u099b, \u0995\u09a8\u09a4 \u0986\u09aa\u09a8 \u0987\u09a4\u09ae\u09a7\u09af\u0987 \u098f\u099f \u0995\u09ad\u09ac \u0995\u099c \u0995\u09b0 \u09a4\u09b0 \u09a7\u09b0\u09a3\u0993 \u09aa\u09df \u0997\u09df\u099b\u09a8 \u09a8\u09ae\u09a8\u0995\u09a4 \u09b2\u0987\u09a8 \u0997\u09b2 \u09aa\u09b0\u09ac\u09b0\u09a4\u09a8 \u0995\u09b0\u09b0 \u099a\u09b7\u099f \u0995\u09b0\u09a8: return {\"item_name\": item",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "name, \"item_id\": item_id} \u09aa\u09b0\u09ac: \"item_name\": item name \u09aa\u09b0\u09ac\u09b0\u09a4\u09a4: \"item_price\": item price \u098f\u09ac \u09a6\u0996\u09a8 \u0995\u09ad\u09ac \u0986\u09aa\u09a8\u09b0 \u098f\u09a1\u099f\u09b0 \u0989\u09aa\u09a6\u09a8\u0997\u09b2\u0995 \u09b8\u09df\u0995\u09b0\u09df\u09ad\u09ac-\u09b8\u09ae\u09aa\u09a8\u09a8 \u0995\u09b0\u09ac \u098f\u09ac \u09a4\u09a6\u09b0 \u09a7\u09b0\u09a8 \u099c\u09a8\u09a4 \u09aa\u09b0\u09ac: \u0986\u09b0\u0993 \u09ac\u09b6\u09b7\u099f\u09af \u09b8\u09ae\u09aa\u09a8\u09a8 \u0989\u09a6\u09b9\u09b0\u09a3\u09b0 \u099c\u09a8\u09af, \u09a6\u0996\u09a8 \u099f\u0989\u099f\u09b0\u09df\u09b2 - \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0997\u0987\u09a1",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "\u09b8\u09aa\u09df\u09b2\u09b0 \u09b8\u09a4\u09b0\u0995\u09a4: \u099f\u0989\u099f\u09b0\u09df\u09b2 - \u09ac\u09af\u09ac\u09b9\u09b0\u0995\u09b0\u09b0 \u0997\u0987\u09a1 \u09a8\u09ae\u09a8\u0995\u09a4 \u09ac\u09b7\u09df\u0997\u09b2 \u0985\u09a8\u09a4\u09b0\u09ad\u0995\u09a4 \u0995\u09b0: \u09b9\u09a1\u09b0, \u0995\u0995\u099c, \u09ab\u09b0\u09ae \u09ab\u09b2\u09a1 \u098f\u09ac \u09ab\u0987\u09b2\u0997\u09b2 \u098f\u09ae\u09a8 \u0985\u09a8\u09af\u09a8\u09af \u099c\u09df\u0997 \u09a5\u0995 \u09aa\u09af\u09b0\u09ae\u099f\u09b0 \u0998\u09b7\u09a3 \u0995\u09b0 maximum_length \u09ac regex \u098f\u09b0 \u09ae\u09a4 \u09af\u099a\u0987\u0995\u09b0\u09a3 \u09ac\u09a7\u09ae\u0995\u09a4 \u09b8\u099f \u0995\u09b0 \u09b9\u09af \u0995\u09ad\u09ac, \u09a4 \u09a8\u09df \u0986\u09b2\u099a\u09a8 \u0995\u09b0 \u09b9\u09ac \u098f\u0995\u099f \u0996\u09ac \u09b6\u0995\u09a4\u09b6\u09b2 \u098f\u09ac \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0 \u09b8\u09b9\u099c \u09a1\u09aa\u09a8\u09a1\u09a8\u09b8 \u0987\u09a8\u099c\u0995\u09b6\u09a8 \u09aa\u09a6\u09a7\u09a4 OAuth2 \u098f\u09ac JWT \u099f\u0995\u09a8 \u098f\u09ac HTTP Basic auth \u09b8\u09b9 \u09a8\u09b0\u09aa\u09a4\u09a4 \u098f\u09ac \u0985\u09a8\u09ae\u09a6\u09a8\u09aa\u09b0\u09aa\u09a4 \u09b8\u09ae\u09aa\u09b0\u0995\u09a4 \u09ac\u09b7\u09df\u09b8\u09ae\u09b9\u09b0 \u0989\u09aa\u09b0 \u0997\u09ad\u09b0\u09ad\u09ac \u0985\u09ac\u09b8\u09a5\u09a8\u09b0\u09a4 JSON \u09ae\u09a1\u09b2 \u0998\u09b7\u09a3 \u0995\u09b0\u09b0 \u099c\u09a8\u09af \u0986\u09b0\u0993 \u0989\u09a8\u09a8\u09a4 (\u0995\u09a8\u09a4 \u09b8\u09ae\u09a8 \u09b8\u09b9\u099c) \u0995\u09b6\u09b2 (Pydantic \u0995 \u09a7\u09a8\u09af\u09ac\u09a6) \u0986\u09b0 \u0985\u09a4\u09b0\u0995\u09a4 \u09ac\u09b6\u09b7\u099f\u09af (\u09b8\u099f\u09b0\u09b2\u099f\u0995 \u09a7\u09a8\u09af\u09ac\u09a6) \u09b9\u09b8\u09ac: WebSockets GraphQL HTTPX \u098f\u09ac pytest \u09ad\u09a4\u09a4\u0995 \u0985\u09a4\u09af\u09a8\u09a4 \u09b8\u09b9\u099c \u09aa\u09b0\u0995\u09b7 CORS Cookie Sessions",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "\u098f\u09ac \u0986\u09b0 \u0995\u09b0\u09ae\u0995\u09b7\u09ae\u09a4 \u09b8\u09ac\u09a7\u09a8 TechEmpower Benchmarks \u09a6\u0996\u09af \u09af FastAPI \u0985\u09af\u09aa\u09b2\u0995\u09b6\u09a8\u0997\u09b2 Uvicorn-\u098f\u09b0 \u0985\u09a7\u09a8 \u099a\u09b2\u09ae\u09a8 \u09a6\u09b0\u09a4\u09a4\u09ae\u09aa\u0987\u09a5\u09a8 \u09ab\u09b0\u09ae\u0993\u09af\u09b0\u0995\u0997\u09b2\u09b0 \u09ae\u09a7\u09af \u098f\u0995\u099f, \u09b6\u09a7\u09ae\u09a4\u09b0 Starlette \u098f\u09ac Uvicorn-\u098f\u09b0 \u09aa\u09b0 (FastAPI \u09a6\u09ac\u09b0 \u0985\u09ad\u09af\u09a8\u09a4\u09b0\u09a3\u09ad\u09ac \u09ac\u09af\u09ac\u09b9\u09a4) (*) \u098f\u099f \u09b8\u09ae\u09aa\u09b0\u0995 \u0986\u09b0\u0993 \u09ac\u099d\u09a4, \u09a6\u0996\u09a8 Benchmarks \u0990\u099a\u099b\u0995 \u09a8\u09b0\u09ad\u09b0\u09b6\u09b2\u09a4 Pydantic \u09a6\u09ac\u09b0 \u09ac\u09af\u09ac\u09b9\u09a4: email-validator - \u0987\u09ae\u09b2 \u09af\u099a\u0987\u0995\u09b0\u09a3\u09b0 \u099c\u09a8\u09af \u09b8\u099f\u09b0\u09b2\u099f \u09a6\u09ac\u09b0 \u09ac\u09af\u09ac\u09b9\u09a4: httpx - \u0986\u09aa\u09a8 \u09af\u09a6 TestClient \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u09a8 \u09a4\u09b9\u09b2 \u0986\u09ac\u09b6\u09af\u0995 jinja2 - \u0986\u09aa\u09a8 \u09af\u09a6 \u09aa\u09b0\u09a6\u09a4\u09a4 \u099f\u09ae\u09aa\u09b2\u099f \u09b0\u09aa\u09b0\u0996 \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u09a8 \u09a4\u09b9\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 python-multipart - \u0986\u09aa\u09a8 \u09af\u09a6 \u09ab\u09b0\u09ae \u09b8\u09b9\u09af\u09a4 \u0995\u09b0\u09a4 \u099a\u09a8 \u09a4\u09b9\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 \"parsing\", request",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "form() \u09b8\u09b9 itsdangerous - SessionMiddleware \u09b8\u09b9\u09af\u09a4\u09b0 \u099c\u09a8\u09af \u09aa\u09b0\u09af\u099c\u09a8 pyyaml - \u09b8\u099f\u09b0\u09b2\u099f\u09b0 SchemaGenerator \u09b8\u09aa\u09b0\u099f \u098f\u09b0 \u099c\u09a8\u09af \u09aa\u09b0\u09df\u099c\u09a8 (\u0986\u09aa\u09a8\u09b0 \u09b8\u09ae\u09ad\u09ac\u09a4 FastAPI \u09aa\u09b0\u09af\u099c\u09a8 \u09a8\u0987) graphene - GraphQLApp \u09b8\u09b9\u09af\u09a4\u09b0 \u099c\u09a8\u09af \u09aa\u09b0\u09df\u099c\u09a8 FastAPI / Starlette \u09a6\u09ac\u09b0 \u09ac\u09af\u09ac\u09b9\u09a4: uvicorn - \u09b8\u09b0\u09ad\u09b0\u09b0 \u099c\u09a8\u09af \u09af \u0986\u09aa\u09a8\u09b0 \u0985\u09af\u09aa\u09b2\u0995\u09b6\u09a8 \u09b2\u09a1 \u0995\u09b0 \u098f\u09ac \u09aa\u09b0\u09ac\u09b6\u09a8 \u0995\u09b0 orjson - \u0986\u09aa\u09a8 ORJSONResponse \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u0987\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 ujson - \u0986\u09aa\u09a8 UJSONResponse \u09ac\u09af\u09ac\u09b9\u09b0 \u0995\u09b0\u09a4 \u099a\u0987\u09b2 \u09aa\u09b0\u09af\u099c\u09a8 \u0986\u09aa\u09a8 \u098f\u0987 \u09b8\u09ac \u0987\u09a8\u09b8\u099f\u09b2 \u0995\u09b0\u09a4 \u09aa\u09b0\u09a8 pip install fastapi[all] \u09a6\u09df \u09b2\u0987\u09b8\u09a8\u09b8 \u098f\u0987 \u09aa\u09b0\u099c\u0995\u099f MIT \u09b2\u0987\u09b8\u09a8\u09b8 \u09a8\u09a4\u09ae\u09b2\u09b0 \u0985\u09a7\u09a8 \u09b6\u09b0\u09a4\u09df\u09a4 \u0989\u09aa\u09b0 \u09ab\u09b0 \u09af\u0993",
          "url": "https://fastapi.tiangolo.com/bn/#_1",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/de/#fastapi",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI Inhaltsverzeichnis Sponsoren Meinungen Typer, das FastAPI der CLIs Anforderungen Installation Beispiel Erstellung Starten Testen Interaktive API-Dokumentation Alternative API-Dokumentation Beispiel Aktualisierung Aktualisierung der interaktiven API-Dokumentation Aktualisierung der alternativen API-Dokumentation Zusammenfassung Performanz Optionale Abh\u00e4ngigkeiten Lizenz Merkmale Lernen Lernen Einf\u00fchrung in Python-Typen Nebenl\u00e4ufigkeit und async / await Environment Variables Virtual Environments Tutorial  Benutzerhandbuch Tutorial  Benutzerhandbuch Erste Schritte Pfad-Parameter Query-Parameter Requestbody Query-Parameter und Stringvalidierung Pfad-Parameter und Validierung von Zahlen Query Parameter Models Body  Mehrere Parameter Body  Felder Body  Verschachtelte Modelle Beispiel-Request-Daten deklarieren Zus\u00e4tzliche Datentypen Cookie-Parameter Header-Parameter Cookie Parameter Models Header Parameter Models Responsemodell  R\u00fcckgabetyp Extramodelle Response-Statuscode Formulardaten Form Models Dateien im Request Formulardaten und Dateien im Request Fehlerbehandlung Pfadoperation-Konfiguration JSON-kompatibler Encoder Body  Aktualisierungen Abh\u00e4ngigkeiten Abh\u00e4ngigkeiten Klassen als Abh\u00e4ngigkeiten Unterabh\u00e4ngigkeiten Abh\u00e4ngigkeiten in Pfadoperation-Dekoratoren Globale Abh\u00e4ngigkeiten Abh\u00e4ngigkeiten mit yield Sicherheit Sicherheit Sicherheit  Erste Schritte Aktuellen Benutzer abrufen Einfaches OAuth2 mit Password und Bearer OAuth2 mit Password (und Hashing), Bearer mit JWT-Tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Gr\u00f6\u00dfere Anwendungen  mehrere Dateien Hintergrundtasks Metadaten und URLs der Dokumentationen Statische Dateien Testen Debugging Handbuch f\u00fcr fortgeschrittene Benutzer Handbuch f\u00fcr fortgeschrittene Benutzer Fortgeschrittene Konfiguration der Pfadoperation Zus\u00e4tzliche Statuscodes Eine Response direkt zur\u00fcckgeben Benutzerdefinierte Response  HTML, Stream, Datei, andere Zus\u00e4tzliche Responses in OpenAPI Response-Cookies Response-Header Response  Statuscode \u00e4ndern Fortgeschrittene Abh\u00e4ngigkeiten Fortgeschrittene Sicherheit Fortgeschrittene Sicherheit OAuth2-Scopes HTTP Basic Auth Den Request direkt verwenden Verwendung von Datenklassen Fortgeschrittene Middleware Unteranwendungen  Mounts Hinter einem Proxy Templates WebSockets Lifespan-Events WebSockets testen Events testen: Hochfahren  Herunterfahren Testen mit Ersatz f\u00fcr Abh\u00e4ngigkeiten Asynchrone Tests Einstellungen und Umgebungsvariablen OpenAPI-Callbacks OpenAPI-Webhooks WSGI inkludieren  Flask, Django und andere Clients generieren FastAPI CLI Deployment Deployment \u00dcber FastAPI-Versionen \u00dcber HTTPS Einen Server manuell ausf\u00fchren  Uvicorn Deployment-Konzepte FastAPI-Deployment bei Cloud-Anbietern Serverworker  Gunicorn mit Uvicorn FastAPI in Containern  Docker How-To  Rezepte How-To  Rezepte Allgemeines  How-To  Rezepte GraphQL Benutzerdefinierte Request- und APIRoute-Klasse Bedingte OpenAPI OpenAPI erweitern Separate OpenAPI-Schemas f\u00fcr Eingabe und Ausgabe oder nicht Statische Assets der Dokumentationsoberfl\u00e4che (selbst hosten) Swagger-Oberfl\u00e4che konfigurieren Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Ressourcen Ressourcen FastAPI helfen  Hilfe erhalten Development - Contributing Projektgenerierung  Vorlage External Links and Articles FastAPI and friends newsletter Repository Management Tasks \u00dcber \u00dcber Alternativen, Inspiration und Vergleiche Geschichte, Design und Zukunft Benchmarks Repository Management Release Notes Inhaltsverzeichnis Sponsoren Meinungen Typer, das FastAPI der CLIs Anforderungen Installation Beispiel Erstellung Starten Testen Interaktive API-Dokumentation Alternative API-Dokumentation Beispiel Aktualisierung Aktualisierung der interaktiven API-Dokumentation Aktualisierung der alternativen API-Dokumentation Zusammenfassung Performanz Optionale Abh\u00e4ngigkeiten Lizenz FastAPI FastAPI Framework, hochperformant, leicht zu erlernen, schnell zu programmieren, einsatzbereit Dokumentation: https://fastapi.tiangolo.com Quellcode: https://github.com/fastapi/fastapi FastAPI ist ein modernes, schnelles (hoch performantes) Webframework zur Erstellung von APIs mit Python auf Basis von Standard-Python-Typhinweisen. Seine Schl\u00fcssel-Merkmale sind: Schnell: Sehr hohe Leistung, auf Augenh\u00f6he mit NodeJS und Go (Dank Starlette und Pydantic). Eines der schnellsten verf\u00fcgbaren Python-Frameworks. Schnell zu programmieren: Erh\u00f6hen Sie die Geschwindigkeit bei der Entwicklung von Funktionen um etwa 200  bis 300 . * Weniger Bugs: Verringern Sie die von Menschen (Entwicklern) verursachten Fehler um etwa 40 . * Intuitiv: Exzellente Editor-Unterst\u00fctzung. Code-Vervollst\u00e4ndigung \u00fcberall. Weniger Debuggen. Einfach: So konzipiert, dass es einfach zu benutzen und zu erlernen ist. Weniger Zeit f\u00fcr das Lesen der Dokumentation. Kurz: Minimieren Sie die Verdoppelung von Code. Mehrere Funktionen aus jeder Parameterdeklaration. Weniger Bugs. Robust: Erhalten Sie produktionsreifen Code. Mit automatischer, interaktiver Dokumentation. Standards-basiert: Basierend auf (und vollst\u00e4ndig kompatibel mit) den offenen Standards f\u00fcr APIs: OpenAPI (fr\u00fcher bekannt als Swagger) und JSON Schema. * Sch\u00e4tzung auf Basis von Tests in einem internen Entwicklungsteam, das Produktionsanwendungen erstellt. Sponsoren Andere Sponsoren Meinungen [...] Ich verwende FastAPI heutzutage sehr oft. [...] Ich habe tats\u00e4chlich vor, es f\u00fcr alle ML-Dienste meines Teams bei Microsoft zu verwenden. Einige davon werden in das Kernprodukt Windows und einige Office-Produkte integriert. Kabir Khan - Microsoft (Ref) Wir haben die FastAPI-Bibliothek genommen, um einen REST-Server zu erstellen, der abgefragt werden kann, um Vorhersagen zu erhalten. [f\u00fcr Ludwig] Piero Molino, Yaroslav Dudin, und Sai Sumanth Miryala - Uber (Ref) Netflix freut sich, die Open-Source-Ver\u00f6ffentlichung unseres Krisenmanagement-Orchestrierung-Frameworks bekannt zu geben: Dispatch! [erstellt mit FastAPI] Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (Ref) Ich bin \u00fcbergl\u00fccklich mit FastAPI. Es macht so viel Spa\u00df! Brian Okken - Host des Python Bytes Podcast (Ref) Ehrlich, was Du gebaut hast, sieht super solide und poliert aus. In vielerlei Hinsicht ist es so, wie ich Hug haben wollte  es ist wirklich inspirierend, jemanden so etwas bauen zu sehen. Timothy Crosley - Autor von Hug (Ref) Wenn Sie ein modernes Framework zum Erstellen von REST-APIs erlernen m\u00f6chten, schauen Sie sich FastAPI an. [...] Es ist schnell, einfach zu verwenden und leicht zu erlernen [...] Wir haben zu FastAPI f\u00fcr unsere APIs gewechselt [...] Ich denke, es wird Ihnen gefallen [...] Ines Montani - Matthew Honnibal - Gr\u00fcnder von Explosion AI - Autoren von spaCy (Ref) - (Ref) Falls irgendjemand eine Produktions-Python-API erstellen m\u00f6chte, kann ich FastAPI w\u00e4rmstens empfehlen. Es ist wundersch\u00f6n konzipiert, einfach zu verwenden und hoch skalierbar; es ist zu einer Schl\u00fcsselkomponente in unserer API-First-Entwicklungsstrategie geworden und treibt viele Automatisierungen und Dienste an, wie etwa unseren virtuellen TAC-Ingenieur. Deon Pillsbury - Cisco (Ref) Typer, das FastAPI der CLIs Wenn Sie eine CLI-Anwendung f\u00fcr das Terminal erstellen, anstelle einer Web-API, schauen Sie sich Typer an. Typer ist die kleine Schwester von FastAPI. Und es soll das FastAPI der CLIs sein.   Anforderungen FastAPI steht auf den Schultern von Giganten: Starlette f\u00fcr die Webanteile. Pydantic f\u00fcr die Datenanteile. Installation  pip install fastapi --- 100 Sie ben\u00f6tigen au\u00dferdem einen ASGI-Server. F\u00fcr die Produktumgebung beispielsweise Uvicorn oder Hypercorn.  pip install \"uvicorn[standard]\" --- 100 Beispiel Erstellung Erstellen Sie eine Datei main.py mit: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Oder verwenden Sie async def ... Wenn Ihr Code async / await verwendet, benutzen Sie async def: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Anmerkung: Wenn Sie das nicht kennen, schauen Sie sich den Abschnitt In Eile? \u00fcber async und await in der Dokumentation an. Starten F\u00fchren Sie den Server aus:  uvicorn main:app --reload INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup. INFO: Application startup complete. Was macht der Befehl uvicorn main:app --reload ... Der Befehl uvicorn main:app bezieht sich auf: main: die Datei main.py (das Python-Modul). app: das Objekt, das innerhalb von main.py mit der Zeile app = FastAPI() erzeugt wurde. --reload: l\u00e4sst den Server nach Code\u00e4nderungen neu starten. Tun Sie das nur w\u00e4hrend der Entwicklung. Testen \u00d6ffnen Sie Ihren Browser unter http://127.0.0.1:8000/items/5?q=somequery. Sie erhalten die JSON-Response: {\"item_id\": 5, \"q\": \"somequery\"} Damit haben Sie bereits eine API erstellt, welche: HTTP-Anfragen auf den Pfaden / und /items/{item_id} entgegennimmt. Beide Pfade erhalten GET Operationen (auch bekannt als HTTP Methoden). Der Pfad /items/{item_id} hat einen Pfadparameter item_id, der ein int sein sollte. Der Pfad /items/{item_id} hat einen optionalen str Query Parameter q. Interaktive API-Dokumentation Gehen Sie nun auf http://127.0.0.1:8000/docs. Sie sehen die automatische interaktive API-Dokumentation (bereitgestellt von Swagger UI): Alternative API-Dokumentation Gehen Sie jetzt auf http://127.0.0.1:8000/redoc. Sie sehen die alternative automatische Dokumentation (bereitgestellt von ReDoc): Beispiel Aktualisierung \u00c4ndern Sie jetzt die Datei main.py, um den Body einer PUT-Anfrage zu empfangen. Deklarieren Sie den Body mithilfe von Standard-Python-Typen, dank Pydantic. from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} Der Server sollte automatisch neu geladen werden (weil Sie oben --reload zum Befehl uvicorn hinzugef\u00fcgt haben). Aktualisierung der interaktiven API-Dokumentation Gehen Sie jetzt auf http://127.0.0.1:8000/docs. Die interaktive API-Dokumentation wird automatisch aktualisiert, einschlie\u00dflich des neuen Bodys: Klicken Sie auf die Taste Try it out, damit k\u00f6nnen Sie die Parameter ausf\u00fcllen und direkt mit der API interagieren: Klicken Sie dann auf die Taste Execute, die Benutzeroberfl\u00e4che wird mit Ihrer API kommunizieren, sendet die Parameter, holt die Ergebnisse und zeigt sie auf dem Bildschirm an: Aktualisierung der alternativen API-Dokumentation Und nun gehen Sie auf http://127.0.0.1:8000/redoc. Die alternative Dokumentation wird ebenfalls den neuen Abfrageparameter und -inhalt widerspiegeln: Zusammenfassung Zusammengefasst deklarieren Sie einmal die Typen von Parametern, Body, etc. als Funktionsparameter. Das machen Sie mit modernen Standard-Python-Typen. Sie m\u00fcssen keine neue Syntax, Methoden oder Klassen einer bestimmten Bibliothek usw. lernen. Nur Standard-Python+. Zum Beispiel f\u00fcr ein int: item_id: int oder f\u00fcr ein komplexeres Item-Modell: item: Item ... und mit dieser einen Deklaration erhalten Sie: Editor-Unterst\u00fctzung, einschlie\u00dflich: Code-Vervollst\u00e4ndigung. Typpr\u00fcfungen. Validierung von Daten: Automatische und eindeutige Fehler, wenn die Daten ung\u00fcltig sind. Validierung auch f\u00fcr tief verschachtelte JSON-Objekte. Konvertierung von Eingabedaten: Aus dem Netzwerk kommend, zu Python-Daten und -Typen. Lesen von: JSON. Pfad-Parametern. Abfrage-Parametern. Cookies. Header-Feldern. Formularen. Dateien. Konvertierung von Ausgabedaten: Konvertierung von Python-Daten und -Typen zu Netzwerkdaten (als JSON): Konvertieren von Python-Typen (str, int, float, bool, list, usw.). Datetime-Objekte. UUID-Objekte. Datenbankmodelle. ... und viele mehr. Automatische interaktive API-Dokumentation, einschlie\u00dflich 2 alternativer Benutzeroberfl\u00e4chen: Swagger UI. ReDoc. Um auf das vorherige Codebeispiel zur\u00fcckzukommen, FastAPI wird: \u00dcberpr\u00fcfen, dass es eine item_id im Pfad f\u00fcr GET- und PUT-Anfragen gibt. \u00dcberpr\u00fcfen, ob die item_id vom Typ int f\u00fcr GET- und PUT-Anfragen ist. Falls nicht, wird dem Client ein n\u00fctzlicher, eindeutiger Fehler angezeigt. Pr\u00fcfen, ob es einen optionalen Abfrageparameter namens q (wie in http://127.0.0.1:8000/items/foo?q=somequery) f\u00fcr GET-Anfragen gibt. Da der q-Parameter mit = None deklariert ist, ist er optional. Ohne das None w\u00e4re er erforderlich (wie der Body im Fall von PUT). Bei PUT-Anfragen an /items/{item_id} den Body als JSON lesen: Pr\u00fcfen, ob er ein erforderliches Attribut name hat, das ein str sein muss. Pr\u00fcfen, ob er ein erforderliches Attribut price hat, das ein float sein muss. Pr\u00fcfen, ob er ein optionales Attribut is_offer hat, das ein bool sein muss, falls vorhanden. All dies w\u00fcrde auch f\u00fcr tief verschachtelte JSON-Objekte funktionieren. Automatisch von und nach JSON konvertieren. Alles mit OpenAPI dokumentieren, welches verwendet werden kann von: Interaktiven Dokumentationssystemen. Automatisch Client-Code generierenden Systemen f\u00fcr viele Sprachen. Zwei interaktive Dokumentation-Webschnittstellen direkt zur Verf\u00fcgung stellen. Wir haben nur an der Oberfl\u00e4che gekratzt, aber Sie bekommen schon eine Vorstellung davon, wie das Ganze funktioniert. Versuchen Sie, diese Zeile zu \u00e4ndern: return {\"item_name\": item.name, \"item_id\": item_id} ... von: ... \"item_name\": item.name ... ... zu: ... \"item_price\": item.price ... ... und sehen Sie, wie Ihr Editor die Attribute automatisch ausf\u00fcllt und ihre Typen kennt: F\u00fcr ein vollst\u00e4ndigeres Beispiel, mit weiteren Funktionen, siehe das Tutorial - Benutzerhandbuch. Spoiler-Alarm: Das Tutorial - Benutzerhandbuch enth\u00e4lt: Deklaration von Parametern von anderen verschiedenen Stellen wie: Header-Felder, Cookies, Formularfelder und Dateien. Wie man Validierungseinschr\u00e4nkungen wie maximum_length oder regex setzt. Ein sehr leistungsf\u00e4higes und einfach zu bedienendes System f\u00fcr Dependency Injection. Sicherheit und Authentifizierung, einschlie\u00dflich Unterst\u00fctzung f\u00fcr OAuth2 mit JWT-Tokens und HTTP-Basic-Authentifizierung. Fortgeschrittenere (aber ebenso einfache) Techniken zur Deklaration tief verschachtelter JSON-Modelle (dank Pydantic). GraphQL Integration mit Strawberry und anderen Bibliotheken. Viele zus\u00e4tzliche Funktionen (dank Starlette) wie: WebSockets extrem einfache Tests auf Basis von httpx und pytest CORS Cookie Sessions ... und mehr. Performanz Unabh\u00e4ngige TechEmpower-Benchmarks zeigen FastAPI-Anwendungen, die unter Uvicorn laufen, als eines der schnellsten verf\u00fcgbaren Python-Frameworks, nur noch hinter Starlette und Uvicorn selbst (intern von FastAPI verwendet). Um mehr dar\u00fcber zu erfahren, siehe den Abschnitt Benchmarks. Optionale Abh\u00e4ngigkeiten Wird von Pydantic verwendet: email-validator - f\u00fcr E-Mail-Validierung. pydantic-settings - f\u00fcr die Verwaltung von Einstellungen. pydantic-extra-types - f\u00fcr zus\u00e4tzliche Typen, mit Pydantic zu verwenden. Wird von Starlette verwendet: httpx - erforderlich, wenn Sie den TestClient verwenden m\u00f6chten. jinja2 - erforderlich, wenn Sie die Standardkonfiguration f\u00fcr Templates verwenden m\u00f6chten. python-multipart - erforderlich, wenn Sie Formulare mittels request.form() parsen m\u00f6chten. itsdangerous - erforderlich f\u00fcr SessionMiddleware Unterst\u00fctzung. pyyaml - erforderlich f\u00fcr Starlette's SchemaGenerator Unterst\u00fctzung (Sie brauchen das wahrscheinlich nicht mit FastAPI). ujson - erforderlich, wenn Sie UJSONResponse verwenden m\u00f6chten. Wird von FastAPI / Starlette verwendet: uvicorn - f\u00fcr den Server, der Ihre Anwendung l\u00e4dt und serviert. orjson - erforderlich, wenn Sie ORJSONResponse verwenden m\u00f6chten. Sie k\u00f6nnen diese alle mit pip install \"fastapi[all]\" installieren. Lizenz Dieses Projekt ist unter den Bedingungen der MIT-Lizenz lizenziert. Zur\u00fcck zum Seitenanfang",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "uvicorn main:app --reload",
        "uvicorn main:app",
        "app = FastAPI()",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "email-validator",
        "pydantic-settings",
        "pydantic-extra-types",
        "python-multipart",
        "request.form()",
        "itsdangerous",
        "SessionMiddleware",
        "SchemaGenerator",
        "UJSONResponse",
        "ORJSONResponse",
        "pip install \"fastapi[all]\""
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI Inhaltsverzeichnis Sponsoren Meinungen Typer, das FastAPI der CLIs Anforderungen Installation Beispiel Erstellung Starten Testen Interaktive API-Dokumentation Alternative API-Dokumentation Beispiel Aktualisierung Aktualisierung der interaktiven API-Dokumentation Aktualisierung der alternativen API-Dokumentation Zusammenfassung Performanz Optionale Abh\u00e4ngigkeiten Lizenz Merkmale Lernen Lernen Einf\u00fchrung in Python-Typen Nebenl\u00e4ufigkeit und async / await Environment Variables Virtual Environments Tutorial  Benutzerhandbuch Tutorial  Benutzerhandbuch Erste Schritte Pfad-Parameter Query-Parameter Requestbody Query-Parameter und Stringvalidierung Pfad-Parameter und Validierung von Zahlen Query Parameter Models Body  Mehrere Parameter Body  Felder Body  Verschachtelte Modelle Beispiel-Request-Daten deklarieren Zus\u00e4tzliche Datentypen Cookie-Parameter Header-Parameter Cookie Parameter Models Header Parameter Models Responsemodell  R\u00fcckgabetyp Extramodelle Response-Statuscode Formulardaten Form Models Dateien im Request Formulardaten und Dateien im Request Fehlerbehandlung Pfadoperation-Konfiguration JSON-kompatibler Encoder Body  Aktualisierungen Abh\u00e4ngigkeiten Abh\u00e4ngigkeiten Klassen als Abh\u00e4ngigkeiten Unterabh\u00e4ngigkeiten Abh\u00e4ngigkeiten in Pfadoperation-Dekoratoren Globale Abh\u00e4ngigkeiten Abh\u00e4ngigkeiten mit yield Sicherheit Sicherheit Sicherheit  Erste Schritte Aktuellen Benutzer abrufen Einfaches OAuth2 mit Password und Bearer OAuth2 mit Password (und Hashing), Bearer mit JWT-Tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Gr\u00f6\u00dfere Anwendungen  mehrere Dateien Hintergrundtasks Metadaten und URLs der Dokumentationen Statische Dateien Testen Debugging Handbuch f\u00fcr fortgeschrittene Benutzer Handbuch f\u00fcr fortgeschrittene Benutzer Fortgeschrittene Konfiguration der Pfadoperation Zus\u00e4tzliche Statuscodes Eine Response direkt zur\u00fcckgeben Benutzerdefinierte Response  HTML, Stream, Datei, andere Zus\u00e4tzliche Responses in OpenAPI Response-Cookies Response-Header Response  Statuscode \u00e4ndern Fortgeschrittene Abh\u00e4ngigkeiten Fortgeschrittene Sicherheit Fortgeschrittene Sicherheit OAuth2-Scopes HTTP Basic Auth Den Request direkt verwenden Verwendung von Datenklassen Fortgeschrittene Middleware Unteranwendungen  Mounts Hinter einem Proxy Templates WebSockets Lifespan-Events WebSockets testen Events testen: Hochfahren  Herunterfahren Testen mit Ersatz f\u00fcr Abh\u00e4ngigkeiten Asynchrone Tests Einstellungen und Umgebungsvariablen OpenAPI-Callbacks OpenAPI-Webhooks WSGI inkludieren  Flask, Django und andere Clients generieren FastAPI CLI Deployment Deployment \u00dcber FastAPI-Versionen \u00dcber HTTPS Einen Server manuell ausf\u00fchren  Uvicorn Deployment-Konzepte FastAPI-Deployment bei Cloud-Anbietern Serverworker  Gunicorn mit Uvicorn FastAPI in Containern  Docker How-To  Rezepte How-To  Rezepte Allgemeines  How-To  Rezepte GraphQL Benutzerdefinierte Request- und APIRoute-Klasse Bedingte OpenAPI OpenAPI erweitern Separate OpenAPI-Schemas f\u00fcr Eingabe und Ausgabe oder nicht Statische Assets der Dokumentationsoberfl\u00e4che (selbst hosten) Swagger-Oberfl\u00e4che konfigurieren Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Ressourcen Ressourcen FastAPI helfen  Hilfe erhalten Development - Contributing Projektgenerierung  Vorlage External Links and Articles FastAPI and friends newsletter Repository Management Tasks \u00dcber \u00dcber Alternativen, Inspiration und Vergleiche Geschichte, Design und Zukunft Benchmarks Repository Management Release Notes Inhaltsverzeichnis Sponsoren Meinungen Typer, das FastAPI der CLIs Anforderungen Installation Beispiel Erstellung Starten Testen Interaktive API-Dokumentation Alternative API-Dokumentation Beispiel Aktualisierung Aktualisierung der interaktiven API-Dokumentation Aktualisierung der alternativen API-Dokumentation Zusammenfassung Performanz Optionale Abh\u00e4ngigkeiten Lizenz FastAPI FastAPI Framework, hochperformant, leicht zu erlernen, schnell zu programmieren, einsatzbereit Dokumentation: https://fastapi",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com Quellcode: https://github com/fastapi/fastapi FastAPI ist ein modernes, schnelles (hoch performantes) Webframework zur Erstellung von APIs mit Python auf Basis von Standard-Python-Typhinweisen Seine Schl\u00fcssel-Merkmale sind: Schnell: Sehr hohe Leistung, auf Augenh\u00f6he mit NodeJS und Go (Dank Starlette und Pydantic) Eines der schnellsten verf\u00fcgbaren Python-Frameworks Schnell zu programmieren: Erh\u00f6hen Sie die Geschwindigkeit bei der Entwicklung von Funktionen um etwa 200  bis 300",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "* Weniger Bugs: Verringern Sie die von Menschen (Entwicklern) verursachten Fehler um etwa 40 * Intuitiv: Exzellente Editor-Unterst\u00fctzung Code-Vervollst\u00e4ndigung \u00fcberall Weniger Debuggen Einfach: So konzipiert, dass es einfach zu benutzen und zu erlernen ist Weniger Zeit f\u00fcr das Lesen der Dokumentation Kurz: Minimieren Sie die Verdoppelung von Code Mehrere Funktionen aus jeder Parameterdeklaration Weniger Bugs Robust: Erhalten Sie produktionsreifen Code Mit automatischer, interaktiver Dokumentation",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "Standards-basiert: Basierend auf (und vollst\u00e4ndig kompatibel mit) den offenen Standards f\u00fcr APIs: OpenAPI (fr\u00fcher bekannt als Swagger) und JSON Schema * Sch\u00e4tzung auf Basis von Tests in einem internen Entwicklungsteam, das Produktionsanwendungen erstellt Sponsoren Andere Sponsoren Meinungen [ ] Ich verwende FastAPI heutzutage sehr oft [ ] Ich habe tats\u00e4chlich vor, es f\u00fcr alle ML-Dienste meines Teams bei Microsoft zu verwenden",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "Einige davon werden in das Kernprodukt Windows und einige Office-Produkte integriert Kabir Khan - Microsoft (Ref) Wir haben die FastAPI-Bibliothek genommen, um einen REST-Server zu erstellen, der abgefragt werden kann, um Vorhersagen zu erhalten [f\u00fcr Ludwig] Piero Molino, Yaroslav Dudin, und Sai Sumanth Miryala - Uber (Ref) Netflix freut sich, die Open-Source-Ver\u00f6ffentlichung unseres Krisenmanagement-Orchestrierung-Frameworks bekannt zu geben: Dispatch",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "[erstellt mit FastAPI] Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (Ref) Ich bin \u00fcbergl\u00fccklich mit FastAPI Es macht so viel Spa\u00df Brian Okken - Host des Python Bytes Podcast (Ref) Ehrlich, was Du gebaut hast, sieht super solide und poliert aus In vielerlei Hinsicht ist es so, wie ich Hug haben wollte  es ist wirklich inspirierend, jemanden so etwas bauen zu sehen",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "Timothy Crosley - Autor von Hug (Ref) Wenn Sie ein modernes Framework zum Erstellen von REST-APIs erlernen m\u00f6chten, schauen Sie sich FastAPI an [ ] Es ist schnell, einfach zu verwenden und leicht zu erlernen [ ] Wir haben zu FastAPI f\u00fcr unsere APIs gewechselt [ ] Ich denke, es wird Ihnen gefallen [ ] Ines Montani - Matthew Honnibal - Gr\u00fcnder von Explosion AI - Autoren von spaCy (Ref) - (Ref) Falls irgendjemand eine Produktions-Python-API erstellen m\u00f6chte, kann ich FastAPI w\u00e4rmstens empfehlen",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "Es ist wundersch\u00f6n konzipiert, einfach zu verwenden und hoch skalierbar; es ist zu einer Schl\u00fcsselkomponente in unserer API-First-Entwicklungsstrategie geworden und treibt viele Automatisierungen und Dienste an, wie etwa unseren virtuellen TAC-Ingenieur Deon Pillsbury - Cisco (Ref) Typer, das FastAPI der CLIs Wenn Sie eine CLI-Anwendung f\u00fcr das Terminal erstellen, anstelle einer Web-API, schauen Sie sich Typer an Typer ist die kleine Schwester von FastAPI Und es soll das FastAPI der CLIs sein",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "Anforderungen FastAPI steht auf den Schultern von Giganten: Starlette f\u00fcr die Webanteile Pydantic f\u00fcr die Datenanteile Installation  pip install fastapi --- 100 Sie ben\u00f6tigen au\u00dferdem einen ASGI-Server F\u00fcr die Produktumgebung beispielsweise Uvicorn oder Hypercorn pip install \"uvicorn[standard]\" --- 100 Beispiel Erstellung Erstellen Sie eine Datei main py mit: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Oder verwenden Sie async def Wenn Ihr Code async / await verwendet, benutzen Sie async def: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Anmerkung: Wenn Sie das nicht kennen, schauen Sie sich den Abschnitt In Eile \u00fcber async und await in der Dokumentation an Starten F\u00fchren Sie den Server aus:  uvicorn main:app --reload INFO: Uvicorn running on http://127 0 0 1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "INFO: Application startup complete Was macht der Befehl uvicorn main:app --reload Der Befehl uvicorn main:app bezieht sich auf: main: die Datei main py (das Python-Modul) app: das Objekt, das innerhalb von main py mit der Zeile app = FastAPI() erzeugt wurde --reload: l\u00e4sst den Server nach Code\u00e4nderungen neu starten Tun Sie das nur w\u00e4hrend der Entwicklung Testen \u00d6ffnen Sie Ihren Browser unter http://127 0 0 1:8000/items/5 q=somequery",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "Sie erhalten die JSON-Response: {\"item_id\": 5, \"q\": \"somequery\"} Damit haben Sie bereits eine API erstellt, welche: HTTP-Anfragen auf den Pfaden / und /items/{item_id} entgegennimmt Beide Pfade erhalten GET Operationen (auch bekannt als HTTP Methoden) Der Pfad /items/{item_id} hat einen Pfadparameter item_id, der ein int sein sollte Der Pfad /items/{item_id} hat einen optionalen str Query Parameter q Interaktive API-Dokumentation Gehen Sie nun auf http://127 0 0 1:8000/docs",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "Sie sehen die automatische interaktive API-Dokumentation (bereitgestellt von Swagger UI): Alternative API-Dokumentation Gehen Sie jetzt auf http://127 0 0 1:8000/redoc Sie sehen die alternative automatische Dokumentation (bereitgestellt von ReDoc): Beispiel Aktualisierung \u00c4ndern Sie jetzt die Datei main py, um den Body einer PUT-Anfrage zu empfangen Deklarieren Sie den Body mithilfe von Standard-Python-Typen, dank Pydantic",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "name, \"item_id\": item_id} Der Server sollte automatisch neu geladen werden (weil Sie oben --reload zum Befehl uvicorn hinzugef\u00fcgt haben) Aktualisierung der interaktiven API-Dokumentation Gehen Sie jetzt auf http://127 0 0 1:8000/docs",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "Die interaktive API-Dokumentation wird automatisch aktualisiert, einschlie\u00dflich des neuen Bodys: Klicken Sie auf die Taste Try it out, damit k\u00f6nnen Sie die Parameter ausf\u00fcllen und direkt mit der API interagieren: Klicken Sie dann auf die Taste Execute, die Benutzeroberfl\u00e4che wird mit Ihrer API kommunizieren, sendet die Parameter, holt die Ergebnisse und zeigt sie auf dem Bildschirm an: Aktualisierung der alternativen API-Dokumentation Und nun gehen Sie auf http://127 0 0 1:8000/redoc",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "Die alternative Dokumentation wird ebenfalls den neuen Abfrageparameter und -inhalt widerspiegeln: Zusammenfassung Zusammengefasst deklarieren Sie einmal die Typen von Parametern, Body, etc als Funktionsparameter Das machen Sie mit modernen Standard-Python-Typen Sie m\u00fcssen keine neue Syntax, Methoden oder Klassen einer bestimmten Bibliothek usw lernen Nur Standard-Python+ Zum Beispiel f\u00fcr ein int: item_id: int oder f\u00fcr ein komplexeres Item-Modell: item: Item",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "und mit dieser einen Deklaration erhalten Sie: Editor-Unterst\u00fctzung, einschlie\u00dflich: Code-Vervollst\u00e4ndigung Typpr\u00fcfungen Validierung von Daten: Automatische und eindeutige Fehler, wenn die Daten ung\u00fcltig sind Validierung auch f\u00fcr tief verschachtelte JSON-Objekte Konvertierung von Eingabedaten: Aus dem Netzwerk kommend, zu Python-Daten und -Typen Lesen von: JSON Pfad-Parametern Abfrage-Parametern Cookies Header-Feldern Formularen Dateien",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "Konvertierung von Ausgabedaten: Konvertierung von Python-Daten und -Typen zu Netzwerkdaten (als JSON): Konvertieren von Python-Typen (str, int, float, bool, list, usw ) Datetime-Objekte UUID-Objekte Datenbankmodelle und viele mehr Automatische interaktive API-Dokumentation, einschlie\u00dflich 2 alternativer Benutzeroberfl\u00e4chen: Swagger UI ReDoc Um auf das vorherige Codebeispiel zur\u00fcckzukommen, FastAPI wird: \u00dcberpr\u00fcfen, dass es eine item_id im Pfad f\u00fcr GET- und PUT-Anfragen gibt",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "\u00dcberpr\u00fcfen, ob die item_id vom Typ int f\u00fcr GET- und PUT-Anfragen ist Falls nicht, wird dem Client ein n\u00fctzlicher, eindeutiger Fehler angezeigt Pr\u00fcfen, ob es einen optionalen Abfrageparameter namens q (wie in http://127 0 0 1:8000/items/foo q=somequery) f\u00fcr GET-Anfragen gibt Da der q-Parameter mit = None deklariert ist, ist er optional Ohne das None w\u00e4re er erforderlich (wie der Body im Fall von PUT)",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        },
        {
          "content": "Bei PUT-Anfragen an /items/{item_id} den Body als JSON lesen: Pr\u00fcfen, ob er ein erforderliches Attribut name hat, das ein str sein muss Pr\u00fcfen, ob er ein erforderliches Attribut price hat, das ein float sein muss Pr\u00fcfen, ob er ein optionales Attribut is_offer hat, das ein bool sein muss, falls vorhanden All dies w\u00fcrde auch f\u00fcr tief verschachtelte JSON-Objekte funktionieren Automatisch von und nach JSON konvertieren",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_22"
        },
        {
          "content": "Alles mit OpenAPI dokumentieren, welches verwendet werden kann von: Interaktiven Dokumentationssystemen Automatisch Client-Code generierenden Systemen f\u00fcr viele Sprachen Zwei interaktive Dokumentation-Webschnittstellen direkt zur Verf\u00fcgung stellen Wir haben nur an der Oberfl\u00e4che gekratzt, aber Sie bekommen schon eine Vorstellung davon, wie das Ganze funktioniert Versuchen Sie, diese Zeile zu \u00e4ndern: return {\"item_name\": item name, \"item_id\": item_id} von: \"item_name\": item name zu:",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_23"
        },
        {
          "content": "\"item_price\": item price und sehen Sie, wie Ihr Editor die Attribute automatisch ausf\u00fcllt und ihre Typen kennt: F\u00fcr ein vollst\u00e4ndigeres Beispiel, mit weiteren Funktionen, siehe das Tutorial - Benutzerhandbuch Spoiler-Alarm: Das Tutorial - Benutzerhandbuch enth\u00e4lt: Deklaration von Parametern von anderen verschiedenen Stellen wie: Header-Felder, Cookies, Formularfelder und Dateien Wie man Validierungseinschr\u00e4nkungen wie maximum_length oder regex setzt",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_24"
        },
        {
          "content": "Ein sehr leistungsf\u00e4higes und einfach zu bedienendes System f\u00fcr Dependency Injection Sicherheit und Authentifizierung, einschlie\u00dflich Unterst\u00fctzung f\u00fcr OAuth2 mit JWT-Tokens und HTTP-Basic-Authentifizierung Fortgeschrittenere (aber ebenso einfache) Techniken zur Deklaration tief verschachtelter JSON-Modelle (dank Pydantic) GraphQL Integration mit Strawberry und anderen Bibliotheken",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_25"
        },
        {
          "content": "Viele zus\u00e4tzliche Funktionen (dank Starlette) wie: WebSockets extrem einfache Tests auf Basis von httpx und pytest CORS Cookie Sessions und mehr Performanz Unabh\u00e4ngige TechEmpower-Benchmarks zeigen FastAPI-Anwendungen, die unter Uvicorn laufen, als eines der schnellsten verf\u00fcgbaren Python-Frameworks, nur noch hinter Starlette und Uvicorn selbst (intern von FastAPI verwendet) Um mehr dar\u00fcber zu erfahren, siehe den Abschnitt Benchmarks",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_26"
        },
        {
          "content": "Optionale Abh\u00e4ngigkeiten Wird von Pydantic verwendet: email-validator - f\u00fcr E-Mail-Validierung pydantic-settings - f\u00fcr die Verwaltung von Einstellungen pydantic-extra-types - f\u00fcr zus\u00e4tzliche Typen, mit Pydantic zu verwenden Wird von Starlette verwendet: httpx - erforderlich, wenn Sie den TestClient verwenden m\u00f6chten jinja2 - erforderlich, wenn Sie die Standardkonfiguration f\u00fcr Templates verwenden m\u00f6chten python-multipart - erforderlich, wenn Sie Formulare mittels request form() parsen m\u00f6chten",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_27"
        },
        {
          "content": "itsdangerous - erforderlich f\u00fcr SessionMiddleware Unterst\u00fctzung pyyaml - erforderlich f\u00fcr Starlette's SchemaGenerator Unterst\u00fctzung (Sie brauchen das wahrscheinlich nicht mit FastAPI) ujson - erforderlich, wenn Sie UJSONResponse verwenden m\u00f6chten Wird von FastAPI / Starlette verwendet: uvicorn - f\u00fcr den Server, der Ihre Anwendung l\u00e4dt und serviert orjson - erforderlich, wenn Sie ORJSONResponse verwenden m\u00f6chten Sie k\u00f6nnen diese alle mit pip install \"fastapi[all]\" installieren",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_28"
        },
        {
          "content": "Lizenz Dieses Projekt ist unter den Bedingungen der MIT-Lizenz lizenziert Zur\u00fcck zum Seitenanfang",
          "url": "https://fastapi.tiangolo.com/de/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_29"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/es/#fastapi",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI Tabla de contenidos Sponsors Opiniones Typer, el FastAPI de las CLIs Requisitos Instalaci\u00f3n Ejemplo Cr\u00e9alo C\u00f3rrelo Rev\u00edsalo Documentaci\u00f3n interactiva de la API Documentaci\u00f3n de API Alternativa Actualizaci\u00f3n del Ejemplo Actualizaci\u00f3n de la Documentaci\u00f3n Interactiva de la API Actualizaci\u00f3n de la Documentaci\u00f3n Alternativa de la API Resumen Rendimiento Dependencias Dependencias standard Sin Dependencias standard Dependencias Opcionales Adicionales Licencia Funcionalidades Aprende Aprende Introducci\u00f3n a Tipos en Python Concurrencia y async / await Variables de Entorno Entornos Virtuales Tutorial - Gu\u00eda del Usuario Tutorial - Gu\u00eda del Usuario Primeros Pasos Par\u00e1metros de Path Par\u00e1metros de Query Request Body Par\u00e1metros de Query y Validaciones de String Par\u00e1metros de Path y Validaciones Num\u00e9ricas Modelos de Par\u00e1metros Query Cuerpo - M\u00faltiples Par\u00e1metros Body - Campos Cuerpo - Modelos Anidados Declarar Ejemplos de Request Tipos de Datos Extra Par\u00e1metros de Cookie Par\u00e1metros de Header Modelos de Cookies Modelos de Par\u00e1metros de Header Modelo de Response - Tipo de Retorno Modelos Extra C\u00f3digo de Estado del Response Form Data Modelos de Formulario Archivos de Request Request Forms and Files Manejo de Errores Configuraci\u00f3n de Path Operation JSON Compatible Encoder Cuerpo - Actualizaciones Dependencias Dependencias Clases como dependencias Sub-dependencias Dependencias en decoradores de path operation Dependencias Globales Dependencias con yield Seguridad Seguridad Seguridad - Primeros pasos Obtener Usuario Actual Simple OAuth2 con Password y Bearer OAuth2 con Password (y hashing), Bearer con tokens JWT Middleware CORS (Cross-Origin Resource Sharing) Bases de Datos SQL (Relacionales) Aplicaciones m\u00e1s grandes - M\u00faltiples archivos Tareas en Segundo Plano Metadata y URLs de Docs Archivos Est\u00e1ticos Testing Depuraci\u00f3n Gu\u00eda avanzada del usuario Gu\u00eda avanzada del usuario Configuraci\u00f3n Avanzada de Path Operation C\u00f3digos de Estado Adicionales Devolver una Response Directamente Response Personalizado - HTML, Stream, Archivo, otros Responses Adicionales en OpenAPI Cookies de Response Response Headers Response - Cambiar C\u00f3digo de Estado Dependencias Avanzadas Seguridad Avanzada Seguridad Avanzada Scopes de OAuth2 HTTP Basic Auth Usar el Request Directamente Usando Dataclasses Middleware Avanzado Sub Aplicaciones - Mounts Detr\u00e1s de un Proxy Plantillas WebSockets Eventos de Lifespan Probando WebSockets Testing Events: startup - shutdown Probando Dependencias con Overrides Tests As\u00edncronos Configuraciones y Variables de Entorno OpenAPI Callbacks Webhooks de OpenAPI Incluyendo WSGI - Flask, Django, otros Genera Clientes FastAPI CLI Despliegue Despliegue Sobre las versiones de FastAPI Sobre HTTPS Ejecutar un Servidor Manualmente Conceptos de Implementaci\u00f3n Despliega FastAPI en Proveedores de Nube Servidores Workers - Uvicorn con Workers FastAPI en Contenedores - Docker How To - Recetas How To - Recetas General - C\u00f3mo Hacer - Recetas GraphQL Clase personalizada de Request y APIRoute OpenAPI Condicional Extender OpenAPI Separaci\u00f3n de Esquemas OpenAPI para Entrada y Salida o No Recursos Est\u00e1ticos Personalizados para la Docs UI (Self-Hosting) Configurar Swagger UI Probando una Base de Datos Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Recursos Recursos Ayuda a FastAPI - Consigue Ayuda Development - Contributing Plantilla Full Stack FastAPI External Links and Articles FastAPI and friends newsletter Repository Management Tasks Acerca de Acerca de Alternativas, Inspiraci\u00f3n y Comparaciones Historia, Dise\u00f1o y Futuro Benchmarks Repository Management Release Notes Tabla de contenidos Sponsors Opiniones Typer, el FastAPI de las CLIs Requisitos Instalaci\u00f3n Ejemplo Cr\u00e9alo C\u00f3rrelo Rev\u00edsalo Documentaci\u00f3n interactiva de la API Documentaci\u00f3n de API Alternativa Actualizaci\u00f3n del Ejemplo Actualizaci\u00f3n de la Documentaci\u00f3n Interactiva de la API Actualizaci\u00f3n de la Documentaci\u00f3n Alternativa de la API Resumen Rendimiento Dependencias Dependencias standard Sin Dependencias standard Dependencias Opcionales Adicionales Licencia FastAPI FastAPI framework, alto rendimiento, f\u00e1cil de aprender, r\u00e1pido de programar, listo para producci\u00f3n Documentaci\u00f3n: https://fastapi.tiangolo.com C\u00f3digo Fuente: https://github.com/fastapi/fastapi FastAPI es un framework web moderno, r\u00e1pido (de alto rendimiento), para construir APIs con Python basado en las anotaciones de tipos est\u00e1ndar de Python. Las caracter\u00edsticas clave son: R\u00e1pido: Muy alto rendimiento, a la par con NodeJS y Go (gracias a Starlette y Pydantic). Uno de los frameworks Python m\u00e1s r\u00e1pidos disponibles. R\u00e1pido de programar: Aumenta la velocidad para desarrollar funcionalidades en aproximadamente un 200 a 300. * Menos bugs: Reduce en aproximadamente un 40 los errores inducidos por humanos (desarrolladores). * Intuitivo: Gran soporte para editores. Autocompletado en todas partes. Menos tiempo depurando. F\u00e1cil: Dise\u00f1ado para ser f\u00e1cil de usar y aprender. Menos tiempo leyendo documentaci\u00f3n. Corto: Minimiza la duplicaci\u00f3n de c\u00f3digo. M\u00faltiples funcionalidades desde cada declaraci\u00f3n de par\u00e1metro. Menos bugs. Robusto: Obt\u00e9n c\u00f3digo listo para producci\u00f3n. Con documentaci\u00f3n interactiva autom\u00e1tica. Basado en est\u00e1ndares: Basado (y completamente compatible) con los est\u00e1ndares abiertos para APIs: OpenAPI (anteriormente conocido como Swagger) y JSON Schema. * estimaci\u00f3n basada en pruebas con un equipo de desarrollo interno, construyendo aplicaciones de producci\u00f3n. Sponsors Otros sponsors Opiniones \"[...] Estoy usando FastAPI un mont\u00f3n estos d\u00edas. [...] De hecho, estoy planeando usarlo para todos los servicios de ML de mi equipo en Microsoft. Algunos de ellos se est\u00e1n integrando en el n\u00facleo del producto Windows y algunos productos de Office.\" Kabir Khan - Microsoft (ref) \"Adoptamos el paquete FastAPI para crear un servidor REST que pueda ser consultado para obtener predicciones. [para Ludwig]\" Piero Molino, Yaroslav Dudin, y Sai Sumanth Miryala - Uber (ref) \"Netflix se complace en anunciar el lanzamiento de c\u00f3digo abierto de nuestro framework de orquestaci\u00f3n de gesti\u00f3n de crisis: Dispatch! [construido con FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Estoy s\u00faper emocionado con FastAPI. Es tan divertido!\" Brian Okken - host del podcast Python Bytes (ref) \"Honestamente, lo que has construido parece s\u00faper s\u00f3lido y pulido. En muchos aspectos, es lo que quer\u00eda que Hug fuera; es realmente inspirador ver a alguien construir eso.\" Timothy Crosley - creador de Hug (ref) \"Si est\u00e1s buscando aprender un framework moderno para construir APIs REST, \u00e9chale un vistazo a FastAPI [...] Es r\u00e1pido, f\u00e1cil de usar y f\u00e1cil de aprender [...]\" \"Nos hemos cambiado a FastAPI para nuestras APIs [...] Creo que te gustar\u00e1 [...]\" Ines Montani - Matthew Honnibal - fundadores de Explosion AI - creadores de spaCy (ref) - (ref) \"Si alguien est\u00e1 buscando construir una API de Python para producci\u00f3n, altamente recomendar\u00eda FastAPI. Est\u00e1 hermosamente dise\u00f1ado, es simple de usar y altamente escalable, se ha convertido en un componente clave en nuestra estrategia de desarrollo API primero y est\u00e1 impulsando muchas automatizaciones y servicios como nuestro Ingeniero Virtual TAC.\" Deon Pillsbury - Cisco (ref) Typer, el FastAPI de las CLIs Si est\u00e1s construyendo una aplicaci\u00f3n de CLI para ser usada en el terminal en lugar de una API web, revisa Typer. Typer es el hermano peque\u00f1o de FastAPI. Y est\u00e1 destinado a ser el FastAPI de las CLIs.   Requisitos FastAPI se apoya en hombros de gigantes: Starlette para las partes web. Pydantic para las partes de datos. Instalaci\u00f3n Crea y activa un entorno virtual y luego instala FastAPI:  pip install \"fastapi[standard]\" --- 100 Nota: Aseg\u00farate de poner \"fastapi[standard]\" entre comillas para asegurar que funcione en todas las terminales. Ejemplo Cr\u00e9alo Crea un archivo main.py con: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} O usa async def... Si tu c\u00f3digo usa async / await, usa async def: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Nota: Si no lo sabes, revisa la secci\u00f3n \"Con prisa?\" sobre async y await en la documentaci\u00f3n. C\u00f3rrelo Corre el servidor con:  fastapi dev main.py  FastAPI CLI - Development mode     Serving at: http://127.0.0.1:8000     API docs: http://127.0.0.1:8000/docs     Running in development mode, for production use:     fastapi run     INFO: Will watch for changes in these directories: ['/home/user/code/awesomeapp'] INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [2248755] using WatchFiles INFO: Started server process [2248757] INFO: Waiting for application startup. INFO: Application startup complete. Acerca del comando fastapi dev main.py... El comando fastapi dev lee tu archivo main.py, detecta la app FastAPI en \u00e9l y arranca un servidor usando Uvicorn. Por defecto, fastapi dev comenzar\u00e1 con auto-recarga habilitada para el desarrollo local. Puedes leer m\u00e1s sobre esto en la documentaci\u00f3n del CLI de FastAPI. Rev\u00edsalo Abre tu navegador en http://127.0.0.1:8000/items/5?q=somequery. Ver\u00e1s el response JSON como: {\"item_id\": 5, \"q\": \"somequery\"} Ya creaste una API que: Recibe requests HTTP en los paths / y /items/{item_id}. Ambos paths toman operaciones GET (tambi\u00e9n conocidas como m\u00e9todos HTTP). El path /items/{item_id} tiene un par\u00e1metro de path item_id que debe ser un int. El path /items/{item_id} tiene un par\u00e1metro de query q opcional que es un str. Documentaci\u00f3n interactiva de la API Ahora ve a http://127.0.0.1:8000/docs. Ver\u00e1s la documentaci\u00f3n interactiva autom\u00e1tica de la API (proporcionada por Swagger UI): Documentaci\u00f3n de API Alternativa Y ahora, ve a http://127.0.0.1:8000/redoc. Ver\u00e1s la documentaci\u00f3n alternativa autom\u00e1tica (proporcionada por ReDoc): Actualizaci\u00f3n del Ejemplo Ahora modifica el archivo main.py para recibir un body desde un request PUT. Declara el body usando tipos est\u00e1ndar de Python, gracias a Pydantic. from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} El servidor fastapi dev deber\u00eda recargarse autom\u00e1ticamente. Actualizaci\u00f3n de la Documentaci\u00f3n Interactiva de la API Ahora ve a http://127.0.0.1:8000/docs. La documentaci\u00f3n interactiva de la API se actualizar\u00e1 autom\u00e1ticamente, incluyendo el nuevo body: Haz clic en el bot\u00f3n \"Try it out\", te permite llenar los par\u00e1metros e interactuar directamente con la API: Luego haz clic en el bot\u00f3n \"Execute\", la interfaz de usuario se comunicar\u00e1 con tu API, enviar\u00e1 los par\u00e1metros, obtendr\u00e1 los resultados y los mostrar\u00e1 en la pantalla: Actualizaci\u00f3n de la Documentaci\u00f3n Alternativa de la API Y ahora, ve a http://127.0.0.1:8000/redoc. La documentaci\u00f3n alternativa tambi\u00e9n reflejar\u00e1 el nuevo par\u00e1metro de query y body: Resumen En resumen, declaras una vez los tipos de par\u00e1metros, body, etc. como par\u00e1metros de funci\u00f3n. Lo haces con tipos est\u00e1ndar modernos de Python. No tienes que aprender una nueva sintaxis, los m\u00e9todos o clases de un paquete espec\u00edfico, etc. Solo Python est\u00e1ndar. Por ejemplo, para un int: item_id: int o para un modelo Item m\u00e1s complejo: item: Item ...y con esa \u00fanica declaraci\u00f3n obtienes: Soporte para editores, incluyendo: Autocompletado. Chequeo de tipos. Validaci\u00f3n de datos: Errores autom\u00e1ticos y claros cuando los datos son inv\u00e1lidos. Validaci\u00f3n incluso para objetos JSON profundamente anidados. Conversi\u00f3n de datos de entrada: de la red a los datos y tipos de Python. Leyendo desde: JSON. Par\u00e1metros de path. Par\u00e1metros de query. Cookies. Headers. Forms. Archivos. Conversi\u00f3n de datos de salida: convirtiendo de datos y tipos de Python a datos de red (como JSON): Convertir tipos de Python (str, int, float, bool, list, etc). Objetos datetime. Objetos UUID. Modelos de base de datos. ...y muchos m\u00e1s. Documentaci\u00f3n interactiva autom\u00e1tica de la API, incluyendo 2 interfaces de usuario alternativas: Swagger UI. ReDoc. Volviendo al ejemplo de c\u00f3digo anterior, FastAPI: Validar\u00e1 que haya un item_id en el path para requests GET y PUT. Validar\u00e1 que el item_id sea del tipo int para requests GET y PUT. Si no lo es, el cliente ver\u00e1 un error \u00fatil y claro. Comprobar\u00e1 si hay un par\u00e1metro de query opcional llamado q (como en http://127.0.0.1:8000/items/foo?q=somequery) para requests GET. Como el par\u00e1metro q est\u00e1 declarado con = None, es opcional. Sin el None ser\u00eda requerido (como lo es el body en el caso con PUT). Para requests PUT a /items/{item_id}, leer\u00e1 el body como JSON: Comprobar\u00e1 que tiene un atributo requerido name que debe ser un str. Comprobar\u00e1 que tiene un atributo requerido price que debe ser un float. Comprobar\u00e1 que tiene un atributo opcional is_offer, que debe ser un bool, si est\u00e1 presente. Todo esto tambi\u00e9n funcionar\u00eda para objetos JSON profundamente anidados. Convertir\u00e1 de y a JSON autom\u00e1ticamente. Documentar\u00e1 todo con OpenAPI, que puede ser usado por: Sistemas de documentaci\u00f3n interactiva. Sistemas de generaci\u00f3n autom\u00e1tica de c\u00f3digo cliente, para muchos lenguajes. Proporcionar\u00e1 2 interfaces web de documentaci\u00f3n interactiva directamente. Solo tocamos los conceptos b\u00e1sicos, pero ya te haces una idea de c\u00f3mo funciona todo. Intenta cambiar la l\u00ednea con: return {\"item_name\": item.name, \"item_id\": item_id} ...desde: ... \"item_name\": item.name ... ...a: ... \"item_price\": item.price ... ...y observa c\u00f3mo tu editor autocompleta los atributos y conoce sus tipos: Para un ejemplo m\u00e1s completo incluyendo m\u00e1s funcionalidades, ve al Tutorial - Gu\u00eda del Usuario. Alerta de spoilers: el tutorial - gu\u00eda del usuario incluye: Declaraci\u00f3n de par\u00e1metros desde otros lugares diferentes como: headers, cookies, campos de formulario y archivos. C\u00f3mo establecer restricciones de validaci\u00f3n como maximum_length o regex. Un sistema de Inyecci\u00f3n de Dependencias muy poderoso y f\u00e1cil de usar. Seguridad y autenticaci\u00f3n, incluyendo soporte para OAuth2 con tokens JWT y autenticaci\u00f3n HTTP Basic. T\u00e9cnicas m\u00e1s avanzadas (pero igualmente f\u00e1ciles) para declarar modelos JSON profundamente anidados (gracias a Pydantic). Integraci\u00f3n con GraphQL usando Strawberry y otros paquetes. Muchas funcionalidades extra (gracias a Starlette) como: WebSockets pruebas extremadamente f\u00e1ciles basadas en HTTPX y pytest CORS Sesiones de Cookies ...y m\u00e1s. Rendimiento Benchmarks independientes de TechEmpower muestran aplicaciones FastAPI ejecut\u00e1ndose bajo Uvicorn como uno de los frameworks Python m\u00e1s r\u00e1pidos disponibles, solo por debajo de Starlette y Uvicorn (usados internamente por FastAPI). (*) Para entender m\u00e1s sobre esto, ve la secci\u00f3n Benchmarks. Dependencias FastAPI depende de Pydantic y Starlette. Dependencias standard Cuando instalas FastAPI con pip install \"fastapi[standard]\" viene con el grupo standard de dependencias opcionales: Usadas por Pydantic: email-validator - para validaci\u00f3n de correos electr\u00f3nicos. Usadas por Starlette: httpx - Requerido si deseas usar el TestClient. jinja2 - Requerido si deseas usar la configuraci\u00f3n de plantilla predeterminada. python-multipart - Requerido si deseas soportar \"parsing\" de forms, con request.form(). Usadas por FastAPI / Starlette: uvicorn - para el servidor que carga y sirve tu aplicaci\u00f3n. Esto incluye uvicorn[standard], que incluye algunas dependencias (por ejemplo, uvloop) necesarias para servir con alto rendimiento. fastapi-cli - para proporcionar el comando fastapi. Sin Dependencias standard Si no deseas incluir las dependencias opcionales standard, puedes instalar con pip install fastapi en lugar de pip install \"fastapi[standard]\". Dependencias Opcionales Adicionales Existen algunas dependencias adicionales que podr\u00edas querer instalar. Dependencias opcionales adicionales de Pydantic: pydantic-settings - para la gesti\u00f3n de configuraciones. pydantic-extra-types - para tipos extra para ser usados con Pydantic. Dependencias opcionales adicionales de FastAPI: orjson - Requerido si deseas usar ORJSONResponse. ujson - Requerido si deseas usar UJSONResponse. Licencia Este proyecto tiene licencia bajo los t\u00e9rminos de la licencia MIT. Volver al principio",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install \"fastapi[standard]\"\n\n---> 100%",
        "$ pip install \"fastapi[standard]\"\n\n---> 100%",
        "\"fastapi[standard]\"",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "$ fastapi dev main.py\n\n \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 FastAPI CLI - Development mode \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n \u2502                                                     \u2502\n \u2502  Serving at: http://127.0.0.1:8000                  \u2502\n \u2502                                                     \u2502\n \u2502  API docs: http://127.0.0.1:8000/docs               \u2502\n \u2502                                                     \u2502\n \u2502  Running in development mode, for production use:   \u2502\n \u2502                                                     \u2502\n \u2502  fastapi run                                        \u2502\n \u2502                                                     \u2502\n \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ fastapi dev main.py\n\n \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 FastAPI CLI - Development mode \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\n \u2502                                                     \u2502\n \u2502  Serving at: http://127.0.0.1:8000                  \u2502\n \u2502                                                     \u2502\n \u2502  API docs: http://127.0.0.1:8000/docs               \u2502\n \u2502                                                     \u2502\n \u2502  Running in development mode, for production use:   \u2502\n \u2502                                                     \u2502\n \u2502  fastapi run                                        \u2502\n \u2502                                                     \u2502\n \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\n\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "fastapi dev main.py",
        "fastapi dev",
        "fastapi dev",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "fastapi dev",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "pip install \"fastapi[standard]\"",
        "email-validator",
        "python-multipart",
        "request.form()",
        "uvicorn[standard]",
        "fastapi-cli",
        "pip install fastapi",
        "pip install \"fastapi[standard]\"",
        "pydantic-settings",
        "pydantic-extra-types",
        "ORJSONResponse",
        "UJSONResponse"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI Tabla de contenidos Sponsors Opiniones Typer, el FastAPI de las CLIs Requisitos Instalaci\u00f3n Ejemplo Cr\u00e9alo C\u00f3rrelo Rev\u00edsalo Documentaci\u00f3n interactiva de la API Documentaci\u00f3n de API Alternativa Actualizaci\u00f3n del Ejemplo Actualizaci\u00f3n de la Documentaci\u00f3n Interactiva de la API Actualizaci\u00f3n de la Documentaci\u00f3n Alternativa de la API Resumen Rendimiento Dependencias Dependencias standard Sin Dependencias standard Dependencias Opcionales Adicionales Licencia Funcionalidades Aprende Aprende Introducci\u00f3n a Tipos en Python Concurrencia y async / await Variables de Entorno Entornos Virtuales Tutorial - Gu\u00eda del Usuario Tutorial - Gu\u00eda del Usuario Primeros Pasos Par\u00e1metros de Path Par\u00e1metros de Query Request Body Par\u00e1metros de Query y Validaciones de String Par\u00e1metros de Path y Validaciones Num\u00e9ricas Modelos de Par\u00e1metros Query Cuerpo - M\u00faltiples Par\u00e1metros Body - Campos Cuerpo - Modelos Anidados Declarar Ejemplos de Request Tipos de Datos Extra Par\u00e1metros de Cookie Par\u00e1metros de Header Modelos de Cookies Modelos de Par\u00e1metros de Header Modelo de Response - Tipo de Retorno Modelos Extra C\u00f3digo de Estado del Response Form Data Modelos de Formulario Archivos de Request Request Forms and Files Manejo de Errores Configuraci\u00f3n de Path Operation JSON Compatible Encoder Cuerpo - Actualizaciones Dependencias Dependencias Clases como dependencias Sub-dependencias Dependencias en decoradores de path operation Dependencias Globales Dependencias con yield Seguridad Seguridad Seguridad - Primeros pasos Obtener Usuario Actual Simple OAuth2 con Password y Bearer OAuth2 con Password (y hashing), Bearer con tokens JWT Middleware CORS (Cross-Origin Resource Sharing) Bases de Datos SQL (Relacionales) Aplicaciones m\u00e1s grandes - M\u00faltiples archivos Tareas en Segundo Plano Metadata y URLs de Docs Archivos Est\u00e1ticos Testing Depuraci\u00f3n Gu\u00eda avanzada del usuario Gu\u00eda avanzada del usuario Configuraci\u00f3n Avanzada de Path Operation C\u00f3digos de Estado Adicionales Devolver una Response Directamente Response Personalizado - HTML, Stream, Archivo, otros Responses Adicionales en OpenAPI Cookies de Response Response Headers Response - Cambiar C\u00f3digo de Estado Dependencias Avanzadas Seguridad Avanzada Seguridad Avanzada Scopes de OAuth2 HTTP Basic Auth Usar el Request Directamente Usando Dataclasses Middleware Avanzado Sub Aplicaciones - Mounts Detr\u00e1s de un Proxy Plantillas WebSockets Eventos de Lifespan Probando WebSockets Testing Events: startup - shutdown Probando Dependencias con Overrides Tests As\u00edncronos Configuraciones y Variables de Entorno OpenAPI Callbacks Webhooks de OpenAPI Incluyendo WSGI - Flask, Django, otros Genera Clientes FastAPI CLI Despliegue Despliegue Sobre las versiones de FastAPI Sobre HTTPS Ejecutar un Servidor Manualmente Conceptos de Implementaci\u00f3n Despliega FastAPI en Proveedores de Nube Servidores Workers - Uvicorn con Workers FastAPI en Contenedores - Docker How To - Recetas How To - Recetas General - C\u00f3mo Hacer - Recetas GraphQL Clase personalizada de Request y APIRoute OpenAPI Condicional Extender OpenAPI Separaci\u00f3n de Esquemas OpenAPI para Entrada y Salida o No Recursos Est\u00e1ticos Personalizados para la Docs UI (Self-Hosting) Configurar Swagger UI Probando una Base de Datos Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Recursos Recursos Ayuda a FastAPI - Consigue Ayuda Development - Contributing Plantilla Full Stack FastAPI External Links and Articles FastAPI and friends newsletter Repository Management Tasks Acerca de Acerca de Alternativas, Inspiraci\u00f3n y Comparaciones Historia, Dise\u00f1o y Futuro Benchmarks Repository Management Release Notes Tabla de contenidos Sponsors Opiniones Typer, el FastAPI de las CLIs Requisitos Instalaci\u00f3n Ejemplo Cr\u00e9alo C\u00f3rrelo Rev\u00edsalo Documentaci\u00f3n interactiva de la API Documentaci\u00f3n de API Alternativa Actualizaci\u00f3n del Ejemplo Actualizaci\u00f3n de la Documentaci\u00f3n Interactiva de la API Actualizaci\u00f3n de la Documentaci\u00f3n Alternativa de la API Resumen Rendimiento Dependencias Dependencias standard Sin Dependencias standard Dependencias Opcionales Adicionales Licencia FastAPI FastAPI framework, alto rendimiento, f\u00e1cil de aprender, r\u00e1pido de programar, listo para producci\u00f3n Documentaci\u00f3n: https://fastapi",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com C\u00f3digo Fuente: https://github com/fastapi/fastapi FastAPI es un framework web moderno, r\u00e1pido (de alto rendimiento), para construir APIs con Python basado en las anotaciones de tipos est\u00e1ndar de Python Las caracter\u00edsticas clave son: R\u00e1pido: Muy alto rendimiento, a la par con NodeJS y Go (gracias a Starlette y Pydantic) Uno de los frameworks Python m\u00e1s r\u00e1pidos disponibles R\u00e1pido de programar: Aumenta la velocidad para desarrollar funcionalidades en aproximadamente un 200 a 300",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "* Menos bugs: Reduce en aproximadamente un 40 los errores inducidos por humanos (desarrolladores) * Intuitivo: Gran soporte para editores Autocompletado en todas partes Menos tiempo depurando F\u00e1cil: Dise\u00f1ado para ser f\u00e1cil de usar y aprender Menos tiempo leyendo documentaci\u00f3n Corto: Minimiza la duplicaci\u00f3n de c\u00f3digo M\u00faltiples funcionalidades desde cada declaraci\u00f3n de par\u00e1metro Menos bugs Robusto: Obt\u00e9n c\u00f3digo listo para producci\u00f3n Con documentaci\u00f3n interactiva autom\u00e1tica",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "Basado en est\u00e1ndares: Basado (y completamente compatible) con los est\u00e1ndares abiertos para APIs: OpenAPI (anteriormente conocido como Swagger) y JSON Schema * estimaci\u00f3n basada en pruebas con un equipo de desarrollo interno, construyendo aplicaciones de producci\u00f3n Sponsors Otros sponsors Opiniones \"[ ] Estoy usando FastAPI un mont\u00f3n estos d\u00edas [ ] De hecho, estoy planeando usarlo para todos los servicios de ML de mi equipo en Microsoft",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "Algunos de ellos se est\u00e1n integrando en el n\u00facleo del producto Windows y algunos productos de Office \" Kabir Khan - Microsoft (ref) \"Adoptamos el paquete FastAPI para crear un servidor REST que pueda ser consultado para obtener predicciones [para Ludwig]\" Piero Molino, Yaroslav Dudin, y Sai Sumanth Miryala - Uber (ref) \"Netflix se complace en anunciar el lanzamiento de c\u00f3digo abierto de nuestro framework de orquestaci\u00f3n de gesti\u00f3n de crisis: Dispatch",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "[construido con FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Estoy s\u00faper emocionado con FastAPI Es tan divertido \" Brian Okken - host del podcast Python Bytes (ref) \"Honestamente, lo que has construido parece s\u00faper s\u00f3lido y pulido En muchos aspectos, es lo que quer\u00eda que Hug fuera; es realmente inspirador ver a alguien construir eso",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "\" Timothy Crosley - creador de Hug (ref) \"Si est\u00e1s buscando aprender un framework moderno para construir APIs REST, \u00e9chale un vistazo a FastAPI [ ] Es r\u00e1pido, f\u00e1cil de usar y f\u00e1cil de aprender [ ]\" \"Nos hemos cambiado a FastAPI para nuestras APIs [ ] Creo que te gustar\u00e1 [ ]\" Ines Montani - Matthew Honnibal - fundadores de Explosion AI - creadores de spaCy (ref) - (ref) \"Si alguien est\u00e1 buscando construir una API de Python para producci\u00f3n, altamente recomendar\u00eda FastAPI",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "Est\u00e1 hermosamente dise\u00f1ado, es simple de usar y altamente escalable, se ha convertido en un componente clave en nuestra estrategia de desarrollo API primero y est\u00e1 impulsando muchas automatizaciones y servicios como nuestro Ingeniero Virtual TAC \" Deon Pillsbury - Cisco (ref) Typer, el FastAPI de las CLIs Si est\u00e1s construyendo una aplicaci\u00f3n de CLI para ser usada en el terminal en lugar de una API web, revisa Typer Typer es el hermano peque\u00f1o de FastAPI",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "Y est\u00e1 destinado a ser el FastAPI de las CLIs Requisitos FastAPI se apoya en hombros de gigantes: Starlette para las partes web Pydantic para las partes de datos Instalaci\u00f3n Crea y activa un entorno virtual y luego instala FastAPI:  pip install \"fastapi[standard]\" --- 100 Nota: Aseg\u00farate de poner \"fastapi[standard]\" entre comillas para asegurar que funcione en todas las terminales Ejemplo Cr\u00e9alo Crea un archivo main py con: from typing import Union from fastapi import FastAPI app = FastAPI() app",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "get(\"/\") def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} O usa async def Si tu c\u00f3digo usa async / await, usa async def: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Nota: Si no lo sabes, revisa la secci\u00f3n \"Con prisa \" sobre async y await en la documentaci\u00f3n C\u00f3rrelo Corre el servidor con:  fastapi dev main py  FastAPI CLI - Development mode     Serving at: http://127 0 0 1:8000     API docs: http://127 0 0",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "1:8000/docs     Running in development mode, for production use:     fastapi run     INFO: Will watch for changes in these directories: ['/home/user/code/awesomeapp'] INFO: Uvicorn running on http://127 0 0 1:8000 (Press CTRL+C to quit) INFO: Started reloader process [2248755] using WatchFiles INFO: Started server process [2248757] INFO: Waiting for application startup INFO: Application startup complete Acerca del comando fastapi dev main py El comando fastapi dev lee tu archivo main",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "py, detecta la app FastAPI en \u00e9l y arranca un servidor usando Uvicorn Por defecto, fastapi dev comenzar\u00e1 con auto-recarga habilitada para el desarrollo local Puedes leer m\u00e1s sobre esto en la documentaci\u00f3n del CLI de FastAPI Rev\u00edsalo Abre tu navegador en http://127 0 0 1:8000/items/5 q=somequery Ver\u00e1s el response JSON como: {\"item_id\": 5, \"q\": \"somequery\"} Ya creaste una API que: Recibe requests HTTP en los paths / y /items/{item_id}",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "Ambos paths toman operaciones GET (tambi\u00e9n conocidas como m\u00e9todos HTTP) El path /items/{item_id} tiene un par\u00e1metro de path item_id que debe ser un int El path /items/{item_id} tiene un par\u00e1metro de query q opcional que es un str Documentaci\u00f3n interactiva de la API Ahora ve a http://127 0 0 1:8000/docs Ver\u00e1s la documentaci\u00f3n interactiva autom\u00e1tica de la API (proporcionada por Swagger UI): Documentaci\u00f3n de API Alternativa Y ahora, ve a http://127 0 0 1:8000/redoc",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "Ver\u00e1s la documentaci\u00f3n alternativa autom\u00e1tica (proporcionada por ReDoc): Actualizaci\u00f3n del Ejemplo Ahora modifica el archivo main py para recibir un body desde un request PUT Declara el body usando tipos est\u00e1ndar de Python, gracias a Pydantic from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item name, \"item_id\": item_id} El servidor fastapi dev deber\u00eda recargarse autom\u00e1ticamente Actualizaci\u00f3n de la Documentaci\u00f3n Interactiva de la API Ahora ve a http://127 0 0 1:8000/docs",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "La documentaci\u00f3n interactiva de la API se actualizar\u00e1 autom\u00e1ticamente, incluyendo el nuevo body: Haz clic en el bot\u00f3n \"Try it out\", te permite llenar los par\u00e1metros e interactuar directamente con la API: Luego haz clic en el bot\u00f3n \"Execute\", la interfaz de usuario se comunicar\u00e1 con tu API, enviar\u00e1 los par\u00e1metros, obtendr\u00e1 los resultados y los mostrar\u00e1 en la pantalla: Actualizaci\u00f3n de la Documentaci\u00f3n Alternativa de la API Y ahora, ve a http://127 0 0 1:8000/redoc",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "La documentaci\u00f3n alternativa tambi\u00e9n reflejar\u00e1 el nuevo par\u00e1metro de query y body: Resumen En resumen, declaras una vez los tipos de par\u00e1metros, body, etc como par\u00e1metros de funci\u00f3n Lo haces con tipos est\u00e1ndar modernos de Python No tienes que aprender una nueva sintaxis, los m\u00e9todos o clases de un paquete espec\u00edfico, etc Solo Python est\u00e1ndar Por ejemplo, para un int: item_id: int o para un modelo Item m\u00e1s complejo: item: Item",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "y con esa \u00fanica declaraci\u00f3n obtienes: Soporte para editores, incluyendo: Autocompletado Chequeo de tipos Validaci\u00f3n de datos: Errores autom\u00e1ticos y claros cuando los datos son inv\u00e1lidos Validaci\u00f3n incluso para objetos JSON profundamente anidados Conversi\u00f3n de datos de entrada: de la red a los datos y tipos de Python Leyendo desde: JSON Par\u00e1metros de path Par\u00e1metros de query Cookies Headers Forms Archivos",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "Conversi\u00f3n de datos de salida: convirtiendo de datos y tipos de Python a datos de red (como JSON): Convertir tipos de Python (str, int, float, bool, list, etc) Objetos datetime Objetos UUID Modelos de base de datos y muchos m\u00e1s Documentaci\u00f3n interactiva autom\u00e1tica de la API, incluyendo 2 interfaces de usuario alternativas: Swagger UI ReDoc Volviendo al ejemplo de c\u00f3digo anterior, FastAPI: Validar\u00e1 que haya un item_id en el path para requests GET y PUT",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "Validar\u00e1 que el item_id sea del tipo int para requests GET y PUT Si no lo es, el cliente ver\u00e1 un error \u00fatil y claro Comprobar\u00e1 si hay un par\u00e1metro de query opcional llamado q (como en http://127 0 0 1:8000/items/foo q=somequery) para requests GET Como el par\u00e1metro q est\u00e1 declarado con = None, es opcional Sin el None ser\u00eda requerido (como lo es el body en el caso con PUT)",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        },
        {
          "content": "Para requests PUT a /items/{item_id}, leer\u00e1 el body como JSON: Comprobar\u00e1 que tiene un atributo requerido name que debe ser un str Comprobar\u00e1 que tiene un atributo requerido price que debe ser un float Comprobar\u00e1 que tiene un atributo opcional is_offer, que debe ser un bool, si est\u00e1 presente Todo esto tambi\u00e9n funcionar\u00eda para objetos JSON profundamente anidados Convertir\u00e1 de y a JSON autom\u00e1ticamente Documentar\u00e1 todo con OpenAPI, que puede ser usado por: Sistemas de documentaci\u00f3n interactiva",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_22"
        },
        {
          "content": "Sistemas de generaci\u00f3n autom\u00e1tica de c\u00f3digo cliente, para muchos lenguajes Proporcionar\u00e1 2 interfaces web de documentaci\u00f3n interactiva directamente Solo tocamos los conceptos b\u00e1sicos, pero ya te haces una idea de c\u00f3mo funciona todo Intenta cambiar la l\u00ednea con: return {\"item_name\": item name, \"item_id\": item_id} desde: \"item_name\": item name a: \"item_price\": item price",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_23"
        },
        {
          "content": "y observa c\u00f3mo tu editor autocompleta los atributos y conoce sus tipos: Para un ejemplo m\u00e1s completo incluyendo m\u00e1s funcionalidades, ve al Tutorial - Gu\u00eda del Usuario Alerta de spoilers: el tutorial - gu\u00eda del usuario incluye: Declaraci\u00f3n de par\u00e1metros desde otros lugares diferentes como: headers, cookies, campos de formulario y archivos C\u00f3mo establecer restricciones de validaci\u00f3n como maximum_length o regex Un sistema de Inyecci\u00f3n de Dependencias muy poderoso y f\u00e1cil de usar",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_24"
        },
        {
          "content": "Seguridad y autenticaci\u00f3n, incluyendo soporte para OAuth2 con tokens JWT y autenticaci\u00f3n HTTP Basic T\u00e9cnicas m\u00e1s avanzadas (pero igualmente f\u00e1ciles) para declarar modelos JSON profundamente anidados (gracias a Pydantic) Integraci\u00f3n con GraphQL usando Strawberry y otros paquetes Muchas funcionalidades extra (gracias a Starlette) como: WebSockets pruebas extremadamente f\u00e1ciles basadas en HTTPX y pytest CORS Sesiones de Cookies y m\u00e1s",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_25"
        },
        {
          "content": "Rendimiento Benchmarks independientes de TechEmpower muestran aplicaciones FastAPI ejecut\u00e1ndose bajo Uvicorn como uno de los frameworks Python m\u00e1s r\u00e1pidos disponibles, solo por debajo de Starlette y Uvicorn (usados internamente por FastAPI) (*) Para entender m\u00e1s sobre esto, ve la secci\u00f3n Benchmarks Dependencias FastAPI depende de Pydantic y Starlette",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_26"
        },
        {
          "content": "Dependencias standard Cuando instalas FastAPI con pip install \"fastapi[standard]\" viene con el grupo standard de dependencias opcionales: Usadas por Pydantic: email-validator - para validaci\u00f3n de correos electr\u00f3nicos Usadas por Starlette: httpx - Requerido si deseas usar el TestClient jinja2 - Requerido si deseas usar la configuraci\u00f3n de plantilla predeterminada python-multipart - Requerido si deseas soportar \"parsing\" de forms, con request form()",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_27"
        },
        {
          "content": "Usadas por FastAPI / Starlette: uvicorn - para el servidor que carga y sirve tu aplicaci\u00f3n Esto incluye uvicorn[standard], que incluye algunas dependencias (por ejemplo, uvloop) necesarias para servir con alto rendimiento fastapi-cli - para proporcionar el comando fastapi Sin Dependencias standard Si no deseas incluir las dependencias opcionales standard, puedes instalar con pip install fastapi en lugar de pip install \"fastapi[standard]\"",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_28"
        },
        {
          "content": "Dependencias Opcionales Adicionales Existen algunas dependencias adicionales que podr\u00edas querer instalar Dependencias opcionales adicionales de Pydantic: pydantic-settings - para la gesti\u00f3n de configuraciones pydantic-extra-types - para tipos extra para ser usados con Pydantic Dependencias opcionales adicionales de FastAPI: orjson - Requerido si deseas usar ORJSONResponse ujson - Requerido si deseas usar UJSONResponse Licencia Este proyecto tiene licencia bajo los t\u00e9rminos de la licencia MIT",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_29"
        },
        {
          "content": "Volver al principio",
          "url": "https://fastapi.tiangolo.com/es/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_30"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/fa/#fastapi",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI \u0641\u0647\u0631\u0633\u062a \u0645\u0648\u0636\u0648\u0639\u0627\u062a \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc \u0646\u0638\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u062f\u0631 \u0645\u0648\u0631\u062f FastAPI Typer, \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u06cc \u0645\u0639\u0627\u062f\u0644 FastAPI \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0628\u0627 \u0648\u0627\u0633\u0637 \u062e\u0637 \u0641\u0631\u0645\u0627\u0646 \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627 \u0646\u0635\u0628 \u0645\u062b\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u062b\u0627\u0644 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062e\u0644\u0627\u0635\u0647 \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0644\u0627\u06cc\u0633\u0646\u0633 \u0648\u06cc\u0698\u06af\u06cc \u0647\u0627 \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield \u0627\u0645\u0646\u06cc\u062a \u0627\u0645\u0646\u06cc\u062a Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens \u0645\u06cc\u0627\u0646\u0627\u0641\u0632\u0627\u0631 - middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware \u0632\u06cc\u0631 \u0628\u0631\u0646\u0627\u0645\u0647 \u0647\u0627 - \u0627\u062a\u0635\u0627\u0644 Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes \u0641\u0647\u0631\u0633\u062a \u0645\u0648\u0636\u0648\u0639\u0627\u062a \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc \u0646\u0638\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u062f\u0631 \u0645\u0648\u0631\u062f FastAPI Typer, \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u06cc \u0645\u0639\u0627\u062f\u0644 FastAPI \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0628\u0627 \u0648\u0627\u0633\u0637 \u062e\u0637 \u0641\u0631\u0645\u0627\u0646 \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627 \u0646\u0635\u0628 \u0645\u062b\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u062b\u0627\u0644 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062e\u0644\u0627\u0635\u0647 \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0644\u0627\u06cc\u0633\u0646\u0633 FastAPI \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 FastAPI \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0628\u0627\u0644\u0627 \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0622\u0633\u0627\u0646 \u06a9\u062f\u0646\u0648\u06cc\u0633\u06cc \u0633\u0631\u06cc\u0639 \u0622\u0645\u0627\u062f\u0647 \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u0645\u062d\u06cc\u0637 \u067e\u0631\u0648\u062f\u0627\u06a9\u0634\u0646 \u0645\u0633\u062a\u0646\u062f\u0627\u062a: https://fastapi.tiangolo.com \u06a9\u062f \u0645\u0646\u0628\u0639: https://github.com/fastapi/fastapi FastAPI \u06cc\u06a9 \u0648\u0628 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0645\u062f\u0631\u0646 \u0648 \u0633\u0631\u06cc\u0639 (\u0628\u0627 \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0628\u0627\u0644\u0627) \u0628\u0631\u0627\u06cc \u0627\u06cc\u062c\u0627\u062f API\u0647\u0627\u06cc \u0645\u062a\u0646\u0648\u0639 (\u0648\u0628 \u0648\u0628\u0633\u0648\u06a9\u062a \u0648 \u063a\u0628\u0631\u0647) \u0628\u0627 \u0632\u0628\u0627\u0646 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0646\u0633\u062e\u0647 +\u06f3.\u06f6 \u0627\u0633\u062a. \u0627\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0628\u0627 \u0631\u0639\u0627\u06cc\u062a \u06a9\u0627\u0645\u0644 \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u0646\u0648\u0639 \u062f\u0627\u062f\u0647 (Type Hint) \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u0627\u0633\u062a. \u0648\u06cc\u0698\u06af\u06cc\u0647\u0627\u06cc \u06a9\u0644\u06cc\u062f\u06cc \u0627\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0639\u0628\u0627\u0631\u062a\u0646\u062f \u0627\u0632: \u0633\u0631\u0639\u062a: \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0628\u0633\u06cc\u0627\u0631 \u0628\u0627\u0644\u0627 \u0648 \u0642\u0627\u0628\u0644 \u0645\u0642\u0627\u06cc\u0633\u0647 \u0628\u0627 NodeJS \u0648 Go (\u0628\u0627 \u062a\u0634\u06a9\u0631 \u0627\u0632 Starlette \u0648 Pydantic). \u06cc\u06a9\u06cc \u0627\u0632 \u0633\u0631\u06cc\u0639\u062a\u0631\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u0647\u0627\u06cc \u067e\u0627\u06cc\u062a\u0648\u0646\u06cc \u0645\u0648\u062c\u0648\u062f. \u06a9\u062f\u0646\u0648\u06cc\u0633\u06cc \u0633\u0631\u06cc\u0639: \u0627\u0641\u0632\u0627\u06cc\u0634 \u06f2\u06f0\u06f0 \u062a\u0627 \u06f3\u06f0\u06f0 \u062f\u0631\u0635\u062f\u06cc \u0633\u0631\u0639\u062a \u062a\u0648\u0633\u0639\u0647 \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u062c\u062f\u06cc\u062f. * \u0628\u0627\u06af \u06a9\u0645\u062a\u0631: \u06a9\u0627\u0647\u0634 \u06f4\u06f0 \u062f\u0631\u0635\u062f\u06cc \u062e\u0637\u0627\u0647\u0627\u06cc \u0627\u0646\u0633\u0627\u0646\u06cc (\u0628\u0631\u0646\u0627\u0645\u0647\u0646\u0648\u06cc\u0633\u06cc). * \u0647\u0648\u0634\u0645\u0646\u062f\u0627\u0646\u0647: \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0641\u0648\u0642\u0627\u0644\u0639\u0627\u062f\u0647 \u062f\u0631 \u0645\u062d\u06cc\u0637\u0647\u0627\u06cc \u062a\u0648\u0633\u0639\u0647 \u06cc\u06a9\u067e\u0627\u0631\u0686\u0647 (IDE). \u062a\u06a9\u0645\u06cc\u0644 \u062f\u0631 \u0647\u0645\u0647 \u0628\u062e\u0634\u0647\u0627\u06cc \u06a9\u062f. \u06a9\u0627\u0647\u0634 \u0632\u0645\u0627\u0646 \u0631\u0641\u0639 \u0628\u0627\u06af. \u0622\u0633\u0627\u0646: \u0637\u0631\u0627\u062d\u06cc \u0634\u062f\u0647 \u0628\u0631\u0627\u06cc \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0648 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0622\u0633\u0627\u0646. \u06a9\u0627\u0647\u0634 \u0632\u0645\u0627\u0646 \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0628\u0631\u0627\u06cc \u0645\u0631\u0627\u062c\u0639\u0647 \u0628\u0647 \u0645\u0633\u062a\u0646\u062f\u0627\u062a. \u06a9\u0648\u0686\u06a9: \u06a9\u0627\u0647\u0634 \u062a\u06a9\u0631\u0627\u0631 \u062f\u0631 \u06a9\u062f. \u0686\u0646\u062f\u06cc\u0646 \u0642\u0627\u0628\u0644\u06cc\u062a \u0628\u0631\u0627\u06cc \u0647\u0631 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 (\u0645\u0646\u0638\u0648\u0631 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0648\u0631\u0648\u062f\u06cc \u062a\u0627\u0628\u0639 \u0647\u0646\u062f\u0644\u0631 \u0645\u06cc\u0628\u0627\u0634\u062f \u0628\u0647 \u0628\u062e\u0634 \u062e\u0644\u0627\u0635\u0647 \u062f\u0631 \u0647\u0645\u06cc\u0646 \u0635\u0641\u062d\u0647 \u0645\u0631\u0627\u062c\u0639\u0647 \u0634\u0648\u062f). \u0628\u0627\u06af \u06a9\u0645\u062a\u0631. \u0627\u0633\u062a\u0648\u0627\u0631: \u0627\u06cc\u062c\u0627\u062f \u06a9\u062f\u06cc \u0622\u0645\u0627\u062f\u0647 \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u0645\u062d\u06cc\u0637 \u067e\u0631\u0648\u062f\u0627\u06a9\u0634\u0646 \u0648 \u062a\u0648\u0644\u06cc\u062f \u062e\u0648\u062f\u06a9\u0627\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f\u0647\u0627: \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 (\u0648 \u0645\u0646\u0637\u0628\u0642 \u0628\u0627) \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f\u0647\u0627\u06cc \u0645\u062a\u0646 \u0628\u0627\u0632 \u0645\u0631\u0628\u0648\u0637 \u0628\u0647 API: OpenAPI (\u0633\u0648\u06af\u0631 \u0633\u0627\u0628\u0642) \u0648 JSON Schema. * \u062a\u062e\u0645\u06cc\u0646\u0647\u0627 \u0628\u0631 \u0627\u0633\u0627\u0633 \u062a\u0633\u062a\u0647\u0627\u06cc \u0627\u0646\u062c\u0627\u0645 \u0634\u062f\u0647 \u062f\u0631 \u06cc\u06a9 \u062a\u06cc\u0645 \u062a\u0648\u0633\u0639\u0647 \u062f\u0627\u062e\u0644\u06cc \u06a9\u0647 \u0645\u0634\u063a\u0648\u0644 \u0627\u06cc\u062c\u0627\u062f \u0628\u0631\u0646\u0627\u0645\u0647\u0647\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u062f\u06cc \u0648\u0627\u0642\u0639\u06cc \u0628\u0648\u062f\u0646\u062f \u0635\u0648\u0631\u062a \u06af\u0631\u0641\u062a\u0647 \u0627\u0633\u062a. \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc \u062f\u06cc\u06af\u0631 \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627 \u0646\u0638\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u062f\u0631 \u0645\u0648\u0631\u062f FastAPI [...] I'm using FastAPI a ton these days. [...] I'm actually planning to use it for all of my team's ML services at Microsoft. Some of them are getting integrated into the core Windows product and some Office products.\" Kabir Khan - Microsoft (ref) \"We adopted the FastAPI library to spawn a RESTserver that can be queried to obtain predictions. [for Ludwig]\" Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref) \"Netflix is pleased to announce the open-source release of our crisis management orchestration framework: Dispatch! [built with FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Im over the moon excited about FastAPI. Its so fun!\" Brian Okken - Python Bytes podcast host (ref) \"Honestly, what you've built looks super solid and polished. In many ways, it's what I wanted Hug to be - it's really inspiring to see someone build that.\" Timothy Crosley - Hug creator (ref) \"If you're looking to learn one modern framework for building REST APIs, check out FastAPI [...] It's fast, easy to use and easy to learn [...]\" \"We've switched over to FastAPI for our APIs [...] I think you'll like it [...]\" Ines Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref) Typer, \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u06cc \u0645\u0639\u0627\u062f\u0644 FastAPI \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0628\u0627 \u0648\u0627\u0633\u0637 \u062e\u0637 \u0641\u0631\u0645\u0627\u0646 \u0627\u06af\u0631 \u062f\u0631 \u062d\u0627\u0644 \u0633\u0627\u062e\u062a\u0646 \u0628\u0631\u0646\u0627\u0645\u0647\u0627\u06cc \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 CLI (\u0628\u0647 \u062c\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u0648\u0628) \u0647\u0633\u062a\u06cc\u062f \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 Typer. \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. Typer \u062f\u0648\u0642\u0644\u0648\u06cc \u06a9\u0648\u0686\u06a9\u062a\u0631 FastAPI \u0627\u0633\u062a \u0648 \u0642\u0631\u0627\u0631 \u0627\u0633\u062a \u0645\u0639\u0627\u062f\u0644\u06cc \u0628\u0631\u0627\u06cc FastAPI \u062f\u0631 \u0628\u0631\u0646\u0627\u0645\u0647\u0647\u0627\u06cc CLI \u0628\u0627\u0634\u062f.  \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627 \u067e\u0627\u06cc\u062a\u0648\u0646 +\u06f3.\u06f6 FastAPI \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u0627\u0628\u0632\u0627\u0631\u0647\u0627\u06cc \u0642\u062f\u0631\u062a\u0645\u0646\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a: \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 Starlette \u0628\u0631\u0627\u06cc \u0628\u062e\u0634 \u0648\u0628. \u06a9\u062a\u0627\u0628\u062e\u0627\u0646\u0647 Pydantic \u0628\u0631\u0627\u06cc \u0628\u062e\u0634 \u062f\u0627\u062f\u0647. \u0646\u0635\u0628  pip install fastapi --- 100 \u0646\u0635\u0628 \u06cc\u06a9 \u0633\u0631\u0648\u0631 \u067e\u0631\u0648\u062f\u0627\u06a9\u0634\u0646 \u0646\u0638\u06cc\u0631 Uvicorn \u06cc\u0627 Hypercorn \u0646\u06cc\u0632 \u062c\u0632\u0621 \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u0633\u062a.  pip install \"uvicorn[standard]\" --- 100 \u0645\u062b\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f \u0641\u0627\u06cc\u0644\u06cc \u0628\u0647 \u0646\u0627\u0645 main.py \u0628\u0627 \u0645\u062d\u062a\u0648\u0627\u06cc \u0632\u06cc\u0631 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f: from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} \u0647\u0645\u0686\u0646\u06cc\u0646 \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 async def... \u0646\u06cc\u0632 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f \u0627\u06af\u0631 \u062f\u0631 \u06a9\u062f\u062a\u0627\u0646 \u0627\u0632 async / await \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0645\u06cc\u06a9\u0646\u06cc\u062f \u0627\u0632 async def \u0628\u0631\u0627\u06cc \u062a\u0639\u0631\u06cc\u0641 \u062a\u0627\u0628\u0639 \u062e\u0648\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f: from typing import Optional from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Optional[str] = None): return {\"item_id\": item_id, \"q\": q} \u062a\u0648\u062c\u0647: \u0627\u06af\u0631 \u0628\u0627 async / await \u0622\u0634\u0646\u0627 \u0646\u06cc\u0633\u062a\u06cc\u062f \u0628\u0647 \u0628\u062e\u0634 \"\u0639\u062c\u0644\u0647 \u062f\u0627\u0631\u06cc\u062f?\" \u062f\u0631 \u0635\u0641\u062d\u0647 \u062f\u0631\u0628\u0627\u0631\u0647 async \u0648 await \u062f\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f. \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u062f\u0633\u062a\u0648\u0631 \u0632\u06cc\u0631 \u0633\u0631\u0648\u0631 \u0631\u0627 \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f:  uvicorn main:app --reload INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup. INFO: Application startup complete. \u062f\u0631\u0628\u0627\u0631\u0647 \u062f\u0633\u062a\u0648\u0631 uvicorn main:app --reload... \u062f\u0633\u062a\u0648\u0631 uvicorn main:app \u0634\u0627\u0645\u0644 \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a: main: \u0641\u0627\u06cc\u0644 main.py (\u0645\u0627\u0698\u0648\u0644 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647). app: \u0634\u06cc\u0621 \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u062f\u0631 \u0641\u0627\u06cc\u0644 main.py \u062f\u0631 \u062e\u0637 app = FastAPI(). --reload: \u0631\u06cc\u0633\u062a\u0627\u0631\u062a \u06a9\u0631\u062f\u0646 \u0633\u0631\u0648\u0631 \u0628\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u06a9\u062f. \u062a\u0646\u0647\u0627 \u062f\u0631 \u0647\u0646\u06af\u0627\u0645 \u062a\u0648\u0633\u0639\u0647 \u0627\u0632 \u0627\u06cc\u0646 \u06af\u0632\u06cc\u0646\u0647 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u0648\u062f.. \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f \u0622\u062f\u0631\u0633 http://127.0.0.1:8000/items/5?q=somequery \u0631\u0627 \u062f\u0631 \u0645\u0631\u0648\u0631\u06af\u0631 \u062e\u0648\u062f \u0628\u0627\u0632 \u06a9\u0646\u06cc\u062f. \u067e\u0627\u0633\u062e JSON \u0632\u06cc\u0631 \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u0631\u062f: {\"item_id\": 5, \"q\": \"somequery\"} \u062a\u0627 \u0627\u06cc\u0646\u062c\u0627 \u0634\u0645\u0627 API\u0627\u06cc \u0633\u0627\u062e\u062a\u06cc\u062f \u06a9\u0647: \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc HTTP \u0628\u0647 \u0645\u0633\u06cc\u0631\u0647\u0627\u06cc / \u0648 /items/{item_id} \u0631\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u0645\u06cc\u06a9\u0646\u062f. \u0647\u0631\u062f\u0648 \u0645\u0633\u06cc\u0631 \u0639\u0645\u0644\u06cc\u0627\u062a (\u06cc\u0627 HTTP \u0645\u062a\u062f) GET \u0631\u0627 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u062f. \u0645\u0633\u06cc\u0631 /items/{item_id} \u0634\u0627\u0645\u0644 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0645\u0633\u06cc\u0631 item_id \u0627\u0632 \u0646\u0648\u0639 int \u0627\u0633\u062a. \u0645\u0633\u06cc\u0631 /items/{item_id} \u0634\u0627\u0645\u0644 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u067e\u0631\u0633\u0645\u0627\u0646 \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc q \u0627\u0632 \u0646\u0648\u0639 str \u0627\u0633\u062a. \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u062d\u0627\u0644 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127.0.0.1:8000/docs \u0628\u0631\u0648\u06cc\u062f. \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc (\u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u0628\u0647 \u06a9\u0645\u06a9 Swagger UI) \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u0631\u062f: \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062d\u0627\u0644 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127.0.0.1:8000/redoc \u0628\u0631\u0648\u06cc\u062f. \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u062f\u06cc\u06af\u0631\u06cc \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u0631\u062f \u06a9\u0647 \u0628\u0647 \u06a9\u0645\u06a9 ReDoc \u0627\u06cc\u062c\u0627\u062f \u0645\u06cc\u0634\u0648\u062f: \u062a\u063a\u06cc\u06cc\u0631 \u0645\u062b\u0627\u0644 \u062d\u0627\u0644 \u0641\u0627\u06cc\u0644 main.py \u0631\u0627 \u0645\u0637\u0627\u0628\u0642 \u0632\u06cc\u0631 \u0648\u06cc\u0631\u0627\u06cc\u0634 \u06a9\u0646\u06cc\u062f \u062a\u0627 \u0628\u062a\u0648\u0627\u0646\u06cc\u062f \u0628\u062f\u0646\u0647 \u06cc\u06a9 \u062f\u0631\u062e\u0648\u0627\u0633\u062a PUT \u0631\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u06cc\u062f. \u0628\u0647 \u06a9\u0645\u06a9 Pydantic \u0628\u062f\u0646\u0647 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0631\u0627 \u0628\u0627 \u0627\u0646\u0648\u0627\u0639 \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f \u067e\u0627\u06cc\u062a\u0648\u0646 \u062a\u0639\u0631\u06cc\u0641 \u06a9\u0646\u06cc\u062f. from typing import Optional from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} \u0633\u0631\u0648\u0631 \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0631\u06cc\u0627\u0633\u062a\u0627\u0631\u062a \u0645\u06cc\u0634\u0648\u062f (\u0632\u06cc\u0631\u0627 \u067e\u06cc\u0634\u062a\u0631 \u0627\u0632 \u06af\u0632\u06cc\u0646\u0647 --reload \u062f\u0631 \u062f\u0633\u062a\u0648\u0631 uvicorn \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0631\u062f\u06cc\u0645). \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u062c\u062f\u062f\u0627 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127.0.0.1:8000/docs \u0628\u0631\u0648\u06cc\u062f. \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0628\u0647\u0631\u0648\u0632 \u0634\u062f\u0647 \u0627\u0633\u062a \u0648 \u0634\u0627\u0645\u0644 \u0628\u062f\u0646\u0647 \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u062f\u0631 \u0645\u0631\u062d\u0644\u0647 \u0642\u0628\u0644 \u0627\u0633\u062a: \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \"Try it out\" \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f \u0627\u06a9\u0646\u0648\u0646 \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0647\u0631 API \u0631\u0627 \u0645\u0634\u062e\u0635 \u06a9\u0631\u062f\u0647 \u0648 \u0628\u0647 \u0635\u0648\u0631\u062a \u0645\u0633\u062a\u0642\u06cc\u0645 \u0628\u0627 \u0622\u0646\u0647\u0627 \u062a\u0639\u0627\u0645\u0644 \u06a9\u0646\u06cc\u062f: \u0633\u067e\u0633 \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \"Execute\" \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f \u062e\u0648\u0627\u0647\u06cc\u062f \u062f\u06cc\u062f \u06a9\u0647 \u0648\u0627\u0633\u0637 \u06a9\u0627\u0631\u0628\u0631\u06cc \u0628\u0627 API\u0647\u0627\u06cc \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0631\u0642\u0631\u0627\u0631 \u06a9\u0631\u062f\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0631\u0627 \u0628\u0647 \u0622\u0646\u0647\u0627 \u0627\u0631\u0633\u0627\u0644 \u0645\u06cc\u06a9\u0646\u062f \u0633\u067e\u0633 \u0646\u062a\u0627\u06cc\u062c \u0631\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0631\u062f\u0647 \u0648 \u062f\u0631 \u0635\u0641\u062d\u0647 \u0646\u0634\u0627\u0646 \u0645\u06cc\u062f\u0647\u062f: \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062d\u0627\u0644 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127.0.0.1:8000/redoc \u0628\u0631\u0648\u06cc\u062f. \u062e\u0648\u0627\u0647\u06cc\u062f \u062f\u06cc\u062f \u06a9\u0647 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u0646\u06cc\u0632 \u0628\u0647\u0631\u0648\u0632\u0631\u0633\u0627\u0646\u06cc \u0634\u062f\u0647 \u0648 \u0634\u0627\u0645\u0644 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u067e\u0631\u0633\u0645\u0627\u0646 \u0648 \u0628\u062f\u0646\u0647 \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u0645\u06cc\u0628\u0627\u0634\u062f: \u062e\u0644\u0627\u0635\u0647 \u0628\u0647 \u0637\u0648\u0631 \u062e\u0644\u0627\u0635\u0647 \u0634\u0645\u0627 \u06cc\u06a9 \u0628\u0627\u0631 \u0627\u0646\u0648\u0627\u0639 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627 \u0628\u062f\u0646\u0647 \u0648 \u063a\u06cc\u0631\u0647 \u0631\u0627 \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0648\u0631\u0648\u062f\u06cc \u062a\u0627\u0628\u0639 \u062e\u0648\u062f \u062a\u0639\u0631\u06cc\u0641 \u0645\u06cc\u06a9\u0646\u06cc\u062f. \u0627\u06cc\u0646 \u06a9\u0627\u0631 \u0631\u0627 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u0646\u0648\u0627\u0639 \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f \u0648 \u0645\u062f\u0631\u0646 \u0645\u0648\u062c\u0648\u062f \u062f\u0631 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0627\u0646\u062c\u0627\u0645 \u0645\u06cc\u062f\u0647\u06cc\u062f. \u0646\u06cc\u0627\u0632\u06cc \u0628\u0647 \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0646\u062d\u0648 \u062c\u062f\u06cc\u062f \u06cc\u0627 \u0645\u062a\u062f\u0647\u0627 \u0648 \u06a9\u0644\u0627\u0633\u0647\u0627\u06cc \u06cc\u06a9 \u06a9\u062a\u0627\u0628\u062e\u0627\u0646\u0647 \u0628\u062e\u0635\u0648\u0635 \u0648 \u063a\u06cc\u0631\u0647 \u0646\u06cc\u0633\u062a. \u062a\u0646\u0647\u0627 \u067e\u0627\u06cc\u062a\u0648\u0646 +\u06f3.\u06f6. \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u0645\u062b\u0627\u0644 \u0628\u0631\u0627\u06cc \u06cc\u06a9 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0627\u0632 \u0646\u0648\u0639 int: item_id: int \u06cc\u0627 \u0628\u0631\u0627\u06cc \u06cc\u06a9 \u0645\u062f\u0644 \u067e\u06cc\u0686\u06cc\u062f\u0647\u062a\u0631 \u0645\u062b\u0644 Item: item: Item ...\u0648 \u0628\u0627 \u0647\u0645\u06cc\u0646 \u0627\u0639\u0644\u0627\u0646 \u062a\u0645\u0627\u0645\u06cc \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u0632\u06cc\u0631 \u062f\u0631 \u062f\u0633\u062a\u0631\u0633 \u0642\u0631\u0627\u0631 \u0645\u06cc\u06af\u06cc\u0631\u062f: \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0648\u06cc\u0631\u0627\u06cc\u0634\u06af\u0631 \u0645\u062a\u0646\u06cc \u0634\u0627\u0645\u0644: \u062a\u06a9\u0645\u06cc\u0644 \u06a9\u062f. \u0628\u0631\u0631\u0633\u06cc \u0627\u0646\u0648\u0627\u0639 \u062f\u0627\u062f\u0647. \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u062f\u0627\u062f\u0647: \u062e\u0637\u0627\u0647\u0627\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0648 \u0645\u0634\u062e\u0635 \u062f\u0631 \u0647\u0646\u06af\u0627\u0645 \u0646\u0627\u0645\u0639\u062a\u0628\u0631 \u0628\u0648\u062f\u0646 \u062f\u0627\u062f\u0647. \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u062d\u062a\u06cc \u0628\u0631\u0627\u06cc \u0627\u0634\u06cc\u0627\u0621 JSON \u062a\u0648 \u062f\u0631 \u062a\u0648. \u062a\u0628\u062f\u06cc\u0644 \u062f\u0627\u062f\u0647 \u0648\u0631\u0648\u062f\u06cc: \u06a9\u0647 \u0627\u0632 \u0634\u0628\u06a9\u0647 \u0631\u0633\u06cc\u062f\u0647 \u0628\u0647 \u0627\u0646\u0648\u0627\u0639 \u0648 \u062f\u0627\u062f\u0647 \u067e\u0627\u06cc\u062a\u0648\u0646\u06cc. \u0627\u06cc\u0646 \u062f\u0627\u062f\u0647 \u0634\u0627\u0645\u0644: JSON. \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0633\u06cc\u0631. \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u067e\u0631\u0633\u0645\u0627\u0646. \u06a9\u0648\u06a9\u06cc\u0647\u0627. \u0633\u0631\u0622\u06cc\u0646\u062f\u0647\u0627 (\u0647\u062f\u0631\u0647\u0627). \u0641\u0631\u0645\u0647\u0627. \u0641\u0627\u06cc\u0644\u0647\u0627. \u062a\u0628\u062f\u06cc\u0644 \u062f\u0627\u062f\u0647 \u062e\u0631\u0648\u062c\u06cc: \u062a\u0628\u062f\u06cc\u0644 \u0627\u0632 \u0627\u0646\u0648\u0627\u0639 \u0648 \u062f\u0627\u062f\u0647 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0628\u0647 \u062f\u0627\u062f\u0647 \u0634\u0628\u06a9\u0647 (\u0645\u0627\u0646\u0646\u062f JSON): \u062a\u0628\u062f\u06cc\u0644 \u0627\u0646\u0648\u0627\u0639 \u062f\u0627\u062f\u0647 \u067e\u0627\u06cc\u062a\u0648\u0646\u06cc (str, int, float, bool, list \u0648 \u063a\u06cc\u0631\u0647). \u0627\u0634\u06cc\u0627\u0621 datetime. \u0627\u0634\u06cc\u0627\u0621 UUID. q\u0645\u062f\u0644\u0647\u0627\u06cc \u067e\u0627\u06cc\u06af\u0627\u0647\u062f\u0627\u062f\u0647. \u0648 \u0645\u0648\u0627\u0631\u062f \u0628\u06cc\u0634\u0645\u0627\u0631 \u062f\u06cc\u06af\u0631. \u062f\u0648 \u0645\u062f\u0644 \u0645\u0633\u062a\u0646\u062f API \u062a\u0639\u0627\u0645\u0644\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 : Swagger UI. ReDoc. \u0628\u0647 \u0645\u062b\u0627\u0644 \u0642\u0628\u0644\u06cc \u0628\u0627\u0632 \u0645\u06cc\u06af\u0631\u062f\u06cc\u0645 \u062f\u0631 \u0627\u06cc\u0646 \u0645\u062b\u0627\u0644 FastAPI \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0631\u0627 \u0627\u0646\u062c\u0627\u0645 \u0645\u06cc\u062f\u0647\u062f: \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 item_id \u062f\u0631 \u0645\u0633\u06cc\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc GET \u0648 PUT \u0645\u0648\u062c\u0648\u062f \u0627\u0633\u062a. \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 item_id \u062f\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc GET \u0648 PUT \u0627\u0632 \u0646\u0648\u0639 int \u0627\u0633\u062a. \u0627\u06af\u0631 \u063a\u06cc\u0631 \u0627\u0632 \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0628\u0627\u0634\u062f \u0633\u0631\u0648\u06cc\u0633\u06af\u06cc\u0631\u0646\u062f\u0647 \u062e\u0637\u0627\u06cc \u0645\u0641\u06cc\u062f \u0648 \u0645\u0634\u062e\u0635\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u062e\u0648\u0627\u0647\u062f \u06a9\u0631\u062f. \u0628\u0631\u0631\u0633\u06cc \u0648\u062c\u0648\u062f \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u067e\u0631\u0633\u0645\u0627\u0646 \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc q (\u0645\u0627\u0646\u0646\u062f http://127.0.0.1:8000/items/foo?q=somequery) \u062f\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc GET. \u0627\u0632 \u0622\u0646\u062c\u0627 \u06a9\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 q \u0628\u0627 = None \u0645\u0642\u062f\u0627\u0631\u062f\u0647\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a \u0627\u06cc\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0627\u0633\u062a. \u0627\u06af\u0631 \u0627\u0632 \u0645\u0642\u062f\u0627\u0631 \u0627\u0648\u0644\u06cc\u0647 None \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u06a9\u0646\u06cc\u0645 \u0627\u06cc\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0627\u0644\u0632\u0627\u0645\u06cc \u062e\u0648\u0627\u0647\u062f \u0628\u0648\u062f (\u0647\u0645\u0627\u0646\u0646\u062f \u0628\u062f\u0646\u0647 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u062f\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a PUT). \u0628\u0631\u0627\u06cc \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc PUT \u0628\u0647 \u0622\u062f\u0631\u0633 /items/{item_id} \u0628\u062f\u0646\u0647 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0628\u0627\u06cc\u062f \u0627\u0632 \u0646\u0648\u0639 JSON \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u0628\u0627\u0634\u062f: \u0628\u0631\u0631\u0633\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u0628\u062f\u0646\u0647 \u0634\u0627\u0645\u0644 \u0641\u06cc\u0644\u062f\u06cc \u0628\u0627 \u0646\u0627\u0645 name \u0648 \u0627\u0632 \u0646\u0648\u0639 str \u0627\u0633\u062a. \u0628\u0631\u0631\u0633\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u0628\u062f\u0646\u0647 \u0634\u0627\u0645\u0644 \u0641\u06cc\u0644\u062f\u06cc \u0628\u0627 \u0646\u0627\u0645 price \u0648 \u0627\u0632 \u0646\u0648\u0639 float \u0627\u0633\u062a. \u0628\u0631\u0631\u0633\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u0628\u062f\u0646\u0647 \u0634\u0627\u0645\u0644 \u0641\u06cc\u0644\u062f\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0628\u0627 \u0646\u0627\u0645 is_offer \u0627\u0633\u062a \u06a9\u0647 \u062f\u0631 \u0635\u0648\u0631\u062a \u0648\u062c\u0648\u062f \u0628\u0627\u06cc\u062f \u0627\u0632 \u0646\u0648\u0639 bool \u0628\u0627\u0634\u062f. \u062a\u0645\u0627\u0645\u06cc \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0628\u0631\u0627\u06cc \u0627\u0634\u06cc\u0627\u0621 JSON \u062f\u0631 \u0647\u0631 \u0639\u0645\u0642\u06cc \u0642\u0627\u0628\u0644 \u0628\u0631\u0631\u0633\u06cc \u0645\u06cc\u0628\u0627\u0634\u062f. \u062a\u0628\u062f\u06cc\u0644 \u0627\u0632/\u0628\u0647 JSON \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631. \u0645\u0633\u062a\u0646\u062f\u0633\u0627\u0632\u06cc \u0647\u0645\u0647 \u0686\u06cc\u0632 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 OpenAPI \u06a9\u0647 \u0645\u06cc\u062a\u0648\u0627\u0646 \u0627\u0632 \u0622\u0646 \u0628\u0631\u0627\u06cc \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0631\u062f: \u0633\u06cc\u0633\u062a\u0645 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062a\u0639\u0627\u0645\u0644\u06cc. \u062a\u0648\u0644\u06cc\u062f \u062e\u0648\u062f\u06a9\u0627\u0631 \u06a9\u062f \u0633\u0631\u0648\u06cc\u0633\u06af\u06cc\u0631\u0646\u062f\u0647 \u062f\u0631 \u0632\u0628\u0627\u0646\u0647\u0627\u06cc \u0628\u0631\u0646\u0627\u0645\u0647\u0646\u0648\u06cc\u0633\u06cc \u0628\u06cc\u0634\u0645\u0627\u0631. \u0641\u0631\u0627\u0647\u0645 \u0633\u0627\u0632\u06cc \u06f2 \u0645\u0633\u062a\u0646\u062f \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u0648\u0628 \u0628\u0647 \u0635\u0648\u0631\u062a \u067e\u06cc\u0634\u0641\u0631\u0636. \u0645\u0648\u0627\u0631\u062f \u0630\u06a9\u0631 \u0634\u062f\u0647 \u062a\u0646\u0647\u0627 \u067e\u0627\u0631\u0647\u0627\u06cc \u0627\u0632 \u0648\u06cc\u0698\u06af\u06cc\u0647\u0627\u06cc \u0628\u06cc\u0634\u0645\u0627\u0631 FastAPI \u0627\u0633\u062a \u0627\u0645\u0627 \u0627\u06cc\u062f\u0647\u0627\u06cc \u06a9\u0644\u06cc \u0627\u0632 \u0637\u0631\u0632 \u06a9\u0627\u0631 \u0622\u0646 \u062f\u0631 \u0627\u062e\u062a\u06cc\u0627\u0631 \u0642\u0631\u0627\u0631 \u0645\u06cc\u062f\u0647\u062f. \u062e\u0637 \u0632\u06cc\u0631 \u0631\u0627 \u0628\u0647 \u0627\u06cc\u0646 \u0635\u0648\u0631\u062a \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0647\u06cc\u062f: return {\"item_name\": item.name, \"item_id\": item_id} \u0627\u0632: ... \"item_name\": item.name ... \u0628\u0647: ... \"item_price\": item.price ... \u062f\u0631 \u062d\u06cc\u0646 \u062a\u0627\u06cc\u067e \u06a9\u0631\u062f\u0646 \u062a\u0648\u062c\u0647 \u06a9\u0646\u06cc\u062f \u06a9\u0647 \u0686\u06af\u0648\u0646\u0647 \u0648\u06cc\u0631\u0627\u06cc\u0634\u06af\u0631 \u0648\u06cc\u0698\u06af\u06cc\u0647\u0627\u06cc \u06a9\u0644\u0627\u0633 Item \u0631\u0627 \u062a\u0634\u062e\u06cc\u0635 \u062f\u0627\u062f\u0647 \u0648 \u0628\u0647 \u062a\u06a9\u0645\u06cc\u0644 \u062e\u0648\u062f\u06a9\u0627\u0631 \u0622\u0646\u0647\u0627 \u06a9\u0645\u06a9 \u0645\u06cc\u06a9\u0646\u062f: \u0628\u0631\u0627\u06cc \u0645\u0634\u0627\u0647\u062f\u0647 \u0645\u062b\u0627\u0644\u0647\u0627\u06cc \u06a9\u0627\u0645\u0644\u062a\u0631 \u06a9\u0647 \u0634\u0627\u0645\u0644 \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u0628\u06cc\u0634\u062a\u0631\u06cc \u0627\u0632 FastAPI \u0628\u0627\u0634\u062f \u0628\u0647 \u0628\u062e\u0634 \u0622\u0645\u0648\u0632\u0634 - \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631 \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f. \u0647\u0634\u062f\u0627\u0631 \u0627\u0633\u067e\u0648\u06cc\u0644: \u0628\u062e\u0634 \u0622\u0645\u0648\u0632\u0634 - \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631 \u0634\u0627\u0645\u0644 \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a: \u0627\u0639\u0644\u0627\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0648\u062c\u0648\u062f \u062f\u0631 \u0628\u062e\u0634\u0647\u0627\u06cc \u062f\u06cc\u06af\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0634\u0627\u0645\u0644: \u0633\u0631\u0622\u06cc\u0646\u062f (\u0647\u062f\u0631)\u0647\u0627 \u06a9\u0648\u06a9\u06cc\u0647\u0627 \u0641\u06cc\u0644\u062f\u0647\u0627\u06cc \u0641\u0631\u0645 \u0648 \u0641\u0627\u06cc\u0644\u0647\u0627. \u0686\u06af\u0648\u0646\u06af\u06cc \u062a\u0646\u0638\u06cc\u0645 \u0645\u062d\u062f\u0648\u062f\u06cc\u062a\u0647\u0627\u06cc \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u0645\u062b\u0627\u0644 maximum_length \u06cc\u0627 regex. \u0633\u06cc\u0633\u062a\u0645 Dependency Injection \u0642\u0648\u06cc \u0648 \u06a9\u0627\u0631\u0628\u0631\u062f\u06cc. \u0627\u0645\u0646\u06cc\u062a \u0648 \u062a\u0627\u06cc\u06cc\u062f \u0647\u0648\u06cc\u062a, \u0634\u0627\u0645\u0644 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u0632 OAuth2 \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 JWT tokens \u0648 HTTP Basic. \u062a\u06a9\u0646\u06cc\u06a9 \u067e\u06cc\u0634\u0631\u0641\u062a\u0647 \u0628\u0631\u0627\u06cc \u062a\u0639\u0631\u06cc\u0641 \u0645\u062f\u0644\u0647\u0627\u06cc \u0686\u0646\u062f \u0633\u0637\u062d\u06cc JSON (\u0628\u0631 \u0627\u0633\u0627\u0633 Pydantic). \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u0627\u0636\u0627\u0641\u06cc \u062f\u06cc\u06af\u0631 (\u0628\u0631 \u0627\u0633\u0627\u0633 Starlette) \u0634\u0627\u0645\u0644: \u0648\u0628\u0633\u0648\u06a9\u062a GraphQL \u062a\u0633\u062a\u0647\u0627\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0622\u0633\u0627\u0646 \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 HTTPX \u0648 pytest CORS Cookie Sessions \u0648 \u0645\u0648\u0627\u0631\u062f \u0628\u06cc\u0634\u0645\u0627\u0631 \u062f\u06cc\u06af\u0631. \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0645\u0639\u06cc\u0627\u0631 (\u0628\u0646\u0686\u0645\u0627\u0631\u06a9)\u0647\u0627\u06cc \u0645\u0633\u062a\u0642\u0644 TechEmpower \u062d\u0627\u06a9\u06cc \u0627\u0632 \u0622\u0646 \u0627\u0633\u062a \u06a9\u0647 \u0628\u0631\u0646\u0627\u0645\u0647\u0647\u0627\u06cc FastAPI \u06a9\u0647 \u062a\u062d\u062a Uvicorn \u0627\u062c\u0631\u0627 \u0645\u06cc\u0634\u0648\u062f \u06cc\u06a9\u06cc \u0627\u0632 \u0633\u0631\u06cc\u0639\u062a\u0631\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u0647\u0627\u06cc \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0627\u0633\u062a \u06a9\u0647 \u06a9\u0645\u06cc \u0636\u0639\u06cc\u0641\u062a\u0631 \u0627\u0632 Starlette \u0648 Uvicorn \u0639\u0645\u0644 \u0645\u06cc\u06a9\u0646\u062f (\u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0648 \u0633\u0631\u0648\u0631\u06cc \u06a9\u0647 FastAPI \u0628\u0631 \u0627\u0633\u0627\u0633 \u0622\u0646\u0647\u0627 \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u0627\u0633\u062a) (*) \u0628\u0631\u0627\u06cc \u062f\u0631\u06a9 \u0628\u0647\u062a\u0631\u06cc \u0627\u0632 \u0627\u06cc\u0646 \u0645\u0648\u0636\u0648\u0639 \u0628\u0647 \u0628\u062e\u0634 \u0628\u0646\u0686\u0645\u0627\u0631\u06a9\u0647\u0627 \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f. \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 Pydantic: email-validator - \u0628\u0631\u0627\u06cc \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0622\u062f\u0631\u0633\u0647\u0627\u06cc \u0627\u06cc\u0645\u06cc\u0644. \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 Starlette: HTTPX - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0645\u06cc\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 TestClient \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. aiofiles - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0645\u06cc\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 FileResponse \u0648 StaticFiles \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. jinja2 - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 \u067e\u06cc\u06a9\u0631\u0628\u0646\u062f\u06cc \u067e\u06cc\u0634\u0641\u0631\u0636 \u0628\u0631\u0627\u06cc \u0642\u0627\u0644\u0628\u0647\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. python-multipart - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 request.form() \u0627\u0632 \u0642\u0627\u0628\u0644\u06cc\u062a \"\u062a\u062c\u0632\u06cc\u0647 (parse)\" \u0641\u0631\u0645 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. itsdangerous - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u06cc\u062f \u0627\u0632 SessionMiddleware \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u06a9\u0646\u06cc\u062f. pyyaml - \u0628\u0631\u0627\u06cc \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc SchemaGenerator \u062f\u0631 Starlet (\u0628\u0647 \u0627\u062d\u062a\u0645\u0627\u0644 \u0632\u06cc\u0627\u062f \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u06a9\u0631\u062f\u0646 \u0628\u0627 FastAPI \u0628\u0647 \u0622\u0646 \u0646\u06cc\u0627\u0632\u06cc \u067e\u06cc\u062f\u0627 \u0646\u0645\u06cc\u06a9\u0646\u06cc\u062f). graphene - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0627\u0632 GraphQLApp \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u062f. \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 FastAPI / Starlette: uvicorn - \u0628\u0631\u0627\u06cc \u0633\u0631\u0648\u0631 \u0627\u062c\u0631\u0627 \u06a9\u0646\u0646\u062f\u0647 \u0628\u0631\u0646\u0627\u0645\u0647 \u0648\u0628. orjson - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 ORJSONResponse \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. ujson - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 UJSONResponse \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f. \u0645\u06cc\u062a\u0648\u0627\u0646 \u0647\u0645\u0647 \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0631\u0627 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u062f\u0633\u062a\u0648\u0631 pip install fastapi[all]. \u0628\u0647 \u0635\u0648\u0631\u062a \u06cc\u06a9\u062c\u0627 \u0646\u0635\u0628 \u06a9\u0631\u062f. \u0644\u0627\u06cc\u0633\u0646\u0633 \u0627\u06cc\u0646 \u067e\u0631\u0648\u0698\u0647 \u0645\u0634\u0645\u0648\u0644 \u0642\u0648\u0627\u0646\u06cc\u0646 \u0648 \u0645\u0642\u0631\u0631\u0627\u062a \u0644\u0627\u06cc\u0633\u0646\u0633 MIT \u0627\u0633\u062a. \u0628\u0631\u06af\u0634\u062a \u0628\u0647 \u0628\u0627\u0644\u0627",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Optional\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Optional[str] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Optional\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Optional[str] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "async / await",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "uvicorn main:app --reload",
        "uvicorn main:app",
        "app = FastAPI()",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Optional\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Optional\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "email-validator",
        "FileResponse",
        "StaticFiles",
        "python-multipart",
        "request.form()",
        "itsdangerous",
        "SessionMiddleware",
        "SchemaGenerator",
        "ORJSONResponse",
        "UJSONResponse",
        "pip install fastapi[all]"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI \u0641\u0647\u0631\u0633\u062a \u0645\u0648\u0636\u0648\u0639\u0627\u062a \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc \u0646\u0638\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u062f\u0631 \u0645\u0648\u0631\u062f FastAPI Typer, \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u06cc \u0645\u0639\u0627\u062f\u0644 FastAPI \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0628\u0627 \u0648\u0627\u0633\u0637 \u062e\u0637 \u0641\u0631\u0645\u0627\u0646 \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627 \u0646\u0635\u0628 \u0645\u062b\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u062b\u0627\u0644 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062e\u0644\u0627\u0635\u0647 \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0644\u0627\u06cc\u0633\u0646\u0633 \u0648\u06cc\u0698\u06af\u06cc \u0647\u0627 \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc Python Types Intro Concurrency and async / await Environment Variables Virtual Environments Tutorial - User Guide Tutorial - User Guide First Steps Path Parameters Query Parameters Request Body Query Parameters and String Validations Path Parameters and Numeric Validations Query Parameter Models Body - Multiple Parameters Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield \u0627\u0645\u0646\u06cc\u062a \u0627\u0645\u0646\u06cc\u062a Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens \u0645\u06cc\u0627\u0646\u0627\u0641\u0632\u0627\u0631 - middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files Background Tasks Metadata and Docs URLs Static Files Testing Debugging Advanced User Guide Advanced User Guide Path Operation Advanced Configuration Additional Status Codes Return a Response Directly Custom Response - HTML, Stream, File, others Additional Responses in OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware \u0632\u06cc\u0631 \u0628\u0631\u0646\u0627\u0645\u0647 \u0647\u0627 - \u0627\u062a\u0635\u0627\u0644 Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI Deployment Deployment About FastAPI versions About HTTPS Run a Server Manually Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers FastAPI in Containers - Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Get Help Development - Contributing Full Stack FastAPI Template External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, Inspiration and Comparisons History, Design and Future Benchmarks Repository Management Release Notes \u0641\u0647\u0631\u0633\u062a \u0645\u0648\u0636\u0648\u0639\u0627\u062a \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc \u0646\u0638\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u062f\u0631 \u0645\u0648\u0631\u062f FastAPI Typer, \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u06cc \u0645\u0639\u0627\u062f\u0644 FastAPI \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0628\u0627 \u0648\u0627\u0633\u0637 \u062e\u0637 \u0641\u0631\u0645\u0627\u0646 \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627 \u0646\u0635\u0628 \u0645\u062b\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u062b\u0627\u0644 \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062e\u0644\u0627\u0635\u0647 \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0644\u0627\u06cc\u0633\u0646\u0633 FastAPI \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 FastAPI \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0628\u0627\u0644\u0627 \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0622\u0633\u0627\u0646 \u06a9\u062f\u0646\u0648\u06cc\u0633\u06cc \u0633\u0631\u06cc\u0639 \u0622\u0645\u0627\u062f\u0647 \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u0645\u062d\u06cc\u0637 \u067e\u0631\u0648\u062f\u0627\u06a9\u0634\u0646 \u0645\u0633\u062a\u0646\u062f\u0627\u062a: https://fastapi",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com \u06a9\u062f \u0645\u0646\u0628\u0639: https://github com/fastapi/fastapi FastAPI \u06cc\u06a9 \u0648\u0628 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0645\u062f\u0631\u0646 \u0648 \u0633\u0631\u06cc\u0639 (\u0628\u0627 \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0628\u0627\u0644\u0627) \u0628\u0631\u0627\u06cc \u0627\u06cc\u062c\u0627\u062f API\u0647\u0627\u06cc \u0645\u062a\u0646\u0648\u0639 (\u0648\u0628 \u0648\u0628\u0633\u0648\u06a9\u062a \u0648 \u063a\u0628\u0631\u0647) \u0628\u0627 \u0632\u0628\u0627\u0646 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0646\u0633\u062e\u0647 +\u06f3 \u06f6 \u0627\u0633\u062a \u0627\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0628\u0627 \u0631\u0639\u0627\u06cc\u062a \u06a9\u0627\u0645\u0644 \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u0646\u0648\u0639 \u062f\u0627\u062f\u0647 (Type Hint) \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u0627\u0633\u062a \u0648\u06cc\u0698\u06af\u06cc\u0647\u0627\u06cc \u06a9\u0644\u06cc\u062f\u06cc \u0627\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0639\u0628\u0627\u0631\u062a\u0646\u062f \u0627\u0632: \u0633\u0631\u0639\u062a: \u06a9\u0627\u0631\u0627\u06cc\u06cc \u0628\u0633\u06cc\u0627\u0631 \u0628\u0627\u0644\u0627 \u0648 \u0642\u0627\u0628\u0644 \u0645\u0642\u0627\u06cc\u0633\u0647 \u0628\u0627 NodeJS \u0648 Go (\u0628\u0627 \u062a\u0634\u06a9\u0631 \u0627\u0632 Starlette \u0648 Pydantic) \u06cc\u06a9\u06cc \u0627\u0632 \u0633\u0631\u06cc\u0639\u062a\u0631\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u0647\u0627\u06cc \u067e\u0627\u06cc\u062a\u0648\u0646\u06cc \u0645\u0648\u062c\u0648\u062f \u06a9\u062f\u0646\u0648\u06cc\u0633\u06cc \u0633\u0631\u06cc\u0639: \u0627\u0641\u0632\u0627\u06cc\u0634 \u06f2\u06f0\u06f0 \u062a\u0627 \u06f3\u06f0\u06f0 \u062f\u0631\u0635\u062f\u06cc \u0633\u0631\u0639\u062a \u062a\u0648\u0633\u0639\u0647 \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u062c\u062f\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "* \u0628\u0627\u06af \u06a9\u0645\u062a\u0631: \u06a9\u0627\u0647\u0634 \u06f4\u06f0 \u062f\u0631\u0635\u062f\u06cc \u062e\u0637\u0627\u0647\u0627\u06cc \u0627\u0646\u0633\u0627\u0646\u06cc (\u0628\u0631\u0646\u0627\u0645\u0647\u0646\u0648\u06cc\u0633\u06cc) * \u0647\u0648\u0634\u0645\u0646\u062f\u0627\u0646\u0647: \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0641\u0648\u0642\u0627\u0644\u0639\u0627\u062f\u0647 \u062f\u0631 \u0645\u062d\u06cc\u0637\u0647\u0627\u06cc \u062a\u0648\u0633\u0639\u0647 \u06cc\u06a9\u067e\u0627\u0631\u0686\u0647 (IDE) \u062a\u06a9\u0645\u06cc\u0644 \u062f\u0631 \u0647\u0645\u0647 \u0628\u062e\u0634\u0647\u0627\u06cc \u06a9\u062f \u06a9\u0627\u0647\u0634 \u0632\u0645\u0627\u0646 \u0631\u0641\u0639 \u0628\u0627\u06af \u0622\u0633\u0627\u0646: \u0637\u0631\u0627\u062d\u06cc \u0634\u062f\u0647 \u0628\u0631\u0627\u06cc \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0648 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0622\u0633\u0627\u0646 \u06a9\u0627\u0647\u0634 \u0632\u0645\u0627\u0646 \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0628\u0631\u0627\u06cc \u0645\u0631\u0627\u062c\u0639\u0647 \u0628\u0647 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u06a9\u0648\u0686\u06a9: \u06a9\u0627\u0647\u0634 \u062a\u06a9\u0631\u0627\u0631 \u062f\u0631 \u06a9\u062f \u0686\u0646\u062f\u06cc\u0646 \u0642\u0627\u0628\u0644\u06cc\u062a \u0628\u0631\u0627\u06cc \u0647\u0631 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 (\u0645\u0646\u0638\u0648\u0631 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0648\u0631\u0648\u062f\u06cc \u062a\u0627\u0628\u0639 \u0647\u0646\u062f\u0644\u0631 \u0645\u06cc\u0628\u0627\u0634\u062f \u0628\u0647 \u0628\u062e\u0634 \u062e\u0644\u0627\u0635\u0647 \u062f\u0631 \u0647\u0645\u06cc\u0646 \u0635\u0641\u062d\u0647 \u0645\u0631\u0627\u062c\u0639\u0647 \u0634\u0648\u062f) \u0628\u0627\u06af \u06a9\u0645\u062a\u0631",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "\u0627\u0633\u062a\u0648\u0627\u0631: \u0627\u06cc\u062c\u0627\u062f \u06a9\u062f\u06cc \u0622\u0645\u0627\u062f\u0647 \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u0645\u062d\u06cc\u0637 \u067e\u0631\u0648\u062f\u0627\u06a9\u0634\u0646 \u0648 \u062a\u0648\u0644\u06cc\u062f \u062e\u0648\u062f\u06a9\u0627\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f\u0647\u0627: \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 (\u0648 \u0645\u0646\u0637\u0628\u0642 \u0628\u0627) \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f\u0647\u0627\u06cc \u0645\u062a\u0646 \u0628\u0627\u0632 \u0645\u0631\u0628\u0648\u0637 \u0628\u0647 API: OpenAPI (\u0633\u0648\u06af\u0631 \u0633\u0627\u0628\u0642) \u0648 JSON Schema * \u062a\u062e\u0645\u06cc\u0646\u0647\u0627 \u0628\u0631 \u0627\u0633\u0627\u0633 \u062a\u0633\u062a\u0647\u0627\u06cc \u0627\u0646\u062c\u0627\u0645 \u0634\u062f\u0647 \u062f\u0631 \u06cc\u06a9 \u062a\u06cc\u0645 \u062a\u0648\u0633\u0639\u0647 \u062f\u0627\u062e\u0644\u06cc \u06a9\u0647 \u0645\u0634\u063a\u0648\u0644 \u0627\u06cc\u062c\u0627\u062f \u0628\u0631\u0646\u0627\u0645\u0647\u0647\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u062f\u06cc \u0648\u0627\u0642\u0639\u06cc \u0628\u0648\u062f\u0646\u062f \u0635\u0648\u0631\u062a \u06af\u0631\u0641\u062a\u0647 \u0627\u0633\u062a \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc \u062f\u06cc\u06af\u0631 \u0627\u0633\u067e\u0627\u0646\u0633\u0631\u0647\u0627 \u0646\u0638\u0631 \u062f\u06cc\u06af\u0631\u0627\u0646 \u062f\u0631 \u0645\u0648\u0631\u062f FastAPI [ ] I'm using FastAPI a ton these days [ ] I'm actually planning to use it for all of my team's ML services at Microsoft",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "Some of them are getting integrated into the core Windows product and some Office products \" Kabir Khan - Microsoft (ref) \"We adopted the FastAPI library to spawn a RESTserver that can be queried to obtain predictions [for Ludwig]\" Piero Molino, Yaroslav Dudin, and Sai Sumanth Miryala - Uber (ref) \"Netflix is pleased to announce the open-source release of our crisis management orchestration framework: Dispatch",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "[built with FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Im over the moon excited about FastAPI Its so fun \" Brian Okken - Python Bytes podcast host (ref) \"Honestly, what you've built looks super solid and polished In many ways, it's what I wanted Hug to be - it's really inspiring to see someone build that \" Timothy Crosley - Hug creator (ref) \"If you're looking to learn one modern framework for building REST APIs, check out FastAPI [",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "] It's fast, easy to use and easy to learn [ ]\" \"We've switched over to FastAPI for our APIs [ ] I think you'll like it [ ]\" Ines Montani - Matthew Honnibal - Explosion AI founders - spaCy creators (ref) - (ref) Typer, \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u06cc \u0645\u0639\u0627\u062f\u0644 FastAPI \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u0628\u0627 \u0648\u0627\u0633\u0637 \u062e\u0637 \u0641\u0631\u0645\u0627\u0646 \u0627\u06af\u0631 \u062f\u0631 \u062d\u0627\u0644 \u0633\u0627\u062e\u062a\u0646 \u0628\u0631\u0646\u0627\u0645\u0647\u0627\u06cc \u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 CLI (\u0628\u0647 \u062c\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u062f\u0631 \u0648\u0628) \u0647\u0633\u062a\u06cc\u062f \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 Typer \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f Typer \u062f\u0648\u0642\u0644\u0648\u06cc \u06a9\u0648\u0686\u06a9\u062a\u0631 FastAPI \u0627\u0633\u062a \u0648 \u0642\u0631\u0627\u0631 \u0627\u0633\u062a \u0645\u0639\u0627\u062f\u0644\u06cc \u0628\u0631\u0627\u06cc FastAPI \u062f\u0631 \u0628\u0631\u0646\u0627\u0645\u0647\u0647\u0627\u06cc CLI \u0628\u0627\u0634\u062f \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627 \u067e\u0627\u06cc\u062a\u0648\u0646 +\u06f3",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "\u06f6 FastAPI \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u0627\u0628\u0632\u0627\u0631\u0647\u0627\u06cc \u0642\u062f\u0631\u062a\u0645\u0646\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a: \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 Starlette \u0628\u0631\u0627\u06cc \u0628\u062e\u0634 \u0648\u0628 \u06a9\u062a\u0627\u0628\u062e\u0627\u0646\u0647 Pydantic \u0628\u0631\u0627\u06cc \u0628\u062e\u0634 \u062f\u0627\u062f\u0647 \u0646\u0635\u0628  pip install fastapi --- 100 \u0646\u0635\u0628 \u06cc\u06a9 \u0633\u0631\u0648\u0631 \u067e\u0631\u0648\u062f\u0627\u06a9\u0634\u0646 \u0646\u0638\u06cc\u0631 Uvicorn \u06cc\u0627 Hypercorn \u0646\u06cc\u0632 \u062c\u0632\u0621 \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u0633\u062a pip install \"uvicorn[standard]\" --- 100 \u0645\u062b\u0627\u0644 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f \u0641\u0627\u06cc\u0644\u06cc \u0628\u0647 \u0646\u0627\u0645 main py \u0628\u0627 \u0645\u062d\u062a\u0648\u0627\u06cc \u0632\u06cc\u0631 \u0627\u06cc\u062c\u0627\u062f \u06a9\u0646\u06cc\u062f: from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} \u0647\u0645\u0686\u0646\u06cc\u0646 \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 async def \u0646\u06cc\u0632 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f \u0627\u06af\u0631 \u062f\u0631 \u06a9\u062f\u062a\u0627\u0646 \u0627\u0632 async / await \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0645\u06cc\u06a9\u0646\u06cc\u062f \u0627\u0632 async def \u0628\u0631\u0627\u06cc \u062a\u0639\u0631\u06cc\u0641 \u062a\u0627\u0628\u0639 \u062e\u0648\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f: from typing import Optional from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "get(\"/items/{item_id}\") async def read_item(item_id: int, q: Optional[str] = None): return {\"item_id\": item_id, \"q\": q} \u062a\u0648\u062c\u0647: \u0627\u06af\u0631 \u0628\u0627 async / await \u0622\u0634\u0646\u0627 \u0646\u06cc\u0633\u062a\u06cc\u062f \u0628\u0647 \u0628\u062e\u0634 \"\u0639\u062c\u0644\u0647 \u062f\u0627\u0631\u06cc\u062f \" \u062f\u0631 \u0635\u0641\u062d\u0647 \u062f\u0631\u0628\u0627\u0631\u0647 async \u0648 await \u062f\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u062f\u0633\u062a\u0648\u0631 \u0632\u06cc\u0631 \u0633\u0631\u0648\u0631 \u0631\u0627 \u0627\u062c\u0631\u0627 \u06a9\u0646\u06cc\u062f:  uvicorn main:app --reload INFO: Uvicorn running on http://127 0 0 1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "INFO: Application startup complete \u062f\u0631\u0628\u0627\u0631\u0647 \u062f\u0633\u062a\u0648\u0631 uvicorn main:app --reload \u062f\u0633\u062a\u0648\u0631 uvicorn main:app \u0634\u0627\u0645\u0644 \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a: main: \u0641\u0627\u06cc\u0644 main py (\u0645\u0627\u0698\u0648\u0644 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647) app: \u0634\u06cc\u0621 \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u062f\u0631 \u0641\u0627\u06cc\u0644 main py \u062f\u0631 \u062e\u0637 app = FastAPI() --reload: \u0631\u06cc\u0633\u062a\u0627\u0631\u062a \u06a9\u0631\u062f\u0646 \u0633\u0631\u0648\u0631 \u0628\u0627 \u062a\u063a\u06cc\u06cc\u0631 \u06a9\u062f \u062a\u0646\u0647\u0627 \u062f\u0631 \u0647\u0646\u06af\u0627\u0645 \u062a\u0648\u0633\u0639\u0647 \u0627\u0632 \u0627\u06cc\u0646 \u06af\u0632\u06cc\u0646\u0647 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u0648\u062f \u0628\u0631\u0631\u0633\u06cc \u06a9\u0646\u06cc\u062f \u0622\u062f\u0631\u0633 http://127 0 0 1:8000/items/5 q=somequery \u0631\u0627 \u062f\u0631 \u0645\u0631\u0648\u0631\u06af\u0631 \u062e\u0648\u062f \u0628\u0627\u0632 \u06a9\u0646\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "\u067e\u0627\u0633\u062e JSON \u0632\u06cc\u0631 \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u0631\u062f: {\"item_id\": 5, \"q\": \"somequery\"} \u062a\u0627 \u0627\u06cc\u0646\u062c\u0627 \u0634\u0645\u0627 API\u0627\u06cc \u0633\u0627\u062e\u062a\u06cc\u062f \u06a9\u0647: \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc HTTP \u0628\u0647 \u0645\u0633\u06cc\u0631\u0647\u0627\u06cc / \u0648 /items/{item_id} \u0631\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u0645\u06cc\u06a9\u0646\u062f \u0647\u0631\u062f\u0648 \u0645\u0633\u06cc\u0631 \u0639\u0645\u0644\u06cc\u0627\u062a (\u06cc\u0627 HTTP \u0645\u062a\u062f) GET \u0631\u0627 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u062f \u0645\u0633\u06cc\u0631 /items/{item_id} \u0634\u0627\u0645\u0644 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0645\u0633\u06cc\u0631 item_id \u0627\u0632 \u0646\u0648\u0639 int \u0627\u0633\u062a \u0645\u0633\u06cc\u0631 /items/{item_id} \u0634\u0627\u0645\u0644 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u067e\u0631\u0633\u0645\u0627\u0646 \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc q \u0627\u0632 \u0646\u0648\u0639 str \u0627\u0633\u062a \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u062d\u0627\u0644 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127 0 0 1:8000/docs \u0628\u0631\u0648\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "\u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc (\u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u0628\u0647 \u06a9\u0645\u06a9 Swagger UI) \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u0631\u062f: \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062d\u0627\u0644 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127 0 0 1:8000/redoc \u0628\u0631\u0648\u06cc\u062f \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u062f\u06cc\u06af\u0631\u06cc \u0631\u0627 \u0645\u0634\u0627\u0647\u062f\u0647 \u062e\u0648\u0627\u0647\u06cc\u062f \u06a9\u0631\u062f \u06a9\u0647 \u0628\u0647 \u06a9\u0645\u06a9 ReDoc \u0627\u06cc\u062c\u0627\u062f \u0645\u06cc\u0634\u0648\u062f: \u062a\u063a\u06cc\u06cc\u0631 \u0645\u062b\u0627\u0644 \u062d\u0627\u0644 \u0641\u0627\u06cc\u0644 main py \u0631\u0627 \u0645\u0637\u0627\u0628\u0642 \u0632\u06cc\u0631 \u0648\u06cc\u0631\u0627\u06cc\u0634 \u06a9\u0646\u06cc\u062f \u062a\u0627 \u0628\u062a\u0648\u0627\u0646\u06cc\u062f \u0628\u062f\u0646\u0647 \u06cc\u06a9 \u062f\u0631\u062e\u0648\u0627\u0633\u062a PUT \u0631\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u06cc\u062f \u0628\u0647 \u06a9\u0645\u06a9 Pydantic \u0628\u062f\u0646\u0647 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0631\u0627 \u0628\u0627 \u0627\u0646\u0648\u0627\u0639 \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f \u067e\u0627\u06cc\u062a\u0648\u0646 \u062a\u0639\u0631\u06cc\u0641 \u06a9\u0646\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "from typing import Optional from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "name, \"item_id\": item_id} \u0633\u0631\u0648\u0631 \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0631\u06cc\u0627\u0633\u062a\u0627\u0631\u062a \u0645\u06cc\u0634\u0648\u062f (\u0632\u06cc\u0631\u0627 \u067e\u06cc\u0634\u062a\u0631 \u0627\u0632 \u06af\u0632\u06cc\u0646\u0647 --reload \u062f\u0631 \u062f\u0633\u062a\u0648\u0631 uvicorn \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0631\u062f\u06cc\u0645) \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u062c\u062f\u062f\u0627 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127 0 0 1:8000/docs \u0628\u0631\u0648\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "\u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062a\u0639\u0627\u0645\u0644\u06cc \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0628\u0647\u0631\u0648\u0632 \u0634\u062f\u0647 \u0627\u0633\u062a \u0648 \u0634\u0627\u0645\u0644 \u0628\u062f\u0646\u0647 \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u062f\u0631 \u0645\u0631\u062d\u0644\u0647 \u0642\u0628\u0644 \u0627\u0633\u062a: \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \"Try it out\" \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f \u0627\u06a9\u0646\u0648\u0646 \u0645\u06cc\u062a\u0648\u0627\u0646\u06cc\u062f \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0647\u0631 API \u0631\u0627 \u0645\u0634\u062e\u0635 \u06a9\u0631\u062f\u0647 \u0648 \u0628\u0647 \u0635\u0648\u0631\u062a \u0645\u0633\u062a\u0642\u06cc\u0645 \u0628\u0627 \u0622\u0646\u0647\u0627 \u062a\u0639\u0627\u0645\u0644 \u06a9\u0646\u06cc\u062f: \u0633\u067e\u0633 \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \"Execute\" \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f \u062e\u0648\u0627\u0647\u06cc\u062f \u062f\u06cc\u062f \u06a9\u0647 \u0648\u0627\u0633\u0637 \u06a9\u0627\u0631\u0628\u0631\u06cc \u0628\u0627 API\u0647\u0627\u06cc \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0631\u0642\u0631\u0627\u0631 \u06a9\u0631\u062f\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0631\u0627 \u0628\u0647 \u0622\u0646\u0647\u0627 \u0627\u0631\u0633\u0627\u0644 \u0645\u06cc\u06a9\u0646\u062f \u0633\u067e\u0633 \u0646\u062a\u0627\u06cc\u062c \u0631\u0627 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0631\u062f\u0647 \u0648 \u062f\u0631 \u0635\u0641\u062d\u0647 \u0646\u0634\u0627\u0646 \u0645\u06cc\u062f\u0647\u062f: \u062a\u063a\u06cc\u06cc\u0631 \u0645\u0633\u062a\u0646\u062f\u0627\u062a API \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u062d\u0627\u0644 \u0628\u0647 \u0622\u062f\u0631\u0633 http://127 0 0 1:8000/redoc \u0628\u0631\u0648\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "\u062e\u0648\u0627\u0647\u06cc\u062f \u062f\u06cc\u062f \u06a9\u0647 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062c\u0627\u06cc\u06af\u0632\u06cc\u0646 \u0646\u06cc\u0632 \u0628\u0647\u0631\u0648\u0632\u0631\u0633\u0627\u0646\u06cc \u0634\u062f\u0647 \u0648 \u0634\u0627\u0645\u0644 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u067e\u0631\u0633\u0645\u0627\u0646 \u0648 \u0628\u062f\u0646\u0647 \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u0645\u06cc\u0628\u0627\u0634\u062f: \u062e\u0644\u0627\u0635\u0647 \u0628\u0647 \u0637\u0648\u0631 \u062e\u0644\u0627\u0635\u0647 \u0634\u0645\u0627 \u06cc\u06a9 \u0628\u0627\u0631 \u0627\u0646\u0648\u0627\u0639 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627 \u0628\u062f\u0646\u0647 \u0648 \u063a\u06cc\u0631\u0647 \u0631\u0627 \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0648\u0631\u0648\u062f\u06cc \u062a\u0627\u0628\u0639 \u062e\u0648\u062f \u062a\u0639\u0631\u06cc\u0641 \u0645\u06cc\u06a9\u0646\u06cc\u062f \u0627\u06cc\u0646 \u06a9\u0627\u0631 \u0631\u0627 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u0646\u0648\u0627\u0639 \u0627\u0633\u062a\u0627\u0646\u062f\u0627\u0631\u062f \u0648 \u0645\u062f\u0631\u0646 \u0645\u0648\u062c\u0648\u062f \u062f\u0631 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0627\u0646\u062c\u0627\u0645 \u0645\u06cc\u062f\u0647\u06cc\u062f \u0646\u06cc\u0627\u0632\u06cc \u0628\u0647 \u06cc\u0627\u062f\u06af\u06cc\u0631\u06cc \u0646\u062d\u0648 \u062c\u062f\u06cc\u062f \u06cc\u0627 \u0645\u062a\u062f\u0647\u0627 \u0648 \u06a9\u0644\u0627\u0633\u0647\u0627\u06cc \u06cc\u06a9 \u06a9\u062a\u0627\u0628\u062e\u0627\u0646\u0647 \u0628\u062e\u0635\u0648\u0635 \u0648 \u063a\u06cc\u0631\u0647 \u0646\u06cc\u0633\u062a \u062a\u0646\u0647\u0627 \u067e\u0627\u06cc\u062a\u0648\u0646 +\u06f3 \u06f6 \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u0645\u062b\u0627\u0644 \u0628\u0631\u0627\u06cc \u06cc\u06a9 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0627\u0632 \u0646\u0648\u0639 int: item_id: int \u06cc\u0627 \u0628\u0631\u0627\u06cc \u06cc\u06a9 \u0645\u062f\u0644 \u067e\u06cc\u0686\u06cc\u062f\u0647\u062a\u0631 \u0645\u062b\u0644 Item: item: Item",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "\u0648 \u0628\u0627 \u0647\u0645\u06cc\u0646 \u0627\u0639\u0644\u0627\u0646 \u062a\u0645\u0627\u0645\u06cc \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u0632\u06cc\u0631 \u062f\u0631 \u062f\u0633\u062a\u0631\u0633 \u0642\u0631\u0627\u0631 \u0645\u06cc\u06af\u06cc\u0631\u062f: \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0648\u06cc\u0631\u0627\u06cc\u0634\u06af\u0631 \u0645\u062a\u0646\u06cc \u0634\u0627\u0645\u0644: \u062a\u06a9\u0645\u06cc\u0644 \u06a9\u062f \u0628\u0631\u0631\u0633\u06cc \u0627\u0646\u0648\u0627\u0639 \u062f\u0627\u062f\u0647 \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u062f\u0627\u062f\u0647: \u062e\u0637\u0627\u0647\u0627\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0648 \u0645\u0634\u062e\u0635 \u062f\u0631 \u0647\u0646\u06af\u0627\u0645 \u0646\u0627\u0645\u0639\u062a\u0628\u0631 \u0628\u0648\u062f\u0646 \u062f\u0627\u062f\u0647 \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u062d\u062a\u06cc \u0628\u0631\u0627\u06cc \u0627\u0634\u06cc\u0627\u0621 JSON \u062a\u0648 \u062f\u0631 \u062a\u0648 \u062a\u0628\u062f\u06cc\u0644 \u062f\u0627\u062f\u0647 \u0648\u0631\u0648\u062f\u06cc: \u06a9\u0647 \u0627\u0632 \u0634\u0628\u06a9\u0647 \u0631\u0633\u06cc\u062f\u0647 \u0628\u0647 \u0627\u0646\u0648\u0627\u0639 \u0648 \u062f\u0627\u062f\u0647 \u067e\u0627\u06cc\u062a\u0648\u0646\u06cc \u0627\u06cc\u0646 \u062f\u0627\u062f\u0647 \u0634\u0627\u0645\u0644: JSON \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0633\u06cc\u0631 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u067e\u0631\u0633\u0645\u0627\u0646 \u06a9\u0648\u06a9\u06cc\u0647\u0627 \u0633\u0631\u0622\u06cc\u0646\u062f\u0647\u0627 (\u0647\u062f\u0631\u0647\u0627) \u0641\u0631\u0645\u0647\u0627 \u0641\u0627\u06cc\u0644\u0647\u0627",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "\u062a\u0628\u062f\u06cc\u0644 \u062f\u0627\u062f\u0647 \u062e\u0631\u0648\u062c\u06cc: \u062a\u0628\u062f\u06cc\u0644 \u0627\u0632 \u0627\u0646\u0648\u0627\u0639 \u0648 \u062f\u0627\u062f\u0647 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0628\u0647 \u062f\u0627\u062f\u0647 \u0634\u0628\u06a9\u0647 (\u0645\u0627\u0646\u0646\u062f JSON): \u062a\u0628\u062f\u06cc\u0644 \u0627\u0646\u0648\u0627\u0639 \u062f\u0627\u062f\u0647 \u067e\u0627\u06cc\u062a\u0648\u0646\u06cc (str, int, float, bool, list \u0648 \u063a\u06cc\u0631\u0647) \u0627\u0634\u06cc\u0627\u0621 datetime \u0627\u0634\u06cc\u0627\u0621 UUID q\u0645\u062f\u0644\u0647\u0627\u06cc \u067e\u0627\u06cc\u06af\u0627\u0647\u062f\u0627\u062f\u0647 \u0648 \u0645\u0648\u0627\u0631\u062f \u0628\u06cc\u0634\u0645\u0627\u0631 \u062f\u06cc\u06af\u0631 \u062f\u0648 \u0645\u062f\u0644 \u0645\u0633\u062a\u0646\u062f API \u062a\u0639\u0627\u0645\u0644\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 : Swagger UI ReDoc \u0628\u0647 \u0645\u062b\u0627\u0644 \u0642\u0628\u0644\u06cc \u0628\u0627\u0632 \u0645\u06cc\u06af\u0631\u062f\u06cc\u0645 \u062f\u0631 \u0627\u06cc\u0646 \u0645\u062b\u0627\u0644 FastAPI \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0631\u0627 \u0627\u0646\u062c\u0627\u0645 \u0645\u06cc\u062f\u0647\u062f: \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 item_id \u062f\u0631 \u0645\u0633\u06cc\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc GET \u0648 PUT \u0645\u0648\u062c\u0648\u062f \u0627\u0633\u062a \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 item_id \u062f\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc GET \u0648 PUT \u0627\u0632 \u0646\u0648\u0639 int \u0627\u0633\u062a",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "\u0627\u06af\u0631 \u063a\u06cc\u0631 \u0627\u0632 \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0628\u0627\u0634\u062f \u0633\u0631\u0648\u06cc\u0633\u06af\u06cc\u0631\u0646\u062f\u0647 \u062e\u0637\u0627\u06cc \u0645\u0641\u06cc\u062f \u0648 \u0645\u0634\u062e\u0635\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u062e\u0648\u0627\u0647\u062f \u06a9\u0631\u062f \u0628\u0631\u0631\u0633\u06cc \u0648\u062c\u0648\u062f \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u067e\u0631\u0633\u0645\u0627\u0646 \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc q (\u0645\u0627\u0646\u0646\u062f http://127 0 0 1:8000/items/foo q=somequery) \u062f\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc GET \u0627\u0632 \u0622\u0646\u062c\u0627 \u06a9\u0647 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 q \u0628\u0627 = None \u0645\u0642\u062f\u0627\u0631\u062f\u0647\u06cc \u0634\u062f\u0647 \u0627\u0633\u062a \u0627\u06cc\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0627\u0633\u062a \u0627\u06af\u0631 \u0627\u0632 \u0645\u0642\u062f\u0627\u0631 \u0627\u0648\u0644\u06cc\u0647 None \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0646\u06a9\u0646\u06cc\u0645 \u0627\u06cc\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631 \u0627\u0644\u0632\u0627\u0645\u06cc \u062e\u0648\u0627\u0647\u062f \u0628\u0648\u062f (\u0647\u0645\u0627\u0646\u0646\u062f \u0628\u062f\u0646\u0647 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u062f\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a PUT)",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "\u0628\u0631\u0627\u06cc \u062f\u0631\u062e\u0648\u0627\u0633\u062a\u0647\u0627\u06cc PUT \u0628\u0647 \u0622\u062f\u0631\u0633 /items/{item_id} \u0628\u062f\u0646\u0647 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0628\u0627\u06cc\u062f \u0627\u0632 \u0646\u0648\u0639 JSON \u062a\u0639\u0631\u06cc\u0641 \u0634\u062f\u0647 \u0628\u0627\u0634\u062f: \u0628\u0631\u0631\u0633\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u0628\u062f\u0646\u0647 \u0634\u0627\u0645\u0644 \u0641\u06cc\u0644\u062f\u06cc \u0628\u0627 \u0646\u0627\u0645 name \u0648 \u0627\u0632 \u0646\u0648\u0639 str \u0627\u0633\u062a \u0628\u0631\u0631\u0633\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u0628\u062f\u0646\u0647 \u0634\u0627\u0645\u0644 \u0641\u06cc\u0644\u062f\u06cc \u0628\u0627 \u0646\u0627\u0645 price \u0648 \u0627\u0632 \u0646\u0648\u0639 float \u0627\u0633\u062a \u0628\u0631\u0631\u0633\u06cc \u0627\u06cc\u0646\u06a9\u0647 \u0628\u062f\u0646\u0647 \u0634\u0627\u0645\u0644 \u0641\u06cc\u0644\u062f\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0628\u0627 \u0646\u0627\u0645 is_offer \u0627\u0633\u062a \u06a9\u0647 \u062f\u0631 \u0635\u0648\u0631\u062a \u0648\u062c\u0648\u062f \u0628\u0627\u06cc\u062f \u0627\u0632 \u0646\u0648\u0639 bool \u0628\u0627\u0634\u062f \u062a\u0645\u0627\u0645\u06cc \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0628\u0631\u0627\u06cc \u0627\u0634\u06cc\u0627\u0621 JSON \u062f\u0631 \u0647\u0631 \u0639\u0645\u0642\u06cc \u0642\u0627\u0628\u0644 \u0628\u0631\u0631\u0633\u06cc \u0645\u06cc\u0628\u0627\u0634\u062f \u062a\u0628\u062f\u06cc\u0644 \u0627\u0632/\u0628\u0647 JSON \u0628\u0647 \u0635\u0648\u0631\u062a \u062e\u0648\u062f\u06a9\u0627\u0631 \u0645\u0633\u062a\u0646\u062f\u0633\u0627\u0632\u06cc \u0647\u0645\u0647 \u0686\u06cc\u0632 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 OpenAPI \u06a9\u0647 \u0645\u06cc\u062a\u0648\u0627\u0646 \u0627\u0632 \u0622\u0646 \u0628\u0631\u0627\u06cc \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0631\u062f: \u0633\u06cc\u0633\u062a\u0645 \u0645\u0633\u062a\u0646\u062f\u0627\u062a \u062a\u0639\u0627\u0645\u0644\u06cc",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        },
        {
          "content": "\u062a\u0648\u0644\u06cc\u062f \u062e\u0648\u062f\u06a9\u0627\u0631 \u06a9\u062f \u0633\u0631\u0648\u06cc\u0633\u06af\u06cc\u0631\u0646\u062f\u0647 \u062f\u0631 \u0632\u0628\u0627\u0646\u0647\u0627\u06cc \u0628\u0631\u0646\u0627\u0645\u0647\u0646\u0648\u06cc\u0633\u06cc \u0628\u06cc\u0634\u0645\u0627\u0631 \u0641\u0631\u0627\u0647\u0645 \u0633\u0627\u0632\u06cc \u06f2 \u0645\u0633\u062a\u0646\u062f \u062a\u0639\u0627\u0645\u0644\u06cc \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u0648\u0628 \u0628\u0647 \u0635\u0648\u0631\u062a \u067e\u06cc\u0634\u0641\u0631\u0636 \u0645\u0648\u0627\u0631\u062f \u0630\u06a9\u0631 \u0634\u062f\u0647 \u062a\u0646\u0647\u0627 \u067e\u0627\u0631\u0647\u0627\u06cc \u0627\u0632 \u0648\u06cc\u0698\u06af\u06cc\u0647\u0627\u06cc \u0628\u06cc\u0634\u0645\u0627\u0631 FastAPI \u0627\u0633\u062a \u0627\u0645\u0627 \u0627\u06cc\u062f\u0647\u0627\u06cc \u06a9\u0644\u06cc \u0627\u0632 \u0637\u0631\u0632 \u06a9\u0627\u0631 \u0622\u0646 \u062f\u0631 \u0627\u062e\u062a\u06cc\u0627\u0631 \u0642\u0631\u0627\u0631 \u0645\u06cc\u062f\u0647\u062f \u062e\u0637 \u0632\u06cc\u0631 \u0631\u0627 \u0628\u0647 \u0627\u06cc\u0646 \u0635\u0648\u0631\u062a \u062a\u063a\u06cc\u06cc\u0631 \u062f\u0647\u06cc\u062f: return {\"item_name\": item name, \"item_id\": item_id} \u0627\u0632: \"item_name\": item name \u0628\u0647: \"item_price\": item price",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_22"
        },
        {
          "content": "\u062f\u0631 \u062d\u06cc\u0646 \u062a\u0627\u06cc\u067e \u06a9\u0631\u062f\u0646 \u062a\u0648\u062c\u0647 \u06a9\u0646\u06cc\u062f \u06a9\u0647 \u0686\u06af\u0648\u0646\u0647 \u0648\u06cc\u0631\u0627\u06cc\u0634\u06af\u0631 \u0648\u06cc\u0698\u06af\u06cc\u0647\u0627\u06cc \u06a9\u0644\u0627\u0633 Item \u0631\u0627 \u062a\u0634\u062e\u06cc\u0635 \u062f\u0627\u062f\u0647 \u0648 \u0628\u0647 \u062a\u06a9\u0645\u06cc\u0644 \u062e\u0648\u062f\u06a9\u0627\u0631 \u0622\u0646\u0647\u0627 \u06a9\u0645\u06a9 \u0645\u06cc\u06a9\u0646\u062f: \u0628\u0631\u0627\u06cc \u0645\u0634\u0627\u0647\u062f\u0647 \u0645\u062b\u0627\u0644\u0647\u0627\u06cc \u06a9\u0627\u0645\u0644\u062a\u0631 \u06a9\u0647 \u0634\u0627\u0645\u0644 \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u0628\u06cc\u0634\u062a\u0631\u06cc \u0627\u0632 FastAPI \u0628\u0627\u0634\u062f \u0628\u0647 \u0628\u062e\u0634 \u0622\u0645\u0648\u0632\u0634 - \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631 \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f \u0647\u0634\u062f\u0627\u0631 \u0627\u0633\u067e\u0648\u06cc\u0644: \u0628\u062e\u0634 \u0622\u0645\u0648\u0632\u0634 - \u0631\u0627\u0647\u0646\u0645\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631 \u0634\u0627\u0645\u0644 \u0645\u0648\u0627\u0631\u062f \u0632\u06cc\u0631 \u0627\u0633\u062a: \u0627\u0639\u0644\u0627\u0646 \u067e\u0627\u0631\u0627\u0645\u062a\u0631\u0647\u0627\u06cc \u0645\u0648\u062c\u0648\u062f \u062f\u0631 \u0628\u062e\u0634\u0647\u0627\u06cc \u062f\u06cc\u06af\u0631 \u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0634\u0627\u0645\u0644: \u0633\u0631\u0622\u06cc\u0646\u062f (\u0647\u062f\u0631)\u0647\u0627 \u06a9\u0648\u06a9\u06cc\u0647\u0627 \u0641\u06cc\u0644\u062f\u0647\u0627\u06cc \u0641\u0631\u0645 \u0648 \u0641\u0627\u06cc\u0644\u0647\u0627 \u0686\u06af\u0648\u0646\u06af\u06cc \u062a\u0646\u0638\u06cc\u0645 \u0645\u062d\u062f\u0648\u062f\u06cc\u062a\u0647\u0627\u06cc \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0628\u0647 \u0639\u0646\u0648\u0627\u0646 \u0645\u062b\u0627\u0644 maximum_length \u06cc\u0627 regex \u0633\u06cc\u0633\u062a\u0645 Dependency Injection \u0642\u0648\u06cc \u0648 \u06a9\u0627\u0631\u0628\u0631\u062f\u06cc",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_23"
        },
        {
          "content": "\u0627\u0645\u0646\u06cc\u062a \u0648 \u062a\u0627\u06cc\u06cc\u062f \u0647\u0648\u06cc\u062a, \u0634\u0627\u0645\u0644 \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0627\u0632 OAuth2 \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 JWT tokens \u0648 HTTP Basic \u062a\u06a9\u0646\u06cc\u06a9 \u067e\u06cc\u0634\u0631\u0641\u062a\u0647 \u0628\u0631\u0627\u06cc \u062a\u0639\u0631\u06cc\u0641 \u0645\u062f\u0644\u0647\u0627\u06cc \u0686\u0646\u062f \u0633\u0637\u062d\u06cc JSON (\u0628\u0631 \u0627\u0633\u0627\u0633 Pydantic) \u0642\u0627\u0628\u0644\u06cc\u062a\u0647\u0627\u06cc \u0627\u0636\u0627\u0641\u06cc \u062f\u06cc\u06af\u0631 (\u0628\u0631 \u0627\u0633\u0627\u0633 Starlette) \u0634\u0627\u0645\u0644: \u0648\u0628\u0633\u0648\u06a9\u062a GraphQL \u062a\u0633\u062a\u0647\u0627\u06cc \u062e\u0648\u062f\u06a9\u0627\u0631 \u0622\u0633\u0627\u0646 \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 HTTPX \u0648 pytest CORS Cookie Sessions \u0648 \u0645\u0648\u0627\u0631\u062f \u0628\u06cc\u0634\u0645\u0627\u0631 \u062f\u06cc\u06af\u0631",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_24"
        },
        {
          "content": "\u06a9\u0627\u0631\u0627\u06cc\u06cc \u0645\u0639\u06cc\u0627\u0631 (\u0628\u0646\u0686\u0645\u0627\u0631\u06a9)\u0647\u0627\u06cc \u0645\u0633\u062a\u0642\u0644 TechEmpower \u062d\u0627\u06a9\u06cc \u0627\u0632 \u0622\u0646 \u0627\u0633\u062a \u06a9\u0647 \u0628\u0631\u0646\u0627\u0645\u0647\u0647\u0627\u06cc FastAPI \u06a9\u0647 \u062a\u062d\u062a Uvicorn \u0627\u062c\u0631\u0627 \u0645\u06cc\u0634\u0648\u062f \u06cc\u06a9\u06cc \u0627\u0632 \u0633\u0631\u06cc\u0639\u062a\u0631\u06cc\u0646 \u0641\u0631\u06cc\u0645\u0648\u0631\u06a9\u0647\u0627\u06cc \u0645\u0628\u062a\u0646\u06cc \u0628\u0631 \u067e\u0627\u06cc\u062a\u0648\u0646 \u0627\u0633\u062a \u06a9\u0647 \u06a9\u0645\u06cc \u0636\u0639\u06cc\u0641\u062a\u0631 \u0627\u0632 Starlette \u0648 Uvicorn \u0639\u0645\u0644 \u0645\u06cc\u06a9\u0646\u062f (\u0641\u0631\u06cc\u0645\u0648\u0631\u06a9 \u0648 \u0633\u0631\u0648\u0631\u06cc \u06a9\u0647 FastAPI \u0628\u0631 \u0627\u0633\u0627\u0633 \u0622\u0646\u0647\u0627 \u0627\u06cc\u062c\u0627\u062f \u0634\u062f\u0647 \u0627\u0633\u062a) (*) \u0628\u0631\u0627\u06cc \u062f\u0631\u06a9 \u0628\u0647\u062a\u0631\u06cc \u0627\u0632 \u0627\u06cc\u0646 \u0645\u0648\u0636\u0648\u0639 \u0628\u0647 \u0628\u062e\u0634 \u0628\u0646\u0686\u0645\u0627\u0631\u06a9\u0647\u0627 \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f \u0646\u06cc\u0627\u0632\u0645\u0646\u062f\u06cc\u0647\u0627\u06cc \u0627\u062e\u062a\u06cc\u0627\u0631\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 Pydantic: email-validator - \u0628\u0631\u0627\u06cc \u0627\u0639\u062a\u0628\u0627\u0631\u0633\u0646\u062c\u06cc \u0622\u062f\u0631\u0633\u0647\u0627\u06cc \u0627\u06cc\u0645\u06cc\u0644 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 Starlette: HTTPX - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0645\u06cc\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 TestClient \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_25"
        },
        {
          "content": "aiofiles - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0645\u06cc\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 FileResponse \u0648 StaticFiles \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f jinja2 - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 \u067e\u06cc\u06a9\u0631\u0628\u0646\u062f\u06cc \u067e\u06cc\u0634\u0641\u0631\u0636 \u0628\u0631\u0627\u06cc \u0642\u0627\u0644\u0628\u0647\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f python-multipart - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 request form() \u0627\u0632 \u0642\u0627\u0628\u0644\u06cc\u062a \"\u062a\u062c\u0632\u06cc\u0647 (parse)\" \u0641\u0631\u0645 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f itsdangerous - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u06cc\u062f \u0627\u0632 SessionMiddleware \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u06a9\u0646\u06cc\u062f pyyaml - \u0628\u0631\u0627\u06cc \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc SchemaGenerator \u062f\u0631 Starlet (\u0628\u0647 \u0627\u062d\u062a\u0645\u0627\u0644 \u0632\u06cc\u0627\u062f \u0628\u0631\u0627\u06cc \u06a9\u0627\u0631 \u06a9\u0631\u062f\u0646 \u0628\u0627 FastAPI \u0628\u0647 \u0622\u0646 \u0646\u06cc\u0627\u0632\u06cc \u067e\u06cc\u062f\u0627 \u0646\u0645\u06cc\u06a9\u0646\u06cc\u062f) graphene - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0627\u0632 GraphQLApp \u067e\u0634\u062a\u06cc\u0628\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u062f",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_26"
        },
        {
          "content": "\u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0634\u062f\u0647 \u062a\u0648\u0633\u0637 FastAPI / Starlette: uvicorn - \u0628\u0631\u0627\u06cc \u0633\u0631\u0648\u0631 \u0627\u062c\u0631\u0627 \u06a9\u0646\u0646\u062f\u0647 \u0628\u0631\u0646\u0627\u0645\u0647 \u0648\u0628 orjson - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 ORJSONResponse \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f ujson - \u062f\u0631 \u0635\u0648\u0631\u062a\u06cc \u06a9\u0647 \u0628\u062e\u0648\u0627\u0647\u06cc\u062f \u0627\u0632 UJSONResponse \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u06a9\u0646\u06cc\u062f \u0645\u06cc\u062a\u0648\u0627\u0646 \u0647\u0645\u0647 \u0627\u06cc\u0646 \u0645\u0648\u0627\u0631\u062f \u0631\u0627 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u062f\u0633\u062a\u0648\u0631 pip install fastapi[all] \u0628\u0647 \u0635\u0648\u0631\u062a \u06cc\u06a9\u062c\u0627 \u0646\u0635\u0628 \u06a9\u0631\u062f \u0644\u0627\u06cc\u0633\u0646\u0633 \u0627\u06cc\u0646 \u067e\u0631\u0648\u0698\u0647 \u0645\u0634\u0645\u0648\u0644 \u0642\u0648\u0627\u0646\u06cc\u0646 \u0648 \u0645\u0642\u0631\u0631\u0627\u062a \u0644\u0627\u06cc\u0633\u0646\u0633 MIT \u0627\u0633\u062a \u0628\u0631\u06af\u0634\u062a \u0628\u0647 \u0628\u0627\u0644\u0627",
          "url": "https://fastapi.tiangolo.com/fa/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_27"
        }
      ],
      "library": "fastapi"
    },
    {
      "url": "https://fastapi.tiangolo.com/fr/#fastapi",
      "title": "FastAPI",
      "content": "FastAPI fastapi/fastapi FastAPI FastAPI Table des mati\u00e8res Sponsors Opinions Typer, le FastAPI des CLI Pr\u00e9requis Installation Exemple Cr\u00e9ez Lancez V\u00e9rifiez Documentation API interactive Documentation API alternative Exemple plus pouss\u00e9 Plus loin avec la documentation API interactive Plus loin avec la documentation API alternative En r\u00e9sum\u00e9 Performance D\u00e9pendances facultatives Licence Fonctionnalit\u00e9s Apprendre Apprendre Introduction aux Types Python Concurrence et les mots-cl\u00e9s async et await Environment Variables Virtual Environments Tutoriel - Guide utilisateur - Introduction Tutoriel - Guide utilisateur - Introduction D\u00e9marrage Param\u00e8tres de chemin Param\u00e8tres de requ\u00eate Corps de la requ\u00eate Param\u00e8tres de requ\u00eate et validations de cha\u00eenes de caract\u00e8res Param\u00e8tres de chemin et validations num\u00e9riques Query Parameter Models Body - Param\u00e8tres multiples Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files T\u00e2ches d'arri\u00e8re-plan Metadata and Docs URLs Static Files Testing D\u00e9bogage Guide de l'utilisateur avanc\u00e9 Guide de l'utilisateur avanc\u00e9 Configuration avanc\u00e9e des param\u00e8tres de chemin Codes HTTP suppl\u00e9mentaires Renvoyer directement une r\u00e9ponse Custom Response - HTML, Stream, File, others R\u00e9ponses suppl\u00e9mentaires dans OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI D\u00e9ploiement D\u00e9ploiement \u00c0 propos des versions de FastAPI \u00c0 propos de HTTPS Ex\u00e9cuter un serveur manuellement - Uvicorn Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers D\u00e9ployer avec Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc. Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Obtenir de l'aide Development - Contributing G\u00e9n\u00e9ration de projets - Mod\u00e8le External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, inspiration et comparaisons Histoire, conception et avenir Test de performance Repository Management Release Notes Table des mati\u00e8res Sponsors Opinions Typer, le FastAPI des CLI Pr\u00e9requis Installation Exemple Cr\u00e9ez Lancez V\u00e9rifiez Documentation API interactive Documentation API alternative Exemple plus pouss\u00e9 Plus loin avec la documentation API interactive Plus loin avec la documentation API alternative En r\u00e9sum\u00e9 Performance D\u00e9pendances facultatives Licence FastAPI Framework FastAPI, haute performance, facile \u00e0 apprendre, rapide \u00e0 coder, pr\u00eat pour la production Documentation : https://fastapi.tiangolo.com Code Source : https://github.com/fastapi/fastapi FastAPI est un framework web moderne et rapide (haute performance) pour la cr\u00e9ation d'API avec Python, bas\u00e9 sur les annotations de type standard de Python. Les principales fonctionnalit\u00e9s sont : Rapidit\u00e9 : De tr\u00e8s hautes performances, au niveau de NodeJS et Go (gr\u00e2ce \u00e0 Starlette et Pydantic). L'un des frameworks Python les plus rapides. Rapide \u00e0 coder : Augmente la vitesse de d\u00e9veloppement des fonctionnalit\u00e9s d'environ 200  \u00e0 300 . * Moins de bugs : R\u00e9duit d'environ 40  les erreurs induites par le d\u00e9veloppeur. * Intuitif : Excellente compatibilit\u00e9 avec les IDE. Compl\u00e9tion compl\u00e8te. Moins de temps pass\u00e9 \u00e0 d\u00e9boguer. Facile : Con\u00e7u pour \u00eatre facile \u00e0 utiliser et \u00e0 apprendre. Moins de temps pass\u00e9 \u00e0 lire la documentation. Concis : Diminue la duplication de code. De nombreuses fonctionnalit\u00e9s li\u00e9es \u00e0 la d\u00e9claration de chaque param\u00e8tre. Moins de bugs. Robuste : Obtenez un code pr\u00eat pour la production. Avec une documentation interactive automatique. Bas\u00e9 sur des normes : Bas\u00e9 sur (et enti\u00e8rement compatible avec) les standards ouverts pour les APIs : OpenAPI (pr\u00e9c\u00e9demment connu sous le nom de Swagger) et JSON Schema. * estimation bas\u00e9e sur des tests d'une \u00e9quipe de d\u00e9veloppement interne, construisant des applications de production. Sponsors Other sponsors Opinions \"[...] J'utilise beaucoup FastAPI ces derniers temps. [...] Je pr\u00e9vois de l'utiliser dans mon \u00e9quipe pour tous les services de ML chez Microsoft. Certains d'entre eux seront int\u00e9gr\u00e9s dans le coeur de Windows et dans certains produits Office.\" Kabir Khan - Microsoft (ref) \"Nous avons adopt\u00e9 la biblioth\u00e8que FastAPI pour cr\u00e9er un serveur REST qui peut \u00eatre interrog\u00e9 pour obtenir des pr\u00e9dictions. [pour Ludwig]\" Piero Molino, Yaroslav Dudin et Sai Sumanth Miryala - Uber (ref) \"Netflix a le plaisir d'annoncer la sortie en open-source de notre framework d'orchestration de gestion de crise : Dispatch ! [construit avec FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Je suis tr\u00e8s enthousiaste \u00e0 propos de FastAPI. C'est un bonheur !\" Brian Okken - Auteur du podcast Python Bytes (ref) \"Honn\u00eatement, ce que vous avez construit a l'air super solide et \u00e9l\u00e9gant. A bien des \u00e9gards, c'est comme \u00e7a que je voulais que Hug soit - c'est vraiment inspirant de voir quelqu'un construire \u00e7a.\" Timothy Crosley - Cr\u00e9ateur de Hug (ref) \"Si vous cherchez \u00e0 apprendre un framework moderne pour cr\u00e9er des APIs REST, regardez FastAPI [...] C'est rapide, facile \u00e0 utiliser et \u00e0 apprendre [...]\" \"Nous sommes pass\u00e9s \u00e0 FastAPI pour nos APIs [...] Je pense que vous l'aimerez [...]\" Ines Montani - Matthew Honnibal - Fondateurs de Explosion AI - Cr\u00e9ateurs de spaCy (ref) - (ref) \"Si quelqu'un cherche \u00e0 construire une API Python de production, je recommande vivement FastAPI. Il est bien con\u00e7u, simple \u00e0 utiliser et tr\u00e8s \u00e9volutif. Il est devenu un composant cl\u00e9 dans notre strat\u00e9gie de d\u00e9veloppement API first et il est \u00e0 l'origine de nombreux automatismes et services tels que notre ing\u00e9nieur virtuel TAC.\" Deon Pillsbury - Cisco (ref) Typer, le FastAPI des CLI Si vous souhaitez construire une application CLI utilisable dans un terminal au lieu d'une API web, regardez Typer. Typer est le petit fr\u00e8re de FastAPI. Et il est destin\u00e9 \u00e0 \u00eatre le FastAPI des CLI.   Pr\u00e9requis FastAPI repose sur les \u00e9paules de g\u00e9ants : Starlette pour les parties web. Pydantic pour les parties donn\u00e9es. Installation  pip install fastapi --- 100 Vous aurez \u00e9galement besoin d'un serveur ASGI pour la production tel que Uvicorn ou Hypercorn.  pip install \"uvicorn[standard]\" --- 100 Exemple Cr\u00e9ez Cr\u00e9ez un fichier main.py avec : from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Ou utilisez async def ... Si votre code utilise async / await, utilisez async def : from typing import Union from fastapi import FastAPI app = FastAPI() app.get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Note Si vous n'\u00eates pas familier avec cette notion, consultez la section \"Vous \u00eates press\u00e9s ?\" \u00e0 propos de async et await dans la documentation. Lancez Lancez le serveur avec :  uvicorn main:app --reload INFO: Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup. INFO: Application startup complete. \u00c0 propos de la commande uvicorn main:app --reload ... La commande uvicorn main:app fait r\u00e9f\u00e9rence \u00e0 : main : le fichier main.py (le \"module\" Python). app : l'objet cr\u00e9\u00e9 \u00e0 l'int\u00e9rieur de main.py avec la ligne app = FastAPI(). --reload : fait red\u00e9marrer le serveur apr\u00e8s des changements de code. \u00c0 n'utiliser que pour le d\u00e9veloppement. V\u00e9rifiez Ouvrez votre navigateur \u00e0 l'adresse http://127.0.0.1:8000/items/5?q=somequery. Vous obtenez alors cette r\u00e9ponse JSON : {\"item_id\": 5, \"q\": \"somequery\"} Vous venez de cr\u00e9er une API qui : Re\u00e7oit les requ\u00eates HTTP pour les chemins / et /items/{item_id}. Les deux chemins acceptent des op\u00e9rations GET (\u00e9galement connu sous le nom de m\u00e9thodes HTTP). Le chemin /items/{item_id} a un param\u00e8tre item_id qui doit \u00eatre un int. Le chemin /items/{item_id} a un param\u00e8tre de requ\u00eate optionnel q de type str. Documentation API interactive Maintenant, rendez-vous sur http://127.0.0.1:8000/docs. Vous verrez la documentation interactive automatique de l'API (fournie par Swagger UI) : Documentation API alternative Et maintenant, rendez-vous sur http://127.0.0.1:8000/redoc. Vous verrez la documentation interactive automatique de l'API (fournie par ReDoc) : Exemple plus pouss\u00e9 Maintenant, modifiez le fichier main.py pour recevoir le corps d'une requ\u00eate PUT. D\u00e9clarez ce corps en utilisant les types Python standards, gr\u00e2ce \u00e0 Pydantic. from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app.get(\"/\") def read_root(): return {\"Hello\": \"World\"} app.get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app.put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item.name, \"item_id\": item_id} Le serveur se recharge normalement automatiquement (car vous avez pens\u00e9 \u00e0 --reload dans la commande uvicorn ci-dessus). Plus loin avec la documentation API interactive Maintenant, rendez-vous sur http://127.0.0.1:8000/docs. La documentation interactive de l'API sera automatiquement mise \u00e0 jour, y compris le nouveau corps de la requ\u00eate : Cliquez sur le bouton \"Try it out\", il vous permet de renseigner les param\u00e8tres et d'interagir directement avec l'API : Cliquez ensuite sur le bouton \"Execute\", l'interface utilisateur communiquera avec votre API, enverra les param\u00e8tres, obtiendra les r\u00e9sultats et les affichera \u00e0 l'\u00e9cran : Plus loin avec la documentation API alternative Et maintenant, rendez-vous sur http://127.0.0.1:8000/redoc. La documentation alternative refl\u00e9tera \u00e9galement le nouveau param\u00e8tre de requ\u00eate et le nouveau corps : En r\u00e9sum\u00e9 En r\u00e9sum\u00e9, vous d\u00e9clarez une fois les types de param\u00e8tres, le corps de la requ\u00eate, etc. en tant que param\u00e8tres de fonction. Vous faites cela avec les types Python standard modernes. Vous n'avez pas \u00e0 apprendre une nouvelle syntaxe, les m\u00e9thodes ou les classes d'une biblioth\u00e8que sp\u00e9cifique, etc. Juste du Python standard. Par exemple, pour un int: item_id: int ou pour un mod\u00e8le Item plus complexe : item: Item ... et avec cette d\u00e9claration unique, vous obtenez : Une assistance dans votre IDE, notamment : la compl\u00e9tion. la v\u00e9rification des types. La validation des donn\u00e9es : des erreurs automatiques et claires lorsque les donn\u00e9es ne sont pas valides. une validation m\u00eame pour les objets JSON profond\u00e9ment imbriqu\u00e9s. Une conversion des donn\u00e9es d'entr\u00e9e : venant du r\u00e9seau et allant vers les donn\u00e9es et types de Python, permettant de lire : le JSON. les param\u00e8tres du chemin. les param\u00e8tres de la requ\u00eate. les cookies. les en-t\u00eates. les formulaires. les fichiers. La conversion des donn\u00e9es de sortie : conversion des donn\u00e9es et types Python en donn\u00e9es r\u00e9seau (au format JSON), permettant de convertir : les types Python (str, int, float, bool, list, etc). les objets datetime. les objets UUID. les mod\u00e8les de base de donn\u00e9es. ... et beaucoup plus. La documentation API interactive automatique, avec 2 interfaces utilisateur au choix : Swagger UI. ReDoc. Pour revenir \u00e0 l'exemple de code pr\u00e9c\u00e9dent, FastAPI permet de : Valider que item_id existe dans le chemin des requ\u00eates GET et PUT. Valider que item_id est de type int pour les requ\u00eates GET et PUT. Si ce n'est pas le cas, le client voit une erreur utile et claire. V\u00e9rifier qu'il existe un param\u00e8tre de requ\u00eate facultatif nomm\u00e9 q (comme dans http://127.0.0.1:8000/items/foo?q=somequery) pour les requ\u00eates GET. Puisque le param\u00e8tre q est d\u00e9clar\u00e9 avec = None, il est facultatif. Sans le None, il serait n\u00e9cessaire (comme l'est le corps de la requ\u00eate dans le cas du PUT). Pour les requ\u00eates PUT vers /items/{item_id}, de lire le corps en JSON : V\u00e9rifier qu'il a un attribut obligatoire name qui devrait \u00eatre un str. V\u00e9rifier qu'il a un attribut obligatoire prix qui doit \u00eatre un float. V\u00e9rifier qu'il a un attribut facultatif is_offer, qui devrait \u00eatre un bool, s'il est pr\u00e9sent. Tout cela fonctionnerait \u00e9galement pour les objets JSON profond\u00e9ment imbriqu\u00e9s. Convertir de et vers JSON automatiquement. Documenter tout avec OpenAPI, qui peut \u00eatre utilis\u00e9 par : Les syst\u00e8mes de documentation interactifs. Les syst\u00e8mes de g\u00e9n\u00e9ration automatique de code client, pour de nombreuses langues. Fournir directement 2 interfaces web de documentation interactive. Nous n'avons fait qu'effleurer la surface, mais vous avez d\u00e9j\u00e0 une id\u00e9e de la fa\u00e7on dont tout cela fonctionne. Essayez de changer la ligne contenant : return {\"item_name\": item.name, \"item_id\": item_id} ... de : ... \"item_name\": item.name ... ... vers : ... \"item_price\": item.price ... ... et voyez comment votre \u00e9diteur compl\u00e9tera automatiquement les attributs et conna\u00eetra leurs types : Pour un exemple plus complet comprenant plus de fonctionnalit\u00e9s, voir le Tutoriel - Guide utilisateur. Spoiler alert : le tutoriel - guide utilisateur inclut : D\u00e9claration de param\u00e8tres provenant d'autres endroits diff\u00e9rents comme : en-t\u00eates., cookies, champs de formulaire et fichiers. L'utilisation de contraintes de validation comme maximum_length ou regex. Un syst\u00e8me d'injection de d\u00e9pendance tr\u00e8s puissant et facile \u00e0 utiliser . S\u00e9curit\u00e9 et authentification, y compris la prise en charge de OAuth2 avec les jetons JWT et l'authentification HTTP Basic. Des techniques plus avanc\u00e9es (mais tout aussi faciles) pour d\u00e9clarer les mod\u00e8les JSON profond\u00e9ment imbriqu\u00e9s (gr\u00e2ce \u00e0 Pydantic). Int\u00e9gration de GraphQL avec Strawberry et d'autres biblioth\u00e8ques. D'obtenir de nombreuses fonctionnalit\u00e9s suppl\u00e9mentaires (gr\u00e2ce \u00e0 Starlette) comme : WebSockets de tester le code tr\u00e8s facilement avec requests et pytest CORS Cookie Sessions ... et plus encore. Performance Les benchmarks TechEmpower ind\u00e9pendants montrent que les applications FastAPI s'ex\u00e9cutant sous Uvicorn sont parmi les frameworks existants en Python les plus rapides , juste derri\u00e8re Starlette et Uvicorn (utilis\u00e9s en interne par FastAPI). (*) Pour en savoir plus, consultez la section Benchmarks. D\u00e9pendances facultatives Utilis\u00e9es par Pydantic: email-validator - pour la validation des adresses email. Utilis\u00e9es par Starlette : requests - Obligatoire si vous souhaitez utiliser TestClient. jinja2 - Obligatoire si vous souhaitez utiliser la configuration de template par d\u00e9faut. python-multipart - Obligatoire si vous souhaitez supporter le \"d\u00e9codage\" de formulaire avec request.form(). itsdangerous - Obligatoire pour la prise en charge de SessionMiddleware. pyyaml - Obligatoire pour le support SchemaGenerator de Starlette (vous n'en avez probablement pas besoin avec FastAPI). Utilis\u00e9es par FastAPI / Starlette : uvicorn - Pour le serveur qui charge et sert votre application. orjson - Obligatoire si vous voulez utiliser ORJSONResponse. ujson - Obligatoire si vous souhaitez utiliser UJSONResponse. Vous pouvez tout installer avec pip install fastapi[all]. Licence Ce projet est soumis aux termes de la licence MIT. Retour en haut de la page",
      "code_blocks": [
        "HTTPException",
        "WebSocketException",
        "BackgroundTasks",
        "HTTPConnection",
        "jsonable_encoder",
        "StaticFiles",
        "Jinja2Templates",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install fastapi\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "$ pip install \"uvicorn[standard]\"\n\n---> 100%",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "from typing import Union\n\nfrom fastapi import FastAPI\n\napp = FastAPI()\n\n\n@app.get(\"/\")\nasync def read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\nasync def read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "$ uvicorn main:app --reload\n\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
        "uvicorn main:app --reload",
        "uvicorn main:app",
        "app = FastAPI()",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "{\"item_id\": 5, \"q\": \"somequery\"}",
        "/items/{item_id}",
        "/items/{item_id}",
        "/items/{item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "from typing import Union\n\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\n\nclass Item(BaseModel):\n    name: str\n    price: float\n    is_offer: Union[bool, None] = None\n\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: Union[str, None] = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n\n@app.put(\"/items/{item_id}\")\ndef update_item(item_id: int, item: Item):\n    return {\"item_name\": item.name, \"item_id\": item_id}",
        "item_id: int",
        "item_id: int",
        "http://127.0.0.1:8000/items/foo?q=somequery",
        "/items/{item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "return {\"item_name\": item.name, \"item_id\": item_id}",
        "... \"item_name\": item.name ...",
        "... \"item_name\": item.name ...",
        "... \"item_price\": item.price ...",
        "... \"item_price\": item.price ...",
        "maximum_length",
        "email-validator",
        "python-multipart",
        "request.form()",
        "itsdangerous",
        "SessionMiddleware",
        "SchemaGenerator",
        "ORJSONResponse",
        "UJSONResponse",
        "pip install fastapi[all]"
      ],
      "chunks": [
        {
          "content": "FastAPI fastapi/fastapi FastAPI FastAPI Table des mati\u00e8res Sponsors Opinions Typer, le FastAPI des CLI Pr\u00e9requis Installation Exemple Cr\u00e9ez Lancez V\u00e9rifiez Documentation API interactive Documentation API alternative Exemple plus pouss\u00e9 Plus loin avec la documentation API interactive Plus loin avec la documentation API alternative En r\u00e9sum\u00e9 Performance D\u00e9pendances facultatives Licence Fonctionnalit\u00e9s Apprendre Apprendre Introduction aux Types Python Concurrence et les mots-cl\u00e9s async et await Environment Variables Virtual Environments Tutoriel - Guide utilisateur - Introduction Tutoriel - Guide utilisateur - Introduction D\u00e9marrage Param\u00e8tres de chemin Param\u00e8tres de requ\u00eate Corps de la requ\u00eate Param\u00e8tres de requ\u00eate et validations de cha\u00eenes de caract\u00e8res Param\u00e8tres de chemin et validations num\u00e9riques Query Parameter Models Body - Param\u00e8tres multiples Body - Fields Body - Nested Models Declare Request Example Data Extra Data Types Cookie Parameters Header Parameters Cookie Parameter Models Header Parameter Models Response Model - Return Type Extra Models Response Status Code Form Data Form Models Request Files Request Forms and Files Handling Errors Path Operation Configuration JSON Compatible Encoder Body - Updates Dependencies Dependencies Classes as Dependencies Sub-dependencies Dependencies in path operation decorators Global Dependencies Dependencies with yield Security Security Security - First Steps Get Current User Simple OAuth2 with Password and Bearer OAuth2 with Password (and hashing), Bearer with JWT tokens Middleware CORS (Cross-Origin Resource Sharing) SQL (Relational) Databases Bigger Applications - Multiple Files T\u00e2ches d'arri\u00e8re-plan Metadata and Docs URLs Static Files Testing D\u00e9bogage Guide de l'utilisateur avanc\u00e9 Guide de l'utilisateur avanc\u00e9 Configuration avanc\u00e9e des param\u00e8tres de chemin Codes HTTP suppl\u00e9mentaires Renvoyer directement une r\u00e9ponse Custom Response - HTML, Stream, File, others R\u00e9ponses suppl\u00e9mentaires dans OpenAPI Response Cookies Response Headers Response - Change Status Code Advanced Dependencies Advanced Security Advanced Security OAuth2 scopes HTTP Basic Auth Using the Request Directly Using Dataclasses Advanced Middleware Sub Applications - Mounts Behind a Proxy Templates WebSockets Lifespan Events Testing WebSockets Testing Events: startup - shutdown Testing Dependencies with Overrides Async Tests Settings and Environment Variables OpenAPI Callbacks OpenAPI Webhooks Including WSGI - Flask, Django, others Generate Clients FastAPI CLI D\u00e9ploiement D\u00e9ploiement \u00c0 propos des versions de FastAPI \u00c0 propos de HTTPS Ex\u00e9cuter un serveur manuellement - Uvicorn Deployments Concepts Deploy FastAPI on Cloud Providers Server Workers - Uvicorn with Workers D\u00e9ployer avec Docker How To - Recipes How To - Recipes General - How To - Recipes GraphQL Custom Request and APIRoute class Conditional OpenAPI Extending OpenAPI Separate OpenAPI Schemas for Input and Output or Not Custom Docs UI Static Assets (Self-Hosting) Configure Swagger UI Testing a Database Reference Reference FastAPI class Request Parameters Status Codes UploadFile class Exceptions - HTTPException and WebSocketException Dependencies - Depends() and Security() APIRouter class Background Tasks - BackgroundTasks Request class WebSockets HTTPConnection class Response class Custom Response Classes - File, HTML, Redirect, Streaming, etc",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_0"
        },
        {
          "content": "Middleware OpenAPI OpenAPI OpenAPI docs OpenAPI models Security Tools Encoders - jsonable_encoder Static Files - StaticFiles Templating - Jinja2Templates Test Client - TestClient FastAPI People Resources Resources Help FastAPI - Obtenir de l'aide Development - Contributing G\u00e9n\u00e9ration de projets - Mod\u00e8le External Links and Articles FastAPI and friends newsletter Repository Management Tasks About About Alternatives, inspiration et comparaisons Histoire, conception et avenir Test de performance Repository Management Release Notes Table des mati\u00e8res Sponsors Opinions Typer, le FastAPI des CLI Pr\u00e9requis Installation Exemple Cr\u00e9ez Lancez V\u00e9rifiez Documentation API interactive Documentation API alternative Exemple plus pouss\u00e9 Plus loin avec la documentation API interactive Plus loin avec la documentation API alternative En r\u00e9sum\u00e9 Performance D\u00e9pendances facultatives Licence FastAPI Framework FastAPI, haute performance, facile \u00e0 apprendre, rapide \u00e0 coder, pr\u00eat pour la production Documentation : https://fastapi",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_1"
        },
        {
          "content": "tiangolo com Code Source : https://github com/fastapi/fastapi FastAPI est un framework web moderne et rapide (haute performance) pour la cr\u00e9ation d'API avec Python, bas\u00e9 sur les annotations de type standard de Python Les principales fonctionnalit\u00e9s sont : Rapidit\u00e9 : De tr\u00e8s hautes performances, au niveau de NodeJS et Go (gr\u00e2ce \u00e0 Starlette et Pydantic) L'un des frameworks Python les plus rapides Rapide \u00e0 coder : Augmente la vitesse de d\u00e9veloppement des fonctionnalit\u00e9s d'environ 200  \u00e0 300",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_2"
        },
        {
          "content": "* Moins de bugs : R\u00e9duit d'environ 40  les erreurs induites par le d\u00e9veloppeur * Intuitif : Excellente compatibilit\u00e9 avec les IDE Compl\u00e9tion compl\u00e8te Moins de temps pass\u00e9 \u00e0 d\u00e9boguer Facile : Con\u00e7u pour \u00eatre facile \u00e0 utiliser et \u00e0 apprendre Moins de temps pass\u00e9 \u00e0 lire la documentation Concis : Diminue la duplication de code De nombreuses fonctionnalit\u00e9s li\u00e9es \u00e0 la d\u00e9claration de chaque param\u00e8tre Moins de bugs Robuste : Obtenez un code pr\u00eat pour la production",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_3"
        },
        {
          "content": "Avec une documentation interactive automatique Bas\u00e9 sur des normes : Bas\u00e9 sur (et enti\u00e8rement compatible avec) les standards ouverts pour les APIs : OpenAPI (pr\u00e9c\u00e9demment connu sous le nom de Swagger) et JSON Schema * estimation bas\u00e9e sur des tests d'une \u00e9quipe de d\u00e9veloppement interne, construisant des applications de production Sponsors Other sponsors Opinions \"[ ] J'utilise beaucoup FastAPI ces derniers temps [",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_4"
        },
        {
          "content": "] Je pr\u00e9vois de l'utiliser dans mon \u00e9quipe pour tous les services de ML chez Microsoft Certains d'entre eux seront int\u00e9gr\u00e9s dans le coeur de Windows et dans certains produits Office \" Kabir Khan - Microsoft (ref) \"Nous avons adopt\u00e9 la biblioth\u00e8que FastAPI pour cr\u00e9er un serveur REST qui peut \u00eatre interrog\u00e9 pour obtenir des pr\u00e9dictions",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_5"
        },
        {
          "content": "[pour Ludwig]\" Piero Molino, Yaroslav Dudin et Sai Sumanth Miryala - Uber (ref) \"Netflix a le plaisir d'annoncer la sortie en open-source de notre framework d'orchestration de gestion de crise : Dispatch [construit avec FastAPI]\" Kevin Glisson, Marc Vilanova, Forest Monsen - Netflix (ref) \"Je suis tr\u00e8s enthousiaste \u00e0 propos de FastAPI C'est un bonheur \" Brian Okken - Auteur du podcast Python Bytes (ref) \"Honn\u00eatement, ce que vous avez construit a l'air super solide et \u00e9l\u00e9gant",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_6"
        },
        {
          "content": "A bien des \u00e9gards, c'est comme \u00e7a que je voulais que Hug soit - c'est vraiment inspirant de voir quelqu'un construire \u00e7a \" Timothy Crosley - Cr\u00e9ateur de Hug (ref) \"Si vous cherchez \u00e0 apprendre un framework moderne pour cr\u00e9er des APIs REST, regardez FastAPI [ ] C'est rapide, facile \u00e0 utiliser et \u00e0 apprendre [ ]\" \"Nous sommes pass\u00e9s \u00e0 FastAPI pour nos APIs [ ] Je pense que vous l'aimerez [",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_7"
        },
        {
          "content": "]\" Ines Montani - Matthew Honnibal - Fondateurs de Explosion AI - Cr\u00e9ateurs de spaCy (ref) - (ref) \"Si quelqu'un cherche \u00e0 construire une API Python de production, je recommande vivement FastAPI Il est bien con\u00e7u, simple \u00e0 utiliser et tr\u00e8s \u00e9volutif Il est devenu un composant cl\u00e9 dans notre strat\u00e9gie de d\u00e9veloppement API first et il est \u00e0 l'origine de nombreux automatismes et services tels que notre ing\u00e9nieur virtuel TAC",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_8"
        },
        {
          "content": "\" Deon Pillsbury - Cisco (ref) Typer, le FastAPI des CLI Si vous souhaitez construire une application CLI utilisable dans un terminal au lieu d'une API web, regardez Typer Typer est le petit fr\u00e8re de FastAPI Et il est destin\u00e9 \u00e0 \u00eatre le FastAPI des CLI Pr\u00e9requis FastAPI repose sur les \u00e9paules de g\u00e9ants : Starlette pour les parties web Pydantic pour les parties donn\u00e9es",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_9"
        },
        {
          "content": "Installation  pip install fastapi --- 100 Vous aurez \u00e9galement besoin d'un serveur ASGI pour la production tel que Uvicorn ou Hypercorn pip install \"uvicorn[standard]\" --- 100 Exemple Cr\u00e9ez Cr\u00e9ez un fichier main py avec : from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Ou utilisez async def",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_10"
        },
        {
          "content": "Si votre code utilise async / await, utilisez async def : from typing import Union from fastapi import FastAPI app = FastAPI() app get(\"/\") async def read_root(): return {\"Hello\": \"World\"} app get(\"/items/{item_id}\") async def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} Note Si vous n'\u00eates pas familier avec cette notion, consultez la section \"Vous \u00eates press\u00e9s \" \u00e0 propos de async et await dans la documentation",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_11"
        },
        {
          "content": "Lancez Lancez le serveur avec :  uvicorn main:app --reload INFO: Uvicorn running on http://127 0 0 1:8000 (Press CTRL+C to quit) INFO: Started reloader process [28720] INFO: Started server process [28722] INFO: Waiting for application startup INFO: Application startup complete \u00c0 propos de la commande uvicorn main:app --reload La commande uvicorn main:app fait r\u00e9f\u00e9rence \u00e0 : main : le fichier main py (le \"module\" Python) app : l'objet cr\u00e9\u00e9 \u00e0 l'int\u00e9rieur de main py avec la ligne app = FastAPI()",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_12"
        },
        {
          "content": "--reload : fait red\u00e9marrer le serveur apr\u00e8s des changements de code \u00c0 n'utiliser que pour le d\u00e9veloppement V\u00e9rifiez Ouvrez votre navigateur \u00e0 l'adresse http://127 0 0 1:8000/items/5 q=somequery Vous obtenez alors cette r\u00e9ponse JSON : {\"item_id\": 5, \"q\": \"somequery\"} Vous venez de cr\u00e9er une API qui : Re\u00e7oit les requ\u00eates HTTP pour les chemins / et /items/{item_id} Les deux chemins acceptent des op\u00e9rations GET (\u00e9galement connu sous le nom de m\u00e9thodes HTTP)",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_13"
        },
        {
          "content": "Le chemin /items/{item_id} a un param\u00e8tre item_id qui doit \u00eatre un int Le chemin /items/{item_id} a un param\u00e8tre de requ\u00eate optionnel q de type str Documentation API interactive Maintenant, rendez-vous sur http://127 0 0 1:8000/docs Vous verrez la documentation interactive automatique de l'API (fournie par Swagger UI) : Documentation API alternative Et maintenant, rendez-vous sur http://127 0 0 1:8000/redoc",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_14"
        },
        {
          "content": "Vous verrez la documentation interactive automatique de l'API (fournie par ReDoc) : Exemple plus pouss\u00e9 Maintenant, modifiez le fichier main py pour recevoir le corps d'une requ\u00eate PUT D\u00e9clarez ce corps en utilisant les types Python standards, gr\u00e2ce \u00e0 Pydantic from typing import Union from fastapi import FastAPI from pydantic import BaseModel app = FastAPI() class Item(BaseModel): name: str price: float is_offer: Union[bool, None] = None app get(\"/\") def read_root(): return {\"Hello\": \"World\"} app",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_15"
        },
        {
          "content": "get(\"/items/{item_id}\") def read_item(item_id: int, q: Union[str, None] = None): return {\"item_id\": item_id, \"q\": q} app put(\"/items/{item_id}\") def update_item(item_id: int, item: Item): return {\"item_name\": item name, \"item_id\": item_id} Le serveur se recharge normalement automatiquement (car vous avez pens\u00e9 \u00e0 --reload dans la commande uvicorn ci-dessus) Plus loin avec la documentation API interactive Maintenant, rendez-vous sur http://127 0 0 1:8000/docs",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_16"
        },
        {
          "content": "La documentation interactive de l'API sera automatiquement mise \u00e0 jour, y compris le nouveau corps de la requ\u00eate : Cliquez sur le bouton \"Try it out\", il vous permet de renseigner les param\u00e8tres et d'interagir directement avec l'API : Cliquez ensuite sur le bouton \"Execute\", l'interface utilisateur communiquera avec votre API, enverra les param\u00e8tres, obtiendra les r\u00e9sultats et les affichera \u00e0 l'\u00e9cran : Plus loin avec la documentation API alternative Et maintenant, rendez-vous sur http://127 0 0",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_17"
        },
        {
          "content": "1:8000/redoc La documentation alternative refl\u00e9tera \u00e9galement le nouveau param\u00e8tre de requ\u00eate et le nouveau corps : En r\u00e9sum\u00e9 En r\u00e9sum\u00e9, vous d\u00e9clarez une fois les types de param\u00e8tres, le corps de la requ\u00eate, etc en tant que param\u00e8tres de fonction Vous faites cela avec les types Python standard modernes Vous n'avez pas \u00e0 apprendre une nouvelle syntaxe, les m\u00e9thodes ou les classes d'une biblioth\u00e8que sp\u00e9cifique, etc Juste du Python standard",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_18"
        },
        {
          "content": "Par exemple, pour un int: item_id: int ou pour un mod\u00e8le Item plus complexe : item: Item et avec cette d\u00e9claration unique, vous obtenez : Une assistance dans votre IDE, notamment : la compl\u00e9tion la v\u00e9rification des types La validation des donn\u00e9es : des erreurs automatiques et claires lorsque les donn\u00e9es ne sont pas valides une validation m\u00eame pour les objets JSON profond\u00e9ment imbriqu\u00e9s",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_19"
        },
        {
          "content": "Une conversion des donn\u00e9es d'entr\u00e9e : venant du r\u00e9seau et allant vers les donn\u00e9es et types de Python, permettant de lire : le JSON les param\u00e8tres du chemin les param\u00e8tres de la requ\u00eate les cookies les en-t\u00eates les formulaires les fichiers La conversion des donn\u00e9es de sortie : conversion des donn\u00e9es et types Python en donn\u00e9es r\u00e9seau (au format JSON), permettant de convertir : les types Python (str, int, float, bool, list, etc) les objets datetime les objets UUID les mod\u00e8les de base de donn\u00e9es",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_20"
        },
        {
          "content": "et beaucoup plus La documentation API interactive automatique, avec 2 interfaces utilisateur au choix : Swagger UI ReDoc Pour revenir \u00e0 l'exemple de code pr\u00e9c\u00e9dent, FastAPI permet de : Valider que item_id existe dans le chemin des requ\u00eates GET et PUT Valider que item_id est de type int pour les requ\u00eates GET et PUT Si ce n'est pas le cas, le client voit une erreur utile et claire V\u00e9rifier qu'il existe un param\u00e8tre de requ\u00eate facultatif nomm\u00e9 q (comme dans http://127 0 0 1:8000/items/foo",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_21"
        },
        {
          "content": "q=somequery) pour les requ\u00eates GET Puisque le param\u00e8tre q est d\u00e9clar\u00e9 avec = None, il est facultatif Sans le None, il serait n\u00e9cessaire (comme l'est le corps de la requ\u00eate dans le cas du PUT) Pour les requ\u00eates PUT vers /items/{item_id}, de lire le corps en JSON : V\u00e9rifier qu'il a un attribut obligatoire name qui devrait \u00eatre un str V\u00e9rifier qu'il a un attribut obligatoire prix qui doit \u00eatre un float V\u00e9rifier qu'il a un attribut facultatif is_offer, qui devrait \u00eatre un bool, s'il est pr\u00e9sent",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_22"
        },
        {
          "content": "Tout cela fonctionnerait \u00e9galement pour les objets JSON profond\u00e9ment imbriqu\u00e9s Convertir de et vers JSON automatiquement Documenter tout avec OpenAPI, qui peut \u00eatre utilis\u00e9 par : Les syst\u00e8mes de documentation interactifs Les syst\u00e8mes de g\u00e9n\u00e9ration automatique de code client, pour de nombreuses langues Fournir directement 2 interfaces web de documentation interactive Nous n'avons fait qu'effleurer la surface, mais vous avez d\u00e9j\u00e0 une id\u00e9e de la fa\u00e7on dont tout cela fonctionne",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_23"
        },
        {
          "content": "Essayez de changer la ligne contenant : return {\"item_name\": item name, \"item_id\": item_id} de : \"item_name\": item name vers : \"item_price\": item price et voyez comment votre \u00e9diteur compl\u00e9tera automatiquement les attributs et conna\u00eetra leurs types : Pour un exemple plus complet comprenant plus de fonctionnalit\u00e9s, voir le Tutoriel - Guide utilisateur Spoiler alert : le tutoriel - guide utilisateur inclut : D\u00e9claration de param\u00e8tres provenant d'autres endroits diff\u00e9rents comme : en-t\u00eates",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_24"
        },
        {
          "content": ", cookies, champs de formulaire et fichiers L'utilisation de contraintes de validation comme maximum_length ou regex Un syst\u00e8me d'injection de d\u00e9pendance tr\u00e8s puissant et facile \u00e0 utiliser S\u00e9curit\u00e9 et authentification, y compris la prise en charge de OAuth2 avec les jetons JWT et l'authentification HTTP Basic Des techniques plus avanc\u00e9es (mais tout aussi faciles) pour d\u00e9clarer les mod\u00e8les JSON profond\u00e9ment imbriqu\u00e9s (gr\u00e2ce \u00e0 Pydantic)",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_25"
        },
        {
          "content": "Int\u00e9gration de GraphQL avec Strawberry et d'autres biblioth\u00e8ques D'obtenir de nombreuses fonctionnalit\u00e9s suppl\u00e9mentaires (gr\u00e2ce \u00e0 Starlette) comme : WebSockets de tester le code tr\u00e8s facilement avec requests et pytest CORS Cookie Sessions et plus encore",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_26"
        },
        {
          "content": "Performance Les benchmarks TechEmpower ind\u00e9pendants montrent que les applications FastAPI s'ex\u00e9cutant sous Uvicorn sont parmi les frameworks existants en Python les plus rapides , juste derri\u00e8re Starlette et Uvicorn (utilis\u00e9s en interne par FastAPI) (*) Pour en savoir plus, consultez la section Benchmarks D\u00e9pendances facultatives Utilis\u00e9es par Pydantic: email-validator - pour la validation des adresses email Utilis\u00e9es par Starlette : requests - Obligatoire si vous souhaitez utiliser TestClient",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_27"
        },
        {
          "content": "jinja2 - Obligatoire si vous souhaitez utiliser la configuration de template par d\u00e9faut python-multipart - Obligatoire si vous souhaitez supporter le \"d\u00e9codage\" de formulaire avec request form() itsdangerous - Obligatoire pour la prise en charge de SessionMiddleware pyyaml - Obligatoire pour le support SchemaGenerator de Starlette (vous n'en avez probablement pas besoin avec FastAPI) Utilis\u00e9es par FastAPI / Starlette : uvicorn - Pour le serveur qui charge et sert votre application",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_28"
        },
        {
          "content": "orjson - Obligatoire si vous voulez utiliser ORJSONResponse ujson - Obligatoire si vous souhaitez utiliser UJSONResponse Vous pouvez tout installer avec pip install fastapi[all] Licence Ce projet est soumis aux termes de la licence MIT Retour en haut de la page",
          "url": "https://fastapi.tiangolo.com/fr/#fastapi",
          "library": "fastapi",
          "chunk_id": "fastapi_29"
        }
      ],
      "library": "fastapi"
    }
  ],
  "scraped_at": 9316.230763875
}